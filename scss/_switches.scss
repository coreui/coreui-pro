//
// Base styles
//

// TODO: replace old switches.
.#{$prefix}switch-new {
  position: relative;
  height: $switch-height;
  padding-left: $switch-width + 10px;
}

.#{$prefix}switch-new-label {
  position: relative;
  margin: 0;
  line-height: $switch-height;
  &::before,
  &::after {
    position: absolute;
    display: block;
    margin-left: - ($switch-width + 10px);
    content: "";
  }
  &::before {
    width: $switch-width;
    height: $switch-height;
    cursor: pointer;
    background-color: $white;
    border: $border-width solid $border-color;
    transition: .15s ease-out;
    @include border-radius($border-radius);
  }
  &::after {
    top: $switch-handle-margin + 1px;
    left: $switch-handle-margin + 1px;
    box-sizing: border-box;
    width: $switch-height - ($switch-handle-margin * 2) - ($border-width * 2);
    height: $switch-height - ($switch-handle-margin * 2) - ($border-width * 2);
    background-color: $white;
    border: 1px solid $border-color;
    transition: .15s ease-out;
    @include border-radius($border-radius / 2);
  }
}

.#{$prefix}switch-new-input:checked ~ .#{$prefix}switch-new-label::after {
  transform: translateX($switch-width - $switch-height);
}

.#{$prefix}switch-new-input:focus ~ .#{$prefix}switch-new-label::before {
  @include themes($form-theme-map) {
    color: themes-get-value("input-focus-color");
    background-color: themes-get-value("input-focus-bg");
    border-color: themes-get-value("input-focus-border-color");
  }
  outline: 0;
  // Avoid using mixin so we can pass custom focus shadow properly
  @if $enable-shadows {
    box-shadow: $input-box-shadow, $input-focus-box-shadow;
  } @else {
    box-shadow: $input-focus-box-shadow;
  }
}

.#{$prefix}switch-new-input {
  position: absolute;
  top: 0;
  left: 0;
  z-index: 2;
  width: $switch-width;
  height: $switch-height;
  opacity: 0;
}

.#{$prefix}switch-new-with-label {
  .#{$prefix}switch-new-label {
    &::before {
      width: $switch-label-width;
      padding: 0 2px;
      font-size: $switch-font-size;
      font-weight: 600;
      line-height: $switch-height - 2px;
      color: $gray-300;
      text-align: right;
      text-transform: uppercase;
      content: attr(data-unchecked);
      transition: inherit;
    }
  }
  .#{$prefix}switch-new-input {
    width: $switch-label-width;
  }

  .#{$prefix}switch-new-input:checked ~ .#{$prefix}switch-new-label::before {
    text-align: left;
    content: attr(data-checked);
  }

  .#{$prefix}switch-new-input:checked ~ .#{$prefix}switch-new-label::after {
    transform: translateX($switch-label-width - $switch-height);
  }
}

.#{$prefix}switch {
  display: inline-block;
  width: $switch-width;
  height: $switch-height;
}

.#{$prefix}switch-input {
  position: absolute;
  z-index: -1;
  opacity: 0;
}

.#{$prefix}switch-slider {
  position: relative;
  display: block;
  height: inherit;
  cursor: pointer;
  background-color: $white;
  border: $border-width solid $border-color;
  transition: .15s ease-out;
  @include border-radius($border-radius);

  &::before {
    position: absolute;
    top: $switch-handle-margin;
    left: $switch-handle-margin;
    box-sizing: border-box;
    width: $switch-height - ($switch-handle-margin * 2) - ($border-width * 2);
    height: $switch-height - ($switch-handle-margin * 2) - ($border-width * 2);
    content: "";
    background-color: $white;
    border: 1px solid $border-color;
    transition: .15s ease-out;
    @include border-radius($border-radius / 2);
  }
}

.#{$prefix}switch-input:checked ~ .#{$prefix}switch-slider {
  &::before {
    transform: translateX($switch-width - $switch-height);
  }
}

.#{$prefix}switch-input:focus ~ .#{$prefix}switch-slider {
  @include themes($form-theme-map) {
    color: themes-get-value("input-focus-color");
    background-color: themes-get-value("input-focus-bg");
    border-color: themes-get-value("input-focus-border-color");
  }
  outline: 0;
  // Avoid using mixin so we can pass custom focus shadow properly
  @if $enable-shadows {
    box-shadow: $input-box-shadow, $input-focus-box-shadow;
  } @else {
    box-shadow: $input-focus-box-shadow;
  }
}

.#{$prefix}switch-input:disabled ~ .#{$prefix}switch-slider {
  cursor: not-allowed;
  opacity: .5;
}

//
// Switch Sizes
//

.#{$prefix}switch-lg {
  @include switch-size($switch-lg-width, $switch-lg-height, $switch-lg-font-size, $switch-handle-margin);
}

.#{$prefix}switch-sm {
  @include switch-size($switch-sm-width, $switch-sm-height, $switch-sm-font-size, $switch-handle-margin);
}

//
// Switch with label
//
.#{$prefix}switch-label {
  width: $switch-label-width;

  .#{$prefix}switch-slider {
    &::before {
      z-index: 2;
    }
    &::after {
      position: absolute;
      top: 50%;
      right: 1px;
      z-index: 1;
      width: 50%;
      margin-top: -.5em;
      font-size: $switch-font-size;
      font-weight: 600;
      line-height: 1;
      color: $gray-300;
      text-align: center;
      text-transform: uppercase;
      content: attr(data-unchecked);
      transition: inherit;
    }
  }

  .#{$prefix}switch-input:checked ~ .#{$prefix}switch-slider {
    &::before {
      transform: translateX($switch-label-width - $switch-height);
    }
    &::after {
      left: 1px;
      color: $white;
      content: attr(data-checked);
    }
  }

  // Sizes
  &.#{$prefix}switch-lg {
    @include switch-size($switch-label-lg-width, $switch-lg-height, $switch-lg-font-size, $switch-handle-margin);
  }

  &.#{$prefix}switch-sm {
    @include switch-size($switch-label-sm-width, $switch-sm-height, $switch-sm-font-size, $switch-handle-margin);
  }
}

//
// Switch 3d
//

.#{$prefix}switch-3d {
  .#{$prefix}switch-slider {
    background-color: $gray-100;
    border-radius: 50em;

    &::before {
      top: -1px;
      left: -1px;
      width: $switch-height;
      height: $switch-height;
      border: 0;
      border-radius: 50em;
      box-shadow: 0 2px 5px rgba($black, .3);
    }
  }

  // Sizes
  &.#{$prefix}switch-lg {
    @include switch-3d-size($switch-lg-width, $switch-lg-height);
  }

  &.#{$prefix}switch-sm {
    @include switch-3d-size($switch-sm-width, $switch-sm-height);
  }
}

//
// Switch Variants
//

@include theme-variant() {
  //normal style
  .#{$prefix}switch-#{$color} {
    @include switch-variant($value);
  }
  //outline style
  .#{$prefix}switch-outline-#{$color} {
    @include switch-outline-variant($value);
  }
  //outline alternative style
  .#{$prefix}switch-outline-#{$color}-alt {
    @include switch-outline-variant-alt($value);
  }
}

//
// Pill Style
//

.#{$prefix}switch-pill {
  .#{$prefix}switch-slider {
    border-radius: 50em;

    &::before {
      border-radius: 50em;
    }
  }
}
