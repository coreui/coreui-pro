(function () {
  'use strict';

  function cov_l74ucfg84() {
    var path = "/Users/lukaszholeczek/Projekty/CoreUI/mrholek/coreui-pro/js/src/util/index.js";
    var hash = "0844a517079ffcc835afb4fe90d46e540f971ff6";
    var global = new Function("return this")();
    var gcv = "__coverage__";
    var coverageData = {
      path: "/Users/lukaszholeczek/Projekty/CoreUI/mrholek/coreui-pro/js/src/util/index.js",
      statementMap: {
        "0": {
          start: {
            line: 11,
            column: 16
          },
          end: {
            line: 11,
            column: 25
          }
        },
        "1": {
          start: {
            line: 12,
            column: 32
          },
          end: {
            line: 12,
            column: 36
          }
        },
        "2": {
          start: {
            line: 13,
            column: 23
          },
          end: {
            line: 13,
            column: 38
          }
        },
        "3": {
          start: {
            line: 20,
            column: 22
          },
          end: {
            line: 27,
            column: 1
          }
        },
        "4": {
          start: {
            line: 21,
            column: 2
          },
          end: {
            line: 24,
            column: 3
          }
        },
        "5": {
          start: {
            line: 23,
            column: 4
          },
          end: {
            line: 23,
            column: 85
          }
        },
        "6": {
          start: {
            line: 23,
            column: 64
          },
          end: {
            line: 23,
            column: 84
          }
        },
        "7": {
          start: {
            line: 26,
            column: 2
          },
          end: {
            line: 26,
            column: 17
          }
        },
        "8": {
          start: {
            line: 30,
            column: 15
          },
          end: {
            line: 36,
            column: 1
          }
        },
        "9": {
          start: {
            line: 31,
            column: 2
          },
          end: {
            line: 33,
            column: 3
          }
        },
        "10": {
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 32,
            column: 22
          }
        },
        "11": {
          start: {
            line: 35,
            column: 2
          },
          end: {
            line: 35,
            column: 85
          }
        },
        "12": {
          start: {
            line: 42,
            column: 15
          },
          end: {
            line: 48,
            column: 1
          }
        },
        "13": {
          start: {
            line: 43,
            column: 2
          },
          end: {
            line: 45,
            column: 43
          }
        },
        "14": {
          start: {
            line: 44,
            column: 4
          },
          end: {
            line: 44,
            column: 49
          }
        },
        "15": {
          start: {
            line: 47,
            column: 2
          },
          end: {
            line: 47,
            column: 15
          }
        },
        "16": {
          start: {
            line: 50,
            column: 41
          },
          end: {
            line: 71,
            column: 1
          }
        },
        "17": {
          start: {
            line: 51,
            column: 2
          },
          end: {
            line: 53,
            column: 3
          }
        },
        "18": {
          start: {
            line: 52,
            column: 4
          },
          end: {
            line: 52,
            column: 12
          }
        },
        "19": {
          start: {
            line: 56,
            column: 48
          },
          end: {
            line: 56,
            column: 80
          }
        },
        "20": {
          start: {
            line: 58,
            column: 34
          },
          end: {
            line: 58,
            column: 71
          }
        },
        "21": {
          start: {
            line: 59,
            column: 31
          },
          end: {
            line: 59,
            column: 65
          }
        },
        "22": {
          start: {
            line: 62,
            column: 2
          },
          end: {
            line: 64,
            column: 3
          }
        },
        "23": {
          start: {
            line: 63,
            column: 4
          },
          end: {
            line: 63,
            column: 12
          }
        },
        "24": {
          start: {
            line: 67,
            column: 2
          },
          end: {
            line: 67,
            column: 55
          }
        },
        "25": {
          start: {
            line: 68,
            column: 2
          },
          end: {
            line: 68,
            column: 49
          }
        },
        "26": {
          start: {
            line: 70,
            column: 2
          },
          end: {
            line: 70,
            column: 111
          }
        },
        "27": {
          start: {
            line: 73,
            column: 29
          },
          end: {
            line: 75,
            column: 1
          }
        },
        "28": {
          start: {
            line: 74,
            column: 2
          },
          end: {
            line: 74,
            column: 50
          }
        },
        "29": {
          start: {
            line: 77,
            column: 18
          },
          end: {
            line: 87,
            column: 1
          }
        },
        "30": {
          start: {
            line: 78,
            column: 2
          },
          end: {
            line: 80,
            column: 3
          }
        },
        "31": {
          start: {
            line: 79,
            column: 4
          },
          end: {
            line: 79,
            column: 16
          }
        },
        "32": {
          start: {
            line: 82,
            column: 2
          },
          end: {
            line: 84,
            column: 3
          }
        },
        "33": {
          start: {
            line: 83,
            column: 4
          },
          end: {
            line: 83,
            column: 22
          }
        },
        "34": {
          start: {
            line: 86,
            column: 2
          },
          end: {
            line: 86,
            column: 47
          }
        },
        "35": {
          start: {
            line: 89,
            column: 19
          },
          end: {
            line: 100,
            column: 1
          }
        },
        "36": {
          start: {
            line: 91,
            column: 2
          },
          end: {
            line: 93,
            column: 3
          }
        },
        "37": {
          start: {
            line: 92,
            column: 4
          },
          end: {
            line: 92,
            column: 45
          }
        },
        "38": {
          start: {
            line: 95,
            column: 2
          },
          end: {
            line: 97,
            column: 3
          }
        },
        "39": {
          start: {
            line: 96,
            column: 4
          },
          end: {
            line: 96,
            column: 56
          }
        },
        "40": {
          start: {
            line: 99,
            column: 2
          },
          end: {
            line: 99,
            column: 13
          }
        },
        "41": {
          start: {
            line: 102,
            column: 18
          },
          end: {
            line: 127,
            column: 1
          }
        },
        "42": {
          start: {
            line: 103,
            column: 2
          },
          end: {
            line: 105,
            column: 3
          }
        },
        "43": {
          start: {
            line: 104,
            column: 4
          },
          end: {
            line: 104,
            column: 16
          }
        },
        "44": {
          start: {
            line: 107,
            column: 27
          },
          end: {
            line: 107,
            column: 97
          }
        },
        "45": {
          start: {
            line: 109,
            column: 24
          },
          end: {
            line: 109,
            column: 62
          }
        },
        "46": {
          start: {
            line: 111,
            column: 2
          },
          end: {
            line: 113,
            column: 3
          }
        },
        "47": {
          start: {
            line: 112,
            column: 4
          },
          end: {
            line: 112,
            column: 27
          }
        },
        "48": {
          start: {
            line: 115,
            column: 2
          },
          end: {
            line: 124,
            column: 3
          }
        },
        "49": {
          start: {
            line: 116,
            column: 20
          },
          end: {
            line: 116,
            column: 46
          }
        },
        "50": {
          start: {
            line: 117,
            column: 4
          },
          end: {
            line: 119,
            column: 5
          }
        },
        "51": {
          start: {
            line: 118,
            column: 6
          },
          end: {
            line: 118,
            column: 18
          }
        },
        "52": {
          start: {
            line: 121,
            column: 4
          },
          end: {
            line: 123,
            column: 5
          }
        },
        "53": {
          start: {
            line: 122,
            column: 6
          },
          end: {
            line: 122,
            column: 18
          }
        },
        "54": {
          start: {
            line: 126,
            column: 2
          },
          end: {
            line: 126,
            column: 25
          }
        },
        "55": {
          start: {
            line: 129,
            column: 19
          },
          end: {
            line: 143,
            column: 1
          }
        },
        "56": {
          start: {
            line: 130,
            column: 2
          },
          end: {
            line: 132,
            column: 3
          }
        },
        "57": {
          start: {
            line: 131,
            column: 4
          },
          end: {
            line: 131,
            column: 15
          }
        },
        "58": {
          start: {
            line: 134,
            column: 2
          },
          end: {
            line: 136,
            column: 3
          }
        },
        "59": {
          start: {
            line: 135,
            column: 4
          },
          end: {
            line: 135,
            column: 15
          }
        },
        "60": {
          start: {
            line: 138,
            column: 2
          },
          end: {
            line: 140,
            column: 3
          }
        },
        "61": {
          start: {
            line: 139,
            column: 4
          },
          end: {
            line: 139,
            column: 27
          }
        },
        "62": {
          start: {
            line: 142,
            column: 2
          },
          end: {
            line: 142,
            column: 89
          }
        },
        "63": {
          start: {
            line: 145,
            column: 23
          },
          end: {
            line: 166,
            column: 1
          }
        },
        "64": {
          start: {
            line: 146,
            column: 2
          },
          end: {
            line: 148,
            column: 3
          }
        },
        "65": {
          start: {
            line: 147,
            column: 4
          },
          end: {
            line: 147,
            column: 15
          }
        },
        "66": {
          start: {
            line: 151,
            column: 2
          },
          end: {
            line: 154,
            column: 3
          }
        },
        "67": {
          start: {
            line: 152,
            column: 17
          },
          end: {
            line: 152,
            column: 38
          }
        },
        "68": {
          start: {
            line: 153,
            column: 4
          },
          end: {
            line: 153,
            column: 51
          }
        },
        "69": {
          start: {
            line: 156,
            column: 2
          },
          end: {
            line: 158,
            column: 3
          }
        },
        "70": {
          start: {
            line: 157,
            column: 4
          },
          end: {
            line: 157,
            column: 18
          }
        },
        "71": {
          start: {
            line: 161,
            column: 2
          },
          end: {
            line: 163,
            column: 3
          }
        },
        "72": {
          start: {
            line: 162,
            column: 4
          },
          end: {
            line: 162,
            column: 15
          }
        },
        "73": {
          start: {
            line: 165,
            column: 2
          },
          end: {
            line: 165,
            column: 43
          }
        },
        "74": {
          start: {
            line: 168,
            column: 13
          },
          end: {
            line: 168,
            column: 21
          }
        },
        "75": {
          start: {
            line: 178,
            column: 15
          },
          end: {
            line: 180,
            column: 1
          }
        },
        "76": {
          start: {
            line: 179,
            column: 2
          },
          end: {
            line: 179,
            column: 22
          }
        },
        "77": {
          start: {
            line: 182,
            column: 18
          },
          end: {
            line: 188,
            column: 1
          }
        },
        "78": {
          start: {
            line: 183,
            column: 2
          },
          end: {
            line: 185,
            column: 3
          }
        },
        "79": {
          start: {
            line: 184,
            column: 4
          },
          end: {
            line: 184,
            column: 24
          }
        },
        "80": {
          start: {
            line: 187,
            column: 2
          },
          end: {
            line: 187,
            column: 13
          }
        },
        "81": {
          start: {
            line: 190,
            column: 34
          },
          end: {
            line: 190,
            column: 36
          }
        },
        "82": {
          start: {
            line: 192,
            column: 27
          },
          end: {
            line: 207,
            column: 1
          }
        },
        "83": {
          start: {
            line: 193,
            column: 2
          },
          end: {
            line: 206,
            column: 3
          }
        },
        "84": {
          start: {
            line: 195,
            column: 4
          },
          end: {
            line: 201,
            column: 5
          }
        },
        "85": {
          start: {
            line: 196,
            column: 6
          },
          end: {
            line: 200,
            column: 8
          }
        },
        "86": {
          start: {
            line: 197,
            column: 8
          },
          end: {
            line: 199,
            column: 9
          }
        },
        "87": {
          start: {
            line: 198,
            column: 10
          },
          end: {
            line: 198,
            column: 20
          }
        },
        "88": {
          start: {
            line: 203,
            column: 4
          },
          end: {
            line: 203,
            column: 44
          }
        },
        "89": {
          start: {
            line: 205,
            column: 4
          },
          end: {
            line: 205,
            column: 14
          }
        },
        "90": {
          start: {
            line: 209,
            column: 14
          },
          end: {
            line: 209,
            column: 58
          }
        },
        "91": {
          start: {
            line: 209,
            column: 20
          },
          end: {
            line: 209,
            column: 58
          }
        },
        "92": {
          start: {
            line: 211,
            column: 27
          },
          end: {
            line: 226,
            column: 1
          }
        },
        "93": {
          start: {
            line: 212,
            column: 2
          },
          end: {
            line: 225,
            column: 4
          }
        },
        "94": {
          start: {
            line: 213,
            column: 14
          },
          end: {
            line: 213,
            column: 25
          }
        },
        "95": {
          start: {
            line: 215,
            column: 4
          },
          end: {
            line: 224,
            column: 5
          }
        },
        "96": {
          start: {
            line: 228,
            column: 16
          },
          end: {
            line: 230,
            column: 1
          }
        },
        "97": {
          start: {
            line: 229,
            column: 2
          },
          end: {
            line: 229,
            column: 95
          }
        },
        "98": {
          start: {
            line: 232,
            column: 31
          },
          end: {
            line: 259,
            column: 1
          }
        },
        "99": {
          start: {
            line: 233,
            column: 2
          },
          end: {
            line: 236,
            column: 3
          }
        },
        "100": {
          start: {
            line: 234,
            column: 4
          },
          end: {
            line: 234,
            column: 21
          }
        },
        "101": {
          start: {
            line: 235,
            column: 4
          },
          end: {
            line: 235,
            column: 10
          }
        },
        "102": {
          start: {
            line: 238,
            column: 26
          },
          end: {
            line: 238,
            column: 27
          }
        },
        "103": {
          start: {
            line: 239,
            column: 27
          },
          end: {
            line: 239,
            column: 96
          }
        },
        "104": {
          start: {
            line: 241,
            column: 15
          },
          end: {
            line: 241,
            column: 20
          }
        },
        "105": {
          start: {
            line: 243,
            column: 18
          },
          end: {
            line: 251,
            column: 3
          }
        },
        "106": {
          start: {
            line: 244,
            column: 4
          },
          end: {
            line: 246,
            column: 5
          }
        },
        "107": {
          start: {
            line: 245,
            column: 6
          },
          end: {
            line: 245,
            column: 12
          }
        },
        "108": {
          start: {
            line: 248,
            column: 4
          },
          end: {
            line: 248,
            column: 17
          }
        },
        "109": {
          start: {
            line: 249,
            column: 4
          },
          end: {
            line: 249,
            column: 66
          }
        },
        "110": {
          start: {
            line: 250,
            column: 4
          },
          end: {
            line: 250,
            column: 21
          }
        },
        "111": {
          start: {
            line: 253,
            column: 2
          },
          end: {
            line: 253,
            column: 61
          }
        },
        "112": {
          start: {
            line: 254,
            column: 2
          },
          end: {
            line: 258,
            column: 22
          }
        },
        "113": {
          start: {
            line: 255,
            column: 4
          },
          end: {
            line: 257,
            column: 5
          }
        },
        "114": {
          start: {
            line: 256,
            column: 6
          },
          end: {
            line: 256,
            column: 45
          }
        },
        "115": {
          start: {
            line: 270,
            column: 29
          },
          end: {
            line: 287,
            column: 1
          }
        },
        "116": {
          start: {
            line: 271,
            column: 21
          },
          end: {
            line: 271,
            column: 32
          }
        },
        "117": {
          start: {
            line: 272,
            column: 14
          },
          end: {
            line: 272,
            column: 41
          }
        },
        "118": {
          start: {
            line: 276,
            column: 2
          },
          end: {
            line: 278,
            column: 3
          }
        },
        "119": {
          start: {
            line: 277,
            column: 4
          },
          end: {
            line: 277,
            column: 76
          }
        },
        "120": {
          start: {
            line: 280,
            column: 2
          },
          end: {
            line: 280,
            column: 33
          }
        },
        "121": {
          start: {
            line: 282,
            column: 2
          },
          end: {
            line: 284,
            column: 3
          }
        },
        "122": {
          start: {
            line: 283,
            column: 4
          },
          end: {
            line: 283,
            column: 45
          }
        },
        "123": {
          start: {
            line: 286,
            column: 2
          },
          end: {
            line: 286,
            column: 59
          }
        }
      },
      fnMap: {
        "0": {
          name: "(anonymous_0)",
          decl: {
            start: {
              line: 20,
              column: 22
            },
            end: {
              line: 20,
              column: 23
            }
          },
          loc: {
            start: {
              line: 20,
              column: 34
            },
            end: {
              line: 27,
              column: 1
            }
          },
          line: 20
        },
        "1": {
          name: "(anonymous_1)",
          decl: {
            start: {
              line: 23,
              column: 49
            },
            end: {
              line: 23,
              column: 50
            }
          },
          loc: {
            start: {
              line: 23,
              column: 64
            },
            end: {
              line: 23,
              column: 84
            }
          },
          line: 23
        },
        "2": {
          name: "(anonymous_2)",
          decl: {
            start: {
              line: 30,
              column: 15
            },
            end: {
              line: 30,
              column: 16
            }
          },
          loc: {
            start: {
              line: 30,
              column: 25
            },
            end: {
              line: 36,
              column: 1
            }
          },
          line: 30
        },
        "3": {
          name: "(anonymous_3)",
          decl: {
            start: {
              line: 42,
              column: 15
            },
            end: {
              line: 42,
              column: 16
            }
          },
          loc: {
            start: {
              line: 42,
              column: 25
            },
            end: {
              line: 48,
              column: 1
            }
          },
          line: 42
        },
        "4": {
          name: "(anonymous_4)",
          decl: {
            start: {
              line: 50,
              column: 41
            },
            end: {
              line: 50,
              column: 42
            }
          },
          loc: {
            start: {
              line: 50,
              column: 52
            },
            end: {
              line: 71,
              column: 1
            }
          },
          line: 50
        },
        "5": {
          name: "(anonymous_5)",
          decl: {
            start: {
              line: 73,
              column: 29
            },
            end: {
              line: 73,
              column: 30
            }
          },
          loc: {
            start: {
              line: 73,
              column: 40
            },
            end: {
              line: 75,
              column: 1
            }
          },
          line: 73
        },
        "6": {
          name: "(anonymous_6)",
          decl: {
            start: {
              line: 77,
              column: 18
            },
            end: {
              line: 77,
              column: 19
            }
          },
          loc: {
            start: {
              line: 77,
              column: 28
            },
            end: {
              line: 87,
              column: 1
            }
          },
          line: 77
        },
        "7": {
          name: "(anonymous_7)",
          decl: {
            start: {
              line: 89,
              column: 19
            },
            end: {
              line: 89,
              column: 20
            }
          },
          loc: {
            start: {
              line: 89,
              column: 29
            },
            end: {
              line: 100,
              column: 1
            }
          },
          line: 89
        },
        "8": {
          name: "(anonymous_8)",
          decl: {
            start: {
              line: 102,
              column: 18
            },
            end: {
              line: 102,
              column: 19
            }
          },
          loc: {
            start: {
              line: 102,
              column: 29
            },
            end: {
              line: 127,
              column: 1
            }
          },
          line: 102
        },
        "9": {
          name: "(anonymous_9)",
          decl: {
            start: {
              line: 129,
              column: 19
            },
            end: {
              line: 129,
              column: 20
            }
          },
          loc: {
            start: {
              line: 129,
              column: 30
            },
            end: {
              line: 143,
              column: 1
            }
          },
          line: 129
        },
        "10": {
          name: "(anonymous_10)",
          decl: {
            start: {
              line: 145,
              column: 23
            },
            end: {
              line: 145,
              column: 24
            }
          },
          loc: {
            start: {
              line: 145,
              column: 34
            },
            end: {
              line: 166,
              column: 1
            }
          },
          line: 145
        },
        "11": {
          name: "(anonymous_11)",
          decl: {
            start: {
              line: 168,
              column: 13
            },
            end: {
              line: 168,
              column: 14
            }
          },
          loc: {
            start: {
              line: 168,
              column: 19
            },
            end: {
              line: 168,
              column: 21
            }
          },
          line: 168
        },
        "12": {
          name: "(anonymous_12)",
          decl: {
            start: {
              line: 178,
              column: 15
            },
            end: {
              line: 178,
              column: 16
            }
          },
          loc: {
            start: {
              line: 178,
              column: 26
            },
            end: {
              line: 180,
              column: 1
            }
          },
          line: 178
        },
        "13": {
          name: "(anonymous_13)",
          decl: {
            start: {
              line: 182,
              column: 18
            },
            end: {
              line: 182,
              column: 19
            }
          },
          loc: {
            start: {
              line: 182,
              column: 24
            },
            end: {
              line: 188,
              column: 1
            }
          },
          line: 182
        },
        "14": {
          name: "(anonymous_14)",
          decl: {
            start: {
              line: 192,
              column: 27
            },
            end: {
              line: 192,
              column: 28
            }
          },
          loc: {
            start: {
              line: 192,
              column: 39
            },
            end: {
              line: 207,
              column: 1
            }
          },
          line: 192
        },
        "15": {
          name: "(anonymous_15)",
          decl: {
            start: {
              line: 196,
              column: 52
            },
            end: {
              line: 196,
              column: 53
            }
          },
          loc: {
            start: {
              line: 196,
              column: 58
            },
            end: {
              line: 200,
              column: 7
            }
          },
          line: 196
        },
        "16": {
          name: "(anonymous_16)",
          decl: {
            start: {
              line: 209,
              column: 14
            },
            end: {
              line: 209,
              column: 15
            }
          },
          loc: {
            start: {
              line: 209,
              column: 20
            },
            end: {
              line: 209,
              column: 58
            }
          },
          line: 209
        },
        "17": {
          name: "(anonymous_17)",
          decl: {
            start: {
              line: 211,
              column: 27
            },
            end: {
              line: 211,
              column: 28
            }
          },
          loc: {
            start: {
              line: 211,
              column: 37
            },
            end: {
              line: 226,
              column: 1
            }
          },
          line: 211
        },
        "18": {
          name: "(anonymous_18)",
          decl: {
            start: {
              line: 212,
              column: 21
            },
            end: {
              line: 212,
              column: 22
            }
          },
          loc: {
            start: {
              line: 212,
              column: 27
            },
            end: {
              line: 225,
              column: 3
            }
          },
          line: 212
        },
        "19": {
          name: "(anonymous_19)",
          decl: {
            start: {
              line: 228,
              column: 16
            },
            end: {
              line: 228,
              column: 17
            }
          },
          loc: {
            start: {
              line: 228,
              column: 82
            },
            end: {
              line: 230,
              column: 1
            }
          },
          line: 228
        },
        "20": {
          name: "(anonymous_20)",
          decl: {
            start: {
              line: 232,
              column: 31
            },
            end: {
              line: 232,
              column: 32
            }
          },
          loc: {
            start: {
              line: 232,
              column: 90
            },
            end: {
              line: 259,
              column: 1
            }
          },
          line: 232
        },
        "21": {
          name: "(anonymous_21)",
          decl: {
            start: {
              line: 243,
              column: 18
            },
            end: {
              line: 243,
              column: 19
            }
          },
          loc: {
            start: {
              line: 243,
              column: 34
            },
            end: {
              line: 251,
              column: 3
            }
          },
          line: 243
        },
        "22": {
          name: "(anonymous_22)",
          decl: {
            start: {
              line: 254,
              column: 13
            },
            end: {
              line: 254,
              column: 14
            }
          },
          loc: {
            start: {
              line: 254,
              column: 19
            },
            end: {
              line: 258,
              column: 3
            }
          },
          line: 254
        },
        "23": {
          name: "(anonymous_23)",
          decl: {
            start: {
              line: 270,
              column: 29
            },
            end: {
              line: 270,
              column: 30
            }
          },
          loc: {
            start: {
              line: 270,
              column: 85
            },
            end: {
              line: 287,
              column: 1
            }
          },
          line: 270
        }
      },
      branchMap: {
        "0": {
          loc: {
            start: {
              line: 21,
              column: 2
            },
            end: {
              line: 24,
              column: 3
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 21,
              column: 2
            },
            end: {
              line: 24,
              column: 3
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 21
        },
        "1": {
          loc: {
            start: {
              line: 21,
              column: 6
            },
            end: {
              line: 21,
              column: 49
            }
          },
          type: "binary-expr",
          locations: [{
            start: {
              line: 21,
              column: 6
            },
            end: {
              line: 21,
              column: 14
            }
          }, {
            start: {
              line: 21,
              column: 18
            },
            end: {
              line: 21,
              column: 28
            }
          }, {
            start: {
              line: 21,
              column: 32
            },
            end: {
              line: 21,
              column: 49
            }
          }],
          line: 21
        },
        "2": {
          loc: {
            start: {
              line: 31,
              column: 2
            },
            end: {
              line: 33,
              column: 3
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 31,
              column: 2
            },
            end: {
              line: 33,
              column: 3
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 31
        },
        "3": {
          loc: {
            start: {
              line: 31,
              column: 6
            },
            end: {
              line: 31,
              column: 45
            }
          },
          type: "binary-expr",
          locations: [{
            start: {
              line: 31,
              column: 6
            },
            end: {
              line: 31,
              column: 21
            }
          }, {
            start: {
              line: 31,
              column: 25
            },
            end: {
              line: 31,
              column: 45
            }
          }],
          line: 31
        },
        "4": {
          loc: {
            start: {
              line: 51,
              column: 2
            },
            end: {
              line: 53,
              column: 3
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 51,
              column: 2
            },
            end: {
              line: 53,
              column: 3
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 51
        },
        "5": {
          loc: {
            start: {
              line: 62,
              column: 2
            },
            end: {
              line: 64,
              column: 3
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 62,
              column: 2
            },
            end: {
              line: 64,
              column: 3
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 62
        },
        "6": {
          loc: {
            start: {
              line: 62,
              column: 6
            },
            end: {
              line: 62,
              column: 55
            }
          },
          type: "binary-expr",
          locations: [{
            start: {
              line: 62,
              column: 6
            },
            end: {
              line: 62,
              column: 30
            }
          }, {
            start: {
              line: 62,
              column: 34
            },
            end: {
              line: 62,
              column: 55
            }
          }],
          line: 62
        },
        "7": {
          loc: {
            start: {
              line: 78,
              column: 2
            },
            end: {
              line: 80,
              column: 3
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 78,
              column: 2
            },
            end: {
              line: 80,
              column: 3
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 78
        },
        "8": {
          loc: {
            start: {
              line: 78,
              column: 6
            },
            end: {
              line: 78,
              column: 43
            }
          },
          type: "binary-expr",
          locations: [{
            start: {
              line: 78,
              column: 6
            },
            end: {
              line: 78,
              column: 13
            }
          }, {
            start: {
              line: 78,
              column: 17
            },
            end: {
              line: 78,
              column: 43
            }
          }],
          line: 78
        },
        "9": {
          loc: {
            start: {
              line: 82,
              column: 2
            },
            end: {
              line: 84,
              column: 3
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 82,
              column: 2
            },
            end: {
              line: 84,
              column: 3
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 82
        },
        "10": {
          loc: {
            start: {
              line: 91,
              column: 2
            },
            end: {
              line: 93,
              column: 3
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 91,
              column: 2
            },
            end: {
              line: 93,
              column: 3
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 91
        },
        "11": {
          loc: {
            start: {
              line: 92,
              column: 11
            },
            end: {
              line: 92,
              column: 45
            }
          },
          type: "cond-expr",
          locations: [{
            start: {
              line: 92,
              column: 27
            },
            end: {
              line: 92,
              column: 36
            }
          }, {
            start: {
              line: 92,
              column: 39
            },
            end: {
              line: 92,
              column: 45
            }
          }],
          line: 92
        },
        "12": {
          loc: {
            start: {
              line: 95,
              column: 2
            },
            end: {
              line: 97,
              column: 3
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 95,
              column: 2
            },
            end: {
              line: 97,
              column: 3
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 95
        },
        "13": {
          loc: {
            start: {
              line: 95,
              column: 6
            },
            end: {
              line: 95,
              column: 53
            }
          },
          type: "binary-expr",
          locations: [{
            start: {
              line: 95,
              column: 6
            },
            end: {
              line: 95,
              column: 32
            }
          }, {
            start: {
              line: 95,
              column: 36
            },
            end: {
              line: 95,
              column: 53
            }
          }],
          line: 95
        },
        "14": {
          loc: {
            start: {
              line: 103,
              column: 2
            },
            end: {
              line: 105,
              column: 3
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 103,
              column: 2
            },
            end: {
              line: 105,
              column: 3
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 103
        },
        "15": {
          loc: {
            start: {
              line: 103,
              column: 6
            },
            end: {
              line: 103,
              column: 66
            }
          },
          type: "binary-expr",
          locations: [{
            start: {
              line: 103,
              column: 6
            },
            end: {
              line: 103,
              column: 25
            }
          }, {
            start: {
              line: 103,
              column: 29
            },
            end: {
              line: 103,
              column: 66
            }
          }],
          line: 103
        },
        "16": {
          loc: {
            start: {
              line: 111,
              column: 2
            },
            end: {
              line: 113,
              column: 3
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 111,
              column: 2
            },
            end: {
              line: 113,
              column: 3
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 111
        },
        "17": {
          loc: {
            start: {
              line: 115,
              column: 2
            },
            end: {
              line: 124,
              column: 3
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 115,
              column: 2
            },
            end: {
              line: 124,
              column: 3
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 115
        },
        "18": {
          loc: {
            start: {
              line: 117,
              column: 4
            },
            end: {
              line: 119,
              column: 5
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 117,
              column: 4
            },
            end: {
              line: 119,
              column: 5
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 117
        },
        "19": {
          loc: {
            start: {
              line: 117,
              column: 8
            },
            end: {
              line: 117,
              column: 55
            }
          },
          type: "binary-expr",
          locations: [{
            start: {
              line: 117,
              column: 8
            },
            end: {
              line: 117,
              column: 15
            }
          }, {
            start: {
              line: 117,
              column: 19
            },
            end: {
              line: 117,
              column: 55
            }
          }],
          line: 117
        },
        "20": {
          loc: {
            start: {
              line: 121,
              column: 4
            },
            end: {
              line: 123,
              column: 5
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 121,
              column: 4
            },
            end: {
              line: 123,
              column: 5
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 121
        },
        "21": {
          loc: {
            start: {
              line: 130,
              column: 2
            },
            end: {
              line: 132,
              column: 3
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 130,
              column: 2
            },
            end: {
              line: 132,
              column: 3
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 130
        },
        "22": {
          loc: {
            start: {
              line: 130,
              column: 6
            },
            end: {
              line: 130,
              column: 56
            }
          },
          type: "binary-expr",
          locations: [{
            start: {
              line: 130,
              column: 6
            },
            end: {
              line: 130,
              column: 14
            }
          }, {
            start: {
              line: 130,
              column: 18
            },
            end: {
              line: 130,
              column: 56
            }
          }],
          line: 130
        },
        "23": {
          loc: {
            start: {
              line: 134,
              column: 2
            },
            end: {
              line: 136,
              column: 3
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 134,
              column: 2
            },
            end: {
              line: 136,
              column: 3
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 134
        },
        "24": {
          loc: {
            start: {
              line: 138,
              column: 2
            },
            end: {
              line: 140,
              column: 3
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 138,
              column: 2
            },
            end: {
              line: 140,
              column: 3
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 138
        },
        "25": {
          loc: {
            start: {
              line: 142,
              column: 9
            },
            end: {
              line: 142,
              column: 89
            }
          },
          type: "binary-expr",
          locations: [{
            start: {
              line: 142,
              column: 9
            },
            end: {
              line: 142,
              column: 41
            }
          }, {
            start: {
              line: 142,
              column: 45
            },
            end: {
              line: 142,
              column: 89
            }
          }],
          line: 142
        },
        "26": {
          loc: {
            start: {
              line: 146,
              column: 2
            },
            end: {
              line: 148,
              column: 3
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 146,
              column: 2
            },
            end: {
              line: 148,
              column: 3
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 146
        },
        "27": {
          loc: {
            start: {
              line: 151,
              column: 2
            },
            end: {
              line: 154,
              column: 3
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 151,
              column: 2
            },
            end: {
              line: 154,
              column: 3
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 151
        },
        "28": {
          loc: {
            start: {
              line: 153,
              column: 11
            },
            end: {
              line: 153,
              column: 51
            }
          },
          type: "cond-expr",
          locations: [{
            start: {
              line: 153,
              column: 40
            },
            end: {
              line: 153,
              column: 44
            }
          }, {
            start: {
              line: 153,
              column: 47
            },
            end: {
              line: 153,
              column: 51
            }
          }],
          line: 153
        },
        "29": {
          loc: {
            start: {
              line: 156,
              column: 2
            },
            end: {
              line: 158,
              column: 3
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 156,
              column: 2
            },
            end: {
              line: 158,
              column: 3
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 156
        },
        "30": {
          loc: {
            start: {
              line: 161,
              column: 2
            },
            end: {
              line: 163,
              column: 3
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 161,
              column: 2
            },
            end: {
              line: 163,
              column: 3
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 161
        },
        "31": {
          loc: {
            start: {
              line: 183,
              column: 2
            },
            end: {
              line: 185,
              column: 3
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 183,
              column: 2
            },
            end: {
              line: 185,
              column: 3
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 183
        },
        "32": {
          loc: {
            start: {
              line: 183,
              column: 6
            },
            end: {
              line: 183,
              column: 75
            }
          },
          type: "binary-expr",
          locations: [{
            start: {
              line: 183,
              column: 6
            },
            end: {
              line: 183,
              column: 19
            }
          }, {
            start: {
              line: 183,
              column: 23
            },
            end: {
              line: 183,
              column: 75
            }
          }],
          line: 183
        },
        "33": {
          loc: {
            start: {
              line: 193,
              column: 2
            },
            end: {
              line: 206,
              column: 3
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 193,
              column: 2
            },
            end: {
              line: 206,
              column: 3
            }
          }, {
            start: {
              line: 204,
              column: 9
            },
            end: {
              line: 206,
              column: 3
            }
          }],
          line: 193
        },
        "34": {
          loc: {
            start: {
              line: 195,
              column: 4
            },
            end: {
              line: 201,
              column: 5
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 195,
              column: 4
            },
            end: {
              line: 201,
              column: 5
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 195
        },
        "35": {
          loc: {
            start: {
              line: 215,
              column: 4
            },
            end: {
              line: 224,
              column: 5
            }
          },
          type: "if",
          locations: [{
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 215
        },
        "36": {
          loc: {
            start: {
              line: 228,
              column: 35
            },
            end: {
              line: 228,
              column: 44
            }
          },
          type: "default-arg",
          locations: [{
            start: {
              line: 228,
              column: 42
            },
            end: {
              line: 228,
              column: 44
            }
          }],
          line: 228
        },
        "37": {
          loc: {
            start: {
              line: 228,
              column: 46
            },
            end: {
              line: 228,
              column: 77
            }
          },
          type: "default-arg",
          locations: [{
            start: {
              line: 228,
              column: 61
            },
            end: {
              line: 228,
              column: 77
            }
          }],
          line: 228
        },
        "38": {
          loc: {
            start: {
              line: 229,
              column: 9
            },
            end: {
              line: 229,
              column: 95
            }
          },
          type: "cond-expr",
          locations: [{
            start: {
              line: 229,
              column: 50
            },
            end: {
              line: 229,
              column: 80
            }
          }, {
            start: {
              line: 229,
              column: 83
            },
            end: {
              line: 229,
              column: 95
            }
          }],
          line: 229
        },
        "39": {
          loc: {
            start: {
              line: 232,
              column: 61
            },
            end: {
              line: 232,
              column: 85
            }
          },
          type: "default-arg",
          locations: [{
            start: {
              line: 232,
              column: 81
            },
            end: {
              line: 232,
              column: 85
            }
          }],
          line: 232
        },
        "40": {
          loc: {
            start: {
              line: 233,
              column: 2
            },
            end: {
              line: 236,
              column: 3
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 233,
              column: 2
            },
            end: {
              line: 236,
              column: 3
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 233
        },
        "41": {
          loc: {
            start: {
              line: 244,
              column: 4
            },
            end: {
              line: 246,
              column: 5
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 244,
              column: 4
            },
            end: {
              line: 246,
              column: 5
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 244
        },
        "42": {
          loc: {
            start: {
              line: 255,
              column: 4
            },
            end: {
              line: 257,
              column: 5
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 255,
              column: 4
            },
            end: {
              line: 257,
              column: 5
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 255
        },
        "43": {
          loc: {
            start: {
              line: 276,
              column: 2
            },
            end: {
              line: 278,
              column: 3
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 276,
              column: 2
            },
            end: {
              line: 278,
              column: 3
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 276
        },
        "44": {
          loc: {
            start: {
              line: 277,
              column: 11
            },
            end: {
              line: 277,
              column: 76
            }
          },
          type: "cond-expr",
          locations: [{
            start: {
              line: 277,
              column: 46
            },
            end: {
              line: 277,
              column: 66
            }
          }, {
            start: {
              line: 277,
              column: 69
            },
            end: {
              line: 277,
              column: 76
            }
          }],
          line: 277
        },
        "45": {
          loc: {
            start: {
              line: 277,
              column: 11
            },
            end: {
              line: 277,
              column: 43
            }
          },
          type: "binary-expr",
          locations: [{
            start: {
              line: 277,
              column: 11
            },
            end: {
              line: 277,
              column: 25
            }
          }, {
            start: {
              line: 277,
              column: 29
            },
            end: {
              line: 277,
              column: 43
            }
          }],
          line: 277
        },
        "46": {
          loc: {
            start: {
              line: 280,
              column: 11
            },
            end: {
              line: 280,
              column: 33
            }
          },
          type: "cond-expr",
          locations: [{
            start: {
              line: 280,
              column: 27
            },
            end: {
              line: 280,
              column: 28
            }
          }, {
            start: {
              line: 280,
              column: 31
            },
            end: {
              line: 280,
              column: 33
            }
          }],
          line: 280
        },
        "47": {
          loc: {
            start: {
              line: 282,
              column: 2
            },
            end: {
              line: 284,
              column: 3
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 282,
              column: 2
            },
            end: {
              line: 284,
              column: 3
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 282
        }
      },
      s: {
        "0": 0,
        "1": 0,
        "2": 0,
        "3": 0,
        "4": 0,
        "5": 0,
        "6": 0,
        "7": 0,
        "8": 0,
        "9": 0,
        "10": 0,
        "11": 0,
        "12": 0,
        "13": 0,
        "14": 0,
        "15": 0,
        "16": 0,
        "17": 0,
        "18": 0,
        "19": 0,
        "20": 0,
        "21": 0,
        "22": 0,
        "23": 0,
        "24": 0,
        "25": 0,
        "26": 0,
        "27": 0,
        "28": 0,
        "29": 0,
        "30": 0,
        "31": 0,
        "32": 0,
        "33": 0,
        "34": 0,
        "35": 0,
        "36": 0,
        "37": 0,
        "38": 0,
        "39": 0,
        "40": 0,
        "41": 0,
        "42": 0,
        "43": 0,
        "44": 0,
        "45": 0,
        "46": 0,
        "47": 0,
        "48": 0,
        "49": 0,
        "50": 0,
        "51": 0,
        "52": 0,
        "53": 0,
        "54": 0,
        "55": 0,
        "56": 0,
        "57": 0,
        "58": 0,
        "59": 0,
        "60": 0,
        "61": 0,
        "62": 0,
        "63": 0,
        "64": 0,
        "65": 0,
        "66": 0,
        "67": 0,
        "68": 0,
        "69": 0,
        "70": 0,
        "71": 0,
        "72": 0,
        "73": 0,
        "74": 0,
        "75": 0,
        "76": 0,
        "77": 0,
        "78": 0,
        "79": 0,
        "80": 0,
        "81": 0,
        "82": 0,
        "83": 0,
        "84": 0,
        "85": 0,
        "86": 0,
        "87": 0,
        "88": 0,
        "89": 0,
        "90": 0,
        "91": 0,
        "92": 0,
        "93": 0,
        "94": 0,
        "95": 0,
        "96": 0,
        "97": 0,
        "98": 0,
        "99": 0,
        "100": 0,
        "101": 0,
        "102": 0,
        "103": 0,
        "104": 0,
        "105": 0,
        "106": 0,
        "107": 0,
        "108": 0,
        "109": 0,
        "110": 0,
        "111": 0,
        "112": 0,
        "113": 0,
        "114": 0,
        "115": 0,
        "116": 0,
        "117": 0,
        "118": 0,
        "119": 0,
        "120": 0,
        "121": 0,
        "122": 0,
        "123": 0
      },
      f: {
        "0": 0,
        "1": 0,
        "2": 0,
        "3": 0,
        "4": 0,
        "5": 0,
        "6": 0,
        "7": 0,
        "8": 0,
        "9": 0,
        "10": 0,
        "11": 0,
        "12": 0,
        "13": 0,
        "14": 0,
        "15": 0,
        "16": 0,
        "17": 0,
        "18": 0,
        "19": 0,
        "20": 0,
        "21": 0,
        "22": 0,
        "23": 0
      },
      b: {
        "0": [0, 0],
        "1": [0, 0, 0],
        "2": [0, 0],
        "3": [0, 0],
        "4": [0, 0],
        "5": [0, 0],
        "6": [0, 0],
        "7": [0, 0],
        "8": [0, 0],
        "9": [0, 0],
        "10": [0, 0],
        "11": [0, 0],
        "12": [0, 0],
        "13": [0, 0],
        "14": [0, 0],
        "15": [0, 0],
        "16": [0, 0],
        "17": [0, 0],
        "18": [0, 0],
        "19": [0, 0],
        "20": [0, 0],
        "21": [0, 0],
        "22": [0, 0],
        "23": [0, 0],
        "24": [0, 0],
        "25": [0, 0],
        "26": [0, 0],
        "27": [0, 0],
        "28": [0, 0],
        "29": [0, 0],
        "30": [0, 0],
        "31": [0, 0],
        "32": [0, 0],
        "33": [0, 0],
        "34": [0, 0],
        "35": [0],
        "36": [0],
        "37": [0],
        "38": [0, 0],
        "39": [0],
        "40": [0, 0],
        "41": [0, 0],
        "42": [0, 0],
        "43": [0, 0],
        "44": [0, 0],
        "45": [0, 0],
        "46": [0, 0],
        "47": [0, 0]
      },
      inputSourceMap: {
        version: 3,
        sources: ["/Users/lukaszholeczek/Projekty/CoreUI/mrholek/coreui-pro/js/src/util/index.js"],
        sourcesContent: ["/**\n * --------------------------------------------------------------------------\n * CoreUI util/index.js\n * Licensed under MIT (https://github.com/coreui/coreui/blob/main/LICENSE)\n *\n * This is a modified version of the Bootstrap's util/index.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nconst MAX_UID = 1_000_000\nconst MILLISECONDS_MULTIPLIER = 1000\nconst TRANSITION_END = 'transitionend'\n\n/**\n * Properly escape IDs selectors to handle weird IDs\n * @param {string} selector\n * @returns {string}\n */\nconst parseSelector = selector => {\n  if (selector && window.CSS && window.CSS.escape) {\n    // document.querySelector needs escaping to handle IDs (html5+) containing for instance /\n    selector = selector.replace(/#([^\\s\"#']+)/g, (match, id) => `#${CSS.escape(id)}`)\n  }\n\n  return selector\n}\n\n// Shout-out Angus Croll (https://goo.gl/pxwQGp)\nconst toType = object => {\n  if (object === null || object === undefined) {\n    return `${object}`\n  }\n\n  return Object.prototype.toString.call(object).match(/\\s([a-z]+)/i)[1].toLowerCase()\n}\n\n/**\n * Public Util API\n */\n\nconst getUID = prefix => {\n  do {\n    prefix += Math.floor(Math.random() * MAX_UID)\n  } while (document.getElementById(prefix))\n\n  return prefix\n}\n\nconst getTransitionDurationFromElement = element => {\n  if (!element) {\n    return 0\n  }\n\n  // Get transition-duration of the element\n  let { transitionDuration, transitionDelay } = window.getComputedStyle(element)\n\n  const floatTransitionDuration = Number.parseFloat(transitionDuration)\n  const floatTransitionDelay = Number.parseFloat(transitionDelay)\n\n  // Return 0 if element or transition duration is not found\n  if (!floatTransitionDuration && !floatTransitionDelay) {\n    return 0\n  }\n\n  // If multiple durations are defined, take the first\n  transitionDuration = transitionDuration.split(',')[0]\n  transitionDelay = transitionDelay.split(',')[0]\n\n  return (Number.parseFloat(transitionDuration) + Number.parseFloat(transitionDelay)) * MILLISECONDS_MULTIPLIER\n}\n\nconst triggerTransitionEnd = element => {\n  element.dispatchEvent(new Event(TRANSITION_END))\n}\n\nconst isElement = object => {\n  if (!object || typeof object !== 'object') {\n    return false\n  }\n\n  if (typeof object.jquery !== 'undefined') {\n    object = object[0]\n  }\n\n  return typeof object.nodeType !== 'undefined'\n}\n\nconst getElement = object => {\n  // it's a jQuery object or a node element\n  if (isElement(object)) {\n    return object.jquery ? object[0] : object\n  }\n\n  if (typeof object === 'string' && object.length > 0) {\n    return document.querySelector(parseSelector(object))\n  }\n\n  return null\n}\n\nconst isVisible = element => {\n  if (!isElement(element) || element.getClientRects().length === 0) {\n    return false\n  }\n\n  const elementIsVisible = getComputedStyle(element).getPropertyValue('visibility') === 'visible'\n  // Handle `details` element as its content may falsie appear visible when it is closed\n  const closedDetails = element.closest('details:not([open])')\n\n  if (!closedDetails) {\n    return elementIsVisible\n  }\n\n  if (closedDetails !== element) {\n    const summary = element.closest('summary')\n    if (summary && summary.parentNode !== closedDetails) {\n      return false\n    }\n\n    if (summary === null) {\n      return false\n    }\n  }\n\n  return elementIsVisible\n}\n\nconst isDisabled = element => {\n  if (!element || element.nodeType !== Node.ELEMENT_NODE) {\n    return true\n  }\n\n  if (element.classList.contains('disabled')) {\n    return true\n  }\n\n  if (typeof element.disabled !== 'undefined') {\n    return element.disabled\n  }\n\n  return element.hasAttribute('disabled') && element.getAttribute('disabled') !== 'false'\n}\n\nconst findShadowRoot = element => {\n  if (!document.documentElement.attachShadow) {\n    return null\n  }\n\n  // Can find the shadow root otherwise it'll return the document\n  if (typeof element.getRootNode === 'function') {\n    const root = element.getRootNode()\n    return root instanceof ShadowRoot ? root : null\n  }\n\n  if (element instanceof ShadowRoot) {\n    return element\n  }\n\n  // when we don't find a shadow root\n  if (!element.parentNode) {\n    return null\n  }\n\n  return findShadowRoot(element.parentNode)\n}\n\nconst noop = () => {}\n\n/**\n * Trick to restart an element's animation\n *\n * @param {HTMLElement} element\n * @return void\n *\n * @see https://www.charistheo.io/blog/2021/02/restart-a-css-animation-with-javascript/#restarting-a-css-animation\n */\nconst reflow = element => {\n  element.offsetHeight // eslint-disable-line no-unused-expressions\n}\n\nconst getjQuery = () => {\n  if (window.jQuery && !document.body.hasAttribute('data-coreui-no-jquery')) {\n    return window.jQuery\n  }\n\n  return null\n}\n\nconst DOMContentLoadedCallbacks = []\n\nconst onDOMContentLoaded = callback => {\n  if (document.readyState === 'loading') {\n    // add listener on the first call when the document is in loading state\n    if (!DOMContentLoadedCallbacks.length) {\n      document.addEventListener('DOMContentLoaded', () => {\n        for (const callback of DOMContentLoadedCallbacks) {\n          callback()\n        }\n      })\n    }\n\n    DOMContentLoadedCallbacks.push(callback)\n  } else {\n    callback()\n  }\n}\n\nconst isRTL = () => document.documentElement.dir === 'rtl'\n\nconst defineJQueryPlugin = plugin => {\n  onDOMContentLoaded(() => {\n    const $ = getjQuery()\n    /* istanbul ignore if */\n    if ($) {\n      const name = plugin.NAME\n      const JQUERY_NO_CONFLICT = $.fn[name]\n      $.fn[name] = plugin.jQueryInterface\n      $.fn[name].Constructor = plugin\n      $.fn[name].noConflict = () => {\n        $.fn[name] = JQUERY_NO_CONFLICT\n        return plugin.jQueryInterface\n      }\n    }\n  })\n}\n\nconst execute = (possibleCallback, args = [], defaultValue = possibleCallback) => {\n  return typeof possibleCallback === 'function' ? possibleCallback.call(...args) : defaultValue\n}\n\nconst executeAfterTransition = (callback, transitionElement, waitForTransition = true) => {\n  if (!waitForTransition) {\n    execute(callback)\n    return\n  }\n\n  const durationPadding = 5\n  const emulatedDuration = getTransitionDurationFromElement(transitionElement) + durationPadding\n\n  let called = false\n\n  const handler = ({ target }) => {\n    if (target !== transitionElement) {\n      return\n    }\n\n    called = true\n    transitionElement.removeEventListener(TRANSITION_END, handler)\n    execute(callback)\n  }\n\n  transitionElement.addEventListener(TRANSITION_END, handler)\n  setTimeout(() => {\n    if (!called) {\n      triggerTransitionEnd(transitionElement)\n    }\n  }, emulatedDuration)\n}\n\n/**\n * Return the previous/next element of a list.\n *\n * @param {array} list    The list of elements\n * @param activeElement   The active element\n * @param shouldGetNext   Choose to get next or previous element\n * @param isCycleAllowed\n * @return {Element|elem} The proper element\n */\nconst getNextActiveElement = (list, activeElement, shouldGetNext, isCycleAllowed) => {\n  const listLength = list.length\n  let index = list.indexOf(activeElement)\n\n  // if the element does not exist in the list return an element\n  // depending on the direction and if cycle is allowed\n  if (index === -1) {\n    return !shouldGetNext && isCycleAllowed ? list[listLength - 1] : list[0]\n  }\n\n  index += shouldGetNext ? 1 : -1\n\n  if (isCycleAllowed) {\n    index = (index + listLength) % listLength\n  }\n\n  return list[Math.max(0, Math.min(index, listLength - 1))]\n}\n\nexport {\n  defineJQueryPlugin,\n  execute,\n  executeAfterTransition,\n  findShadowRoot,\n  getElement,\n  getjQuery,\n  getNextActiveElement,\n  getTransitionDurationFromElement,\n  getUID,\n  isDisabled,\n  isElement,\n  isRTL,\n  isVisible,\n  noop,\n  onDOMContentLoaded,\n  parseSelector,\n  reflow,\n  triggerTransitionEnd,\n  toType\n}\n"],
        names: [],
        mappings: "AAAA,CAAC,CAAC;AACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5E,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAErC,CAAC,CAAC;AACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC;AACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnpF,CAAC,CAAC;;AAEF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC;;AAEF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpF;;AAEA,CAAC,CAAC;AACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC;;AAEF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAE1C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC;;AAEF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAE/E,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAEhzD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC;;AAEF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAEhxC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjD;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACf,CAAC,CAAC;;AAEF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC;;AAEF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9C;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzvD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvD,CAAC,CAAC;;AAEF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACZ;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACfhG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAE7D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC;;AAEF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjzD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC;;AAEJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC;;AAEF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC;;AAEF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC;;AAEF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC;;AAEF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxF;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC;;AAEF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClD,CAAC,CAAC;;AAEF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC;;AAEF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC;;AAEF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1C;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAEpB,CAAC,CAAC;AACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzC,CAAC;AACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACdjH,CAAC,CAAC;AACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClE;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxvB,CAAC,CAAC;;AAEF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACZ;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAEnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACznB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC;;AAEJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC;AACF;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAEzD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACplF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9F;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1F,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC;;AAEF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAE/F,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAEnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC,CAAC;;AAEJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC;;AAEF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5C,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB;;AAEA,CAAC,CAAC;AACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,CAAC;AACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC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",
        file: undefined
      },
      _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
      hash: "0844a517079ffcc835afb4fe90d46e540f971ff6"
    };
    var coverage = global[gcv] || (global[gcv] = {});
    if (!coverage[path] || coverage[path].hash !== hash) {
      coverage[path] = coverageData;
    }
    var actualCoverage = coverage[path];
    {
      // @ts-ignore
      cov_l74ucfg84 = function () {
        return actualCoverage;
      };
    }
    return actualCoverage;
  }
  cov_l74ucfg84(); /**
                   * --------------------------------------------------------------------------
                   * CoreUI util/index.js
                   * Licensed under MIT (https://github.com/coreui/coreui/blob/main/LICENSE)
                   *
                   * This is a modified version of the Bootstrap's util/index.js
                   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
                   * --------------------------------------------------------------------------
                   */
  const MAX_UID = (cov_l74ucfg84().s[0]++, 1000000);
  const MILLISECONDS_MULTIPLIER = (cov_l74ucfg84().s[1]++, 1000);
  const TRANSITION_END = (cov_l74ucfg84().s[2]++, 'transitionend'); /**
                                                                    * Properly escape IDs selectors to handle weird IDs
                                                                    * @param {string} selector
                                                                    * @returns {string}
                                                                    */
  cov_l74ucfg84().s[3]++;
  const parseSelector = selector => {
    cov_l74ucfg84().f[0]++;
    cov_l74ucfg84().s[4]++;
    if ((cov_l74ucfg84().b[1][0]++, selector) && (cov_l74ucfg84().b[1][1]++, window.CSS) && (cov_l74ucfg84().b[1][2]++, window.CSS.escape)) {
      cov_l74ucfg84().b[0][0]++;
      cov_l74ucfg84().s[5]++; // document.querySelector needs escaping to handle IDs (html5+) containing for instance /
      selector = selector.replace(/#([^\s"#']+)/g, (match, id) => {
        cov_l74ucfg84().f[1]++;
        cov_l74ucfg84().s[6]++;
        return `#${CSS.escape(id)}`;
      });
    } else {
      cov_l74ucfg84().b[0][1]++;
    }
    cov_l74ucfg84().s[7]++;
    return selector;
  }; // Shout-out Angus Croll (https://goo.gl/pxwQGp)
  cov_l74ucfg84().s[8]++;
  const toType = object => {
    cov_l74ucfg84().f[2]++;
    cov_l74ucfg84().s[9]++;
    if ((cov_l74ucfg84().b[3][0]++, object === null) || (cov_l74ucfg84().b[3][1]++, object === undefined)) {
      cov_l74ucfg84().b[2][0]++;
      cov_l74ucfg84().s[10]++;
      return `${object}`;
    } else {
      cov_l74ucfg84().b[2][1]++;
    }
    cov_l74ucfg84().s[11]++;
    return Object.prototype.toString.call(object).match(/\s([a-z]+)/i)[1].toLowerCase();
  }; /**
     * Public Util API
     */
  cov_l74ucfg84().s[12]++;
  const getUID = prefix => {
    cov_l74ucfg84().f[3]++;
    cov_l74ucfg84().s[13]++;
    do {
      cov_l74ucfg84().s[14]++;
      prefix += Math.floor(Math.random() * MAX_UID);
    } while (document.getElementById(prefix));
    cov_l74ucfg84().s[15]++;
    return prefix;
  };
  cov_l74ucfg84().s[16]++;
  const getTransitionDurationFromElement = element => {
    cov_l74ucfg84().f[4]++;
    cov_l74ucfg84().s[17]++;
    if (!element) {
      cov_l74ucfg84().b[4][0]++;
      cov_l74ucfg84().s[18]++;
      return 0;
    } else {
      cov_l74ucfg84().b[4][1]++;
    } // Get transition-duration of the element
    let {
      transitionDuration,
      transitionDelay
    } = (cov_l74ucfg84().s[19]++, window.getComputedStyle(element));
    const floatTransitionDuration = (cov_l74ucfg84().s[20]++, Number.parseFloat(transitionDuration));
    const floatTransitionDelay = (cov_l74ucfg84().s[21]++, Number.parseFloat(transitionDelay)); // Return 0 if element or transition duration is not found
    cov_l74ucfg84().s[22]++;
    if ((cov_l74ucfg84().b[6][0]++, !floatTransitionDuration) && (cov_l74ucfg84().b[6][1]++, !floatTransitionDelay)) {
      cov_l74ucfg84().b[5][0]++;
      cov_l74ucfg84().s[23]++;
      return 0;
    } else {
      cov_l74ucfg84().b[5][1]++;
    } // If multiple durations are defined, take the first
    cov_l74ucfg84().s[24]++;
    transitionDuration = transitionDuration.split(',')[0];
    cov_l74ucfg84().s[25]++;
    transitionDelay = transitionDelay.split(',')[0];
    cov_l74ucfg84().s[26]++;
    return (Number.parseFloat(transitionDuration) + Number.parseFloat(transitionDelay)) * MILLISECONDS_MULTIPLIER;
  };
  cov_l74ucfg84().s[27]++;
  const triggerTransitionEnd = element => {
    cov_l74ucfg84().f[5]++;
    cov_l74ucfg84().s[28]++;
    element.dispatchEvent(new Event(TRANSITION_END));
  };
  cov_l74ucfg84().s[29]++;
  const isElement$1 = object => {
    cov_l74ucfg84().f[6]++;
    cov_l74ucfg84().s[30]++;
    if ((cov_l74ucfg84().b[8][0]++, !object) || (cov_l74ucfg84().b[8][1]++, typeof object !== 'object')) {
      cov_l74ucfg84().b[7][0]++;
      cov_l74ucfg84().s[31]++;
      return false;
    } else {
      cov_l74ucfg84().b[7][1]++;
    }
    cov_l74ucfg84().s[32]++;
    if (typeof object.jquery !== 'undefined') {
      cov_l74ucfg84().b[9][0]++;
      cov_l74ucfg84().s[33]++;
      object = object[0];
    } else {
      cov_l74ucfg84().b[9][1]++;
    }
    cov_l74ucfg84().s[34]++;
    return typeof object.nodeType !== 'undefined';
  };
  cov_l74ucfg84().s[35]++;
  const getElement = object => {
    cov_l74ucfg84().f[7]++;
    cov_l74ucfg84().s[36]++; // it's a jQuery object or a node element
    if (isElement$1(object)) {
      cov_l74ucfg84().b[10][0]++;
      cov_l74ucfg84().s[37]++;
      return object.jquery ? (cov_l74ucfg84().b[11][0]++, object[0]) : (cov_l74ucfg84().b[11][1]++, object);
    } else {
      cov_l74ucfg84().b[10][1]++;
    }
    cov_l74ucfg84().s[38]++;
    if ((cov_l74ucfg84().b[13][0]++, typeof object === 'string') && (cov_l74ucfg84().b[13][1]++, object.length > 0)) {
      cov_l74ucfg84().b[12][0]++;
      cov_l74ucfg84().s[39]++;
      return document.querySelector(parseSelector(object));
    } else {
      cov_l74ucfg84().b[12][1]++;
    }
    cov_l74ucfg84().s[40]++;
    return null;
  };
  cov_l74ucfg84().s[41]++;
  const isVisible = element => {
    cov_l74ucfg84().f[8]++;
    cov_l74ucfg84().s[42]++;
    if ((cov_l74ucfg84().b[15][0]++, !isElement$1(element)) || (cov_l74ucfg84().b[15][1]++, element.getClientRects().length === 0)) {
      cov_l74ucfg84().b[14][0]++;
      cov_l74ucfg84().s[43]++;
      return false;
    } else {
      cov_l74ucfg84().b[14][1]++;
    }
    const elementIsVisible = (cov_l74ucfg84().s[44]++, getComputedStyle(element).getPropertyValue('visibility') === 'visible'); // Handle `details` element as its content may falsie appear visible when it is closed
    const closedDetails = (cov_l74ucfg84().s[45]++, element.closest('details:not([open])'));
    cov_l74ucfg84().s[46]++;
    if (!closedDetails) {
      cov_l74ucfg84().b[16][0]++;
      cov_l74ucfg84().s[47]++;
      return elementIsVisible;
    } else {
      cov_l74ucfg84().b[16][1]++;
    }
    cov_l74ucfg84().s[48]++;
    if (closedDetails !== element) {
      cov_l74ucfg84().b[17][0]++;
      const summary = (cov_l74ucfg84().s[49]++, element.closest('summary'));
      cov_l74ucfg84().s[50]++;
      if ((cov_l74ucfg84().b[19][0]++, summary) && (cov_l74ucfg84().b[19][1]++, summary.parentNode !== closedDetails)) {
        cov_l74ucfg84().b[18][0]++;
        cov_l74ucfg84().s[51]++;
        return false;
      } else {
        cov_l74ucfg84().b[18][1]++;
      }
      cov_l74ucfg84().s[52]++;
      if (summary === null) {
        cov_l74ucfg84().b[20][0]++;
        cov_l74ucfg84().s[53]++;
        return false;
      } else {
        cov_l74ucfg84().b[20][1]++;
      }
    } else {
      cov_l74ucfg84().b[17][1]++;
    }
    cov_l74ucfg84().s[54]++;
    return elementIsVisible;
  };
  cov_l74ucfg84().s[55]++;
  const isDisabled = element => {
    cov_l74ucfg84().f[9]++;
    cov_l74ucfg84().s[56]++;
    if ((cov_l74ucfg84().b[22][0]++, !element) || (cov_l74ucfg84().b[22][1]++, element.nodeType !== Node.ELEMENT_NODE)) {
      cov_l74ucfg84().b[21][0]++;
      cov_l74ucfg84().s[57]++;
      return true;
    } else {
      cov_l74ucfg84().b[21][1]++;
    }
    cov_l74ucfg84().s[58]++;
    if (element.classList.contains('disabled')) {
      cov_l74ucfg84().b[23][0]++;
      cov_l74ucfg84().s[59]++;
      return true;
    } else {
      cov_l74ucfg84().b[23][1]++;
    }
    cov_l74ucfg84().s[60]++;
    if (typeof element.disabled !== 'undefined') {
      cov_l74ucfg84().b[24][0]++;
      cov_l74ucfg84().s[61]++;
      return element.disabled;
    } else {
      cov_l74ucfg84().b[24][1]++;
    }
    cov_l74ucfg84().s[62]++;
    return (cov_l74ucfg84().b[25][0]++, element.hasAttribute('disabled')) && (cov_l74ucfg84().b[25][1]++, element.getAttribute('disabled') !== 'false');
  };
  cov_l74ucfg84().s[63]++;
  const findShadowRoot = element => {
    cov_l74ucfg84().f[10]++;
    cov_l74ucfg84().s[64]++;
    if (!document.documentElement.attachShadow) {
      cov_l74ucfg84().b[26][0]++;
      cov_l74ucfg84().s[65]++;
      return null;
    } else {
      cov_l74ucfg84().b[26][1]++;
    } // Can find the shadow root otherwise it'll return the document
    cov_l74ucfg84().s[66]++;
    if (typeof element.getRootNode === 'function') {
      cov_l74ucfg84().b[27][0]++;
      const root = (cov_l74ucfg84().s[67]++, element.getRootNode());
      cov_l74ucfg84().s[68]++;
      return root instanceof ShadowRoot ? (cov_l74ucfg84().b[28][0]++, root) : (cov_l74ucfg84().b[28][1]++, null);
    } else {
      cov_l74ucfg84().b[27][1]++;
    }
    cov_l74ucfg84().s[69]++;
    if (element instanceof ShadowRoot) {
      cov_l74ucfg84().b[29][0]++;
      cov_l74ucfg84().s[70]++;
      return element;
    } else {
      cov_l74ucfg84().b[29][1]++;
    } // when we don't find a shadow root
    cov_l74ucfg84().s[71]++;
    if (!element.parentNode) {
      cov_l74ucfg84().b[30][0]++;
      cov_l74ucfg84().s[72]++;
      return null;
    } else {
      cov_l74ucfg84().b[30][1]++;
    }
    cov_l74ucfg84().s[73]++;
    return findShadowRoot(element.parentNode);
  };
  cov_l74ucfg84().s[74]++;
  const noop = () => {
    cov_l74ucfg84().f[11]++;
  }; /**
     * Trick to restart an element's animation
     *
     * @param {HTMLElement} element
     * @return void
     *
     * @see https://www.charistheo.io/blog/2021/02/restart-a-css-animation-with-javascript/#restarting-a-css-animation
     */
  cov_l74ucfg84().s[75]++;
  cov_l74ucfg84().s[77]++;
  const getjQuery = () => {
    cov_l74ucfg84().f[13]++;
    cov_l74ucfg84().s[78]++;
    if ((cov_l74ucfg84().b[32][0]++, window.jQuery) && (cov_l74ucfg84().b[32][1]++, !document.body.hasAttribute('data-coreui-no-jquery'))) {
      cov_l74ucfg84().b[31][0]++;
      cov_l74ucfg84().s[79]++;
      return window.jQuery;
    } else {
      cov_l74ucfg84().b[31][1]++;
    }
    cov_l74ucfg84().s[80]++;
    return null;
  };
  const DOMContentLoadedCallbacks = (cov_l74ucfg84().s[81]++, []);
  cov_l74ucfg84().s[82]++;
  const onDOMContentLoaded = callback => {
    cov_l74ucfg84().f[14]++;
    cov_l74ucfg84().s[83]++;
    if (document.readyState === 'loading') {
      cov_l74ucfg84().b[33][0]++;
      cov_l74ucfg84().s[84]++; // add listener on the first call when the document is in loading state
      if (!DOMContentLoadedCallbacks.length) {
        cov_l74ucfg84().b[34][0]++;
        cov_l74ucfg84().s[85]++;
        document.addEventListener('DOMContentLoaded', () => {
          cov_l74ucfg84().f[15]++;
          cov_l74ucfg84().s[86]++;
          for (const callback of DOMContentLoadedCallbacks) {
            cov_l74ucfg84().s[87]++;
            callback();
          }
        });
      } else {
        cov_l74ucfg84().b[34][1]++;
      }
      cov_l74ucfg84().s[88]++;
      DOMContentLoadedCallbacks.push(callback);
    } else {
      cov_l74ucfg84().b[33][1]++;
      cov_l74ucfg84().s[89]++;
      callback();
    }
  };
  cov_l74ucfg84().s[90]++;
  const isRTL = () => {
    cov_l74ucfg84().f[16]++;
    cov_l74ucfg84().s[91]++;
    return document.documentElement.dir === 'rtl';
  };
  cov_l74ucfg84().s[92]++;
  const defineJQueryPlugin = plugin => {
    cov_l74ucfg84().f[17]++;
    cov_l74ucfg84().s[93]++;
    onDOMContentLoaded(() => {
      cov_l74ucfg84().f[18]++;
      const $ = (cov_l74ucfg84().s[94]++, getjQuery()); /* istanbul ignore if */
      cov_l74ucfg84().s[95]++;
      if ($) {
        const name = plugin.NAME;
        const JQUERY_NO_CONFLICT = $.fn[name];
        $.fn[name] = plugin.jQueryInterface;
        $.fn[name].Constructor = plugin;
        $.fn[name].noConflict = () => {
          $.fn[name] = JQUERY_NO_CONFLICT;
          return plugin.jQueryInterface;
        };
      } else {
        cov_l74ucfg84().b[35][0]++;
      }
    });
  };
  cov_l74ucfg84().s[96]++;
  const execute = (possibleCallback, args = (cov_l74ucfg84().b[36][0]++, []), defaultValue = (cov_l74ucfg84().b[37][0]++, possibleCallback)) => {
    cov_l74ucfg84().f[19]++;
    cov_l74ucfg84().s[97]++;
    return typeof possibleCallback === 'function' ? (cov_l74ucfg84().b[38][0]++, possibleCallback.call(...args)) : (cov_l74ucfg84().b[38][1]++, defaultValue);
  };
  cov_l74ucfg84().s[98]++;
  const executeAfterTransition = (callback, transitionElement, waitForTransition = (cov_l74ucfg84().b[39][0]++, true)) => {
    cov_l74ucfg84().f[20]++;
    cov_l74ucfg84().s[99]++;
    if (!waitForTransition) {
      cov_l74ucfg84().b[40][0]++;
      cov_l74ucfg84().s[100]++;
      execute(callback);
      cov_l74ucfg84().s[101]++;
      return;
    } else {
      cov_l74ucfg84().b[40][1]++;
    }
    const durationPadding = (cov_l74ucfg84().s[102]++, 5);
    const emulatedDuration = (cov_l74ucfg84().s[103]++, getTransitionDurationFromElement(transitionElement) + durationPadding);
    let called = (cov_l74ucfg84().s[104]++, false);
    cov_l74ucfg84().s[105]++;
    const handler = ({
      target
    }) => {
      cov_l74ucfg84().f[21]++;
      cov_l74ucfg84().s[106]++;
      if (target !== transitionElement) {
        cov_l74ucfg84().b[41][0]++;
        cov_l74ucfg84().s[107]++;
        return;
      } else {
        cov_l74ucfg84().b[41][1]++;
      }
      cov_l74ucfg84().s[108]++;
      called = true;
      cov_l74ucfg84().s[109]++;
      transitionElement.removeEventListener(TRANSITION_END, handler);
      cov_l74ucfg84().s[110]++;
      execute(callback);
    };
    cov_l74ucfg84().s[111]++;
    transitionElement.addEventListener(TRANSITION_END, handler);
    cov_l74ucfg84().s[112]++;
    setTimeout(() => {
      cov_l74ucfg84().f[22]++;
      cov_l74ucfg84().s[113]++;
      if (!called) {
        cov_l74ucfg84().b[42][0]++;
        cov_l74ucfg84().s[114]++;
        triggerTransitionEnd(transitionElement);
      } else {
        cov_l74ucfg84().b[42][1]++;
      }
    }, emulatedDuration);
  }; /**
     * Return the previous/next element of a list.
     *
     * @param {array} list    The list of elements
     * @param activeElement   The active element
     * @param shouldGetNext   Choose to get next or previous element
     * @param isCycleAllowed
     * @return {Element|elem} The proper element
     */
  cov_l74ucfg84().s[115]++;

  function cov_1mdef3fyys() {
    var path = "/Users/lukaszholeczek/Projekty/CoreUI/mrholek/coreui-pro/js/src/dom/event-handler.js";
    var hash = "95a892d04b60654d637d45fc7abcd2c048e59cde";
    var global = new Function("return this")();
    var gcv = "__coverage__";
    var coverageData = {
      path: "/Users/lukaszholeczek/Projekty/CoreUI/mrholek/coreui-pro/js/src/dom/event-handler.js",
      statementMap: {
        "0": {
          start: {
            line: 17,
            column: 23
          },
          end: {
            line: 17,
            column: 43
          }
        },
        "1": {
          start: {
            line: 18,
            column: 23
          },
          end: {
            line: 18,
            column: 29
          }
        },
        "2": {
          start: {
            line: 19,
            column: 22
          },
          end: {
            line: 19,
            column: 30
          }
        },
        "3": {
          start: {
            line: 20,
            column: 22
          },
          end: {
            line: 20,
            column: 24
          }
        },
        "4": {
          start: {
            line: 21,
            column: 15
          },
          end: {
            line: 21,
            column: 16
          }
        },
        "5": {
          start: {
            line: 22,
            column: 21
          },
          end: {
            line: 25,
            column: 1
          }
        },
        "6": {
          start: {
            line: 27,
            column: 21
          },
          end: {
            line: 74,
            column: 2
          }
        },
        "7": {
          start: {
            line: 81,
            column: 2
          },
          end: {
            line: 81,
            column: 75
          }
        },
        "8": {
          start: {
            line: 85,
            column: 14
          },
          end: {
            line: 85,
            column: 35
          }
        },
        "9": {
          start: {
            line: 87,
            column: 2
          },
          end: {
            line: 87,
            column: 24
          }
        },
        "10": {
          start: {
            line: 88,
            column: 2
          },
          end: {
            line: 88,
            column: 47
          }
        },
        "11": {
          start: {
            line: 90,
            column: 2
          },
          end: {
            line: 90,
            column: 27
          }
        },
        "12": {
          start: {
            line: 94,
            column: 2
          },
          end: {
            line: 102,
            column: 3
          }
        },
        "13": {
          start: {
            line: 95,
            column: 4
          },
          end: {
            line: 95,
            column: 50
          }
        },
        "14": {
          start: {
            line: 97,
            column: 4
          },
          end: {
            line: 99,
            column: 5
          }
        },
        "15": {
          start: {
            line: 98,
            column: 6
          },
          end: {
            line: 98,
            column: 47
          }
        },
        "16": {
          start: {
            line: 101,
            column: 4
          },
          end: {
            line: 101,
            column: 37
          }
        },
        "17": {
          start: {
            line: 106,
            column: 2
          },
          end: {
            line: 124,
            column: 3
          }
        },
        "18": {
          start: {
            line: 107,
            column: 24
          },
          end: {
            line: 107,
            column: 58
          }
        },
        "19": {
          start: {
            line: 109,
            column: 4
          },
          end: {
            line: 123,
            column: 5
          }
        },
        "20": {
          start: {
            line: 109,
            column: 26
          },
          end: {
            line: 109,
            column: 31
          }
        },
        "21": {
          start: {
            line: 110,
            column: 6
          },
          end: {
            line: 122,
            column: 7
          }
        },
        "22": {
          start: {
            line: 111,
            column: 8
          },
          end: {
            line: 113,
            column: 9
          }
        },
        "23": {
          start: {
            line: 112,
            column: 10
          },
          end: {
            line: 112,
            column: 18
          }
        },
        "24": {
          start: {
            line: 115,
            column: 8
          },
          end: {
            line: 115,
            column: 53
          }
        },
        "25": {
          start: {
            line: 117,
            column: 8
          },
          end: {
            line: 119,
            column: 9
          }
        },
        "26": {
          start: {
            line: 118,
            column: 10
          },
          end: {
            line: 118,
            column: 61
          }
        },
        "27": {
          start: {
            line: 121,
            column: 8
          },
          end: {
            line: 121,
            column: 40
          }
        },
        "28": {
          start: {
            line: 128,
            column: 2
          },
          end: {
            line: 129,
            column: 98
          }
        },
        "29": {
          start: {
            line: 129,
            column: 19
          },
          end: {
            line: 129,
            column: 97
          }
        },
        "30": {
          start: {
            line: 133,
            column: 22
          },
          end: {
            line: 133,
            column: 49
          }
        },
        "31": {
          start: {
            line: 135,
            column: 19
          },
          end: {
            line: 135,
            column: 85
          }
        },
        "32": {
          start: {
            line: 136,
            column: 18
          },
          end: {
            line: 136,
            column: 49
          }
        },
        "33": {
          start: {
            line: 138,
            column: 2
          },
          end: {
            line: 140,
            column: 3
          }
        },
        "34": {
          start: {
            line: 139,
            column: 4
          },
          end: {
            line: 139,
            column: 33
          }
        },
        "35": {
          start: {
            line: 142,
            column: 2
          },
          end: {
            line: 142,
            column: 43
          }
        },
        "36": {
          start: {
            line: 146,
            column: 2
          },
          end: {
            line: 148,
            column: 3
          }
        },
        "37": {
          start: {
            line: 147,
            column: 4
          },
          end: {
            line: 147,
            column: 10
          }
        },
        "38": {
          start: {
            line: 150,
            column: 43
          },
          end: {
            line: 150,
            column: 110
          }
        },
        "39": {
          start: {
            line: 154,
            column: 2
          },
          end: {
            line: 164,
            column: 3
          }
        },
        "40": {
          start: {
            line: 155,
            column: 25
          },
          end: {
            line: 161,
            column: 5
          }
        },
        "41": {
          start: {
            line: 156,
            column: 6
          },
          end: {
            line: 160,
            column: 7
          }
        },
        "42": {
          start: {
            line: 157,
            column: 8
          },
          end: {
            line: 159,
            column: 9
          }
        },
        "43": {
          start: {
            line: 158,
            column: 10
          },
          end: {
            line: 158,
            column: 37
          }
        },
        "44": {
          start: {
            line: 163,
            column: 4
          },
          end: {
            line: 163,
            column: 37
          }
        },
        "45": {
          start: {
            line: 166,
            column: 17
          },
          end: {
            line: 166,
            column: 42
          }
        },
        "46": {
          start: {
            line: 167,
            column: 19
          },
          end: {
            line: 167,
            column: 64
          }
        },
        "47": {
          start: {
            line: 168,
            column: 27
          },
          end: {
            line: 168,
            column: 88
          }
        },
        "48": {
          start: {
            line: 170,
            column: 2
          },
          end: {
            line: 174,
            column: 3
          }
        },
        "49": {
          start: {
            line: 171,
            column: 4
          },
          end: {
            line: 171,
            column: 63
          }
        },
        "50": {
          start: {
            line: 173,
            column: 4
          },
          end: {
            line: 173,
            column: 10
          }
        },
        "51": {
          start: {
            line: 176,
            column: 14
          },
          end: {
            line: 176,
            column: 83
          }
        },
        "52": {
          start: {
            line: 177,
            column: 13
          },
          end: {
            line: 179,
            column: 39
          }
        },
        "53": {
          start: {
            line: 181,
            column: 2
          },
          end: {
            line: 181,
            column: 54
          }
        },
        "54": {
          start: {
            line: 182,
            column: 2
          },
          end: {
            line: 182,
            column: 24
          }
        },
        "55": {
          start: {
            line: 183,
            column: 2
          },
          end: {
            line: 183,
            column: 20
          }
        },
        "56": {
          start: {
            line: 184,
            column: 2
          },
          end: {
            line: 184,
            column: 19
          }
        },
        "57": {
          start: {
            line: 185,
            column: 2
          },
          end: {
            line: 185,
            column: 20
          }
        },
        "58": {
          start: {
            line: 187,
            column: 2
          },
          end: {
            line: 187,
            column: 54
          }
        },
        "59": {
          start: {
            line: 191,
            column: 13
          },
          end: {
            line: 191,
            column: 72
          }
        },
        "60": {
          start: {
            line: 193,
            column: 2
          },
          end: {
            line: 195,
            column: 3
          }
        },
        "61": {
          start: {
            line: 194,
            column: 4
          },
          end: {
            line: 194,
            column: 10
          }
        },
        "62": {
          start: {
            line: 197,
            column: 2
          },
          end: {
            line: 197,
            column: 73
          }
        },
        "63": {
          start: {
            line: 198,
            column: 2
          },
          end: {
            line: 198,
            column: 39
          }
        },
        "64": {
          start: {
            line: 202,
            column: 28
          },
          end: {
            line: 202,
            column: 51
          }
        },
        "65": {
          start: {
            line: 204,
            column: 2
          },
          end: {
            line: 208,
            column: 3
          }
        },
        "66": {
          start: {
            line: 205,
            column: 4
          },
          end: {
            line: 207,
            column: 5
          }
        },
        "67": {
          start: {
            line: 206,
            column: 6
          },
          end: {
            line: 206,
            column: 89
          }
        },
        "68": {
          start: {
            line: 213,
            column: 2
          },
          end: {
            line: 213,
            column: 43
          }
        },
        "69": {
          start: {
            line: 214,
            column: 2
          },
          end: {
            line: 214,
            column: 37
          }
        },
        "70": {
          start: {
            line: 217,
            column: 21
          },
          end: {
            line: 301,
            column: 1
          }
        },
        "71": {
          start: {
            line: 219,
            column: 4
          },
          end: {
            line: 219,
            column: 66
          }
        },
        "72": {
          start: {
            line: 223,
            column: 4
          },
          end: {
            line: 223,
            column: 65
          }
        },
        "73": {
          start: {
            line: 227,
            column: 4
          },
          end: {
            line: 229,
            column: 5
          }
        },
        "74": {
          start: {
            line: 228,
            column: 6
          },
          end: {
            line: 228,
            column: 12
          }
        },
        "75": {
          start: {
            line: 231,
            column: 47
          },
          end: {
            line: 231,
            column: 114
          }
        },
        "76": {
          start: {
            line: 232,
            column: 24
          },
          end: {
            line: 232,
            column: 55
          }
        },
        "77": {
          start: {
            line: 233,
            column: 19
          },
          end: {
            line: 233,
            column: 44
          }
        },
        "78": {
          start: {
            line: 234,
            column: 30
          },
          end: {
            line: 234,
            column: 53
          }
        },
        "79": {
          start: {
            line: 235,
            column: 24
          },
          end: {
            line: 235,
            column: 57
          }
        },
        "80": {
          start: {
            line: 237,
            column: 4
          },
          end: {
            line: 245,
            column: 5
          }
        },
        "81": {
          start: {
            line: 239,
            column: 6
          },
          end: {
            line: 241,
            column: 7
          }
        },
        "82": {
          start: {
            line: 240,
            column: 8
          },
          end: {
            line: 240,
            column: 14
          }
        },
        "83": {
          start: {
            line: 243,
            column: 6
          },
          end: {
            line: 243,
            column: 87
          }
        },
        "84": {
          start: {
            line: 244,
            column: 6
          },
          end: {
            line: 244,
            column: 12
          }
        },
        "85": {
          start: {
            line: 247,
            column: 4
          },
          end: {
            line: 251,
            column: 5
          }
        },
        "86": {
          start: {
            line: 248,
            column: 6
          },
          end: {
            line: 250,
            column: 7
          }
        },
        "87": {
          start: {
            line: 249,
            column: 8
          },
          end: {
            line: 249,
            column: 91
          }
        },
        "88": {
          start: {
            line: 253,
            column: 4
          },
          end: {
            line: 259,
            column: 5
          }
        },
        "89": {
          start: {
            line: 254,
            column: 25
          },
          end: {
            line: 254,
            column: 63
          }
        },
        "90": {
          start: {
            line: 256,
            column: 6
          },
          end: {
            line: 258,
            column: 7
          }
        },
        "91": {
          start: {
            line: 257,
            column: 8
          },
          end: {
            line: 257,
            column: 91
          }
        },
        "92": {
          start: {
            line: 263,
            column: 4
          },
          end: {
            line: 265,
            column: 5
          }
        },
        "93": {
          start: {
            line: 264,
            column: 6
          },
          end: {
            line: 264,
            column: 17
          }
        },
        "94": {
          start: {
            line: 267,
            column: 14
          },
          end: {
            line: 267,
            column: 25
          }
        },
        "95": {
          start: {
            line: 268,
            column: 22
          },
          end: {
            line: 268,
            column: 41
          }
        },
        "96": {
          start: {
            line: 269,
            column: 24
          },
          end: {
            line: 269,
            column: 43
          }
        },
        "97": {
          start: {
            line: 271,
            column: 22
          },
          end: {
            line: 271,
            column: 26
          }
        },
        "98": {
          start: {
            line: 272,
            column: 18
          },
          end: {
            line: 272,
            column: 22
          }
        },
        "99": {
          start: {
            line: 273,
            column: 25
          },
          end: {
            line: 273,
            column: 29
          }
        },
        "100": {
          start: {
            line: 274,
            column: 27
          },
          end: {
            line: 274,
            column: 32
          }
        },
        "101": {
          start: {
            line: 276,
            column: 4
          },
          end: {
            line: 283,
            column: 5
          }
        },
        "102": {
          start: {
            line: 277,
            column: 6
          },
          end: {
            line: 277,
            column: 40
          }
        },
        "103": {
          start: {
            line: 279,
            column: 6
          },
          end: {
            line: 279,
            column: 37
          }
        },
        "104": {
          start: {
            line: 280,
            column: 6
          },
          end: {
            line: 280,
            column: 51
          }
        },
        "105": {
          start: {
            line: 281,
            column: 6
          },
          end: {
            line: 281,
            column: 67
          }
        },
        "106": {
          start: {
            line: 282,
            column: 6
          },
          end: {
            line: 282,
            column: 57
          }
        },
        "107": {
          start: {
            line: 285,
            column: 16
          },
          end: {
            line: 285,
            column: 81
          }
        },
        "108": {
          start: {
            line: 287,
            column: 4
          },
          end: {
            line: 289,
            column: 5
          }
        },
        "109": {
          start: {
            line: 288,
            column: 6
          },
          end: {
            line: 288,
            column: 26
          }
        },
        "110": {
          start: {
            line: 291,
            column: 4
          },
          end: {
            line: 293,
            column: 5
          }
        },
        "111": {
          start: {
            line: 292,
            column: 6
          },
          end: {
            line: 292,
            column: 32
          }
        },
        "112": {
          start: {
            line: 295,
            column: 4
          },
          end: {
            line: 297,
            column: 5
          }
        },
        "113": {
          start: {
            line: 296,
            column: 6
          },
          end: {
            line: 296,
            column: 34
          }
        },
        "114": {
          start: {
            line: 299,
            column: 4
          },
          end: {
            line: 299,
            column: 14
          }
        },
        "115": {
          start: {
            line: 304,
            column: 2
          },
          end: {
            line: 315,
            column: 3
          }
        },
        "116": {
          start: {
            line: 305,
            column: 4
          },
          end: {
            line: 314,
            column: 5
          }
        },
        "117": {
          start: {
            line: 306,
            column: 6
          },
          end: {
            line: 306,
            column: 22
          }
        },
        "118": {
          start: {
            line: 308,
            column: 6
          },
          end: {
            line: 313,
            column: 8
          }
        },
        "119": {
          start: {
            line: 311,
            column: 10
          },
          end: {
            line: 311,
            column: 22
          }
        },
        "120": {
          start: {
            line: 317,
            column: 2
          },
          end: {
            line: 317,
            column: 12
          }
        }
      },
      fnMap: {
        "0": {
          name: "makeEventUid",
          decl: {
            start: {
              line: 80,
              column: 9
            },
            end: {
              line: 80,
              column: 21
            }
          },
          loc: {
            start: {
              line: 80,
              column: 36
            },
            end: {
              line: 82,
              column: 1
            }
          },
          line: 80
        },
        "1": {
          name: "getElementEvents",
          decl: {
            start: {
              line: 84,
              column: 9
            },
            end: {
              line: 84,
              column: 25
            }
          },
          loc: {
            start: {
              line: 84,
              column: 35
            },
            end: {
              line: 91,
              column: 1
            }
          },
          line: 84
        },
        "2": {
          name: "bootstrapHandler",
          decl: {
            start: {
              line: 93,
              column: 9
            },
            end: {
              line: 93,
              column: 25
            }
          },
          loc: {
            start: {
              line: 93,
              column: 39
            },
            end: {
              line: 103,
              column: 1
            }
          },
          line: 93
        },
        "3": {
          name: "handler",
          decl: {
            start: {
              line: 94,
              column: 18
            },
            end: {
              line: 94,
              column: 25
            }
          },
          loc: {
            start: {
              line: 94,
              column: 33
            },
            end: {
              line: 102,
              column: 3
            }
          },
          line: 94
        },
        "4": {
          name: "bootstrapDelegationHandler",
          decl: {
            start: {
              line: 105,
              column: 9
            },
            end: {
              line: 105,
              column: 35
            }
          },
          loc: {
            start: {
              line: 105,
              column: 59
            },
            end: {
              line: 125,
              column: 1
            }
          },
          line: 105
        },
        "5": {
          name: "handler",
          decl: {
            start: {
              line: 106,
              column: 18
            },
            end: {
              line: 106,
              column: 25
            }
          },
          loc: {
            start: {
              line: 106,
              column: 33
            },
            end: {
              line: 124,
              column: 3
            }
          },
          line: 106
        },
        "6": {
          name: "findHandler",
          decl: {
            start: {
              line: 127,
              column: 9
            },
            end: {
              line: 127,
              column: 20
            }
          },
          loc: {
            start: {
              line: 127,
              column: 66
            },
            end: {
              line: 130,
              column: 1
            }
          },
          line: 127
        },
        "7": {
          name: "(anonymous_7)",
          decl: {
            start: {
              line: 129,
              column: 10
            },
            end: {
              line: 129,
              column: 11
            }
          },
          loc: {
            start: {
              line: 129,
              column: 19
            },
            end: {
              line: 129,
              column: 97
            }
          },
          line: 129
        },
        "8": {
          name: "normalizeParameters",
          decl: {
            start: {
              line: 132,
              column: 9
            },
            end: {
              line: 132,
              column: 28
            }
          },
          loc: {
            start: {
              line: 132,
              column: 77
            },
            end: {
              line: 143,
              column: 1
            }
          },
          line: 132
        },
        "9": {
          name: "addHandler",
          decl: {
            start: {
              line: 145,
              column: 9
            },
            end: {
              line: 145,
              column: 19
            }
          },
          loc: {
            start: {
              line: 145,
              column: 85
            },
            end: {
              line: 188,
              column: 1
            }
          },
          line: 145
        },
        "10": {
          name: "(anonymous_10)",
          decl: {
            start: {
              line: 155,
              column: 25
            },
            end: {
              line: 155,
              column: 26
            }
          },
          loc: {
            start: {
              line: 155,
              column: 31
            },
            end: {
              line: 161,
              column: 5
            }
          },
          line: 155
        },
        "11": {
          name: "(anonymous_11)",
          decl: {
            start: {
              line: 156,
              column: 13
            },
            end: {
              line: 156,
              column: 14
            }
          },
          loc: {
            start: {
              line: 156,
              column: 30
            },
            end: {
              line: 160,
              column: 7
            }
          },
          line: 156
        },
        "12": {
          name: "removeHandler",
          decl: {
            start: {
              line: 190,
              column: 9
            },
            end: {
              line: 190,
              column: 22
            }
          },
          loc: {
            start: {
              line: 190,
              column: 80
            },
            end: {
              line: 199,
              column: 1
            }
          },
          line: 190
        },
        "13": {
          name: "removeNamespacedHandlers",
          decl: {
            start: {
              line: 201,
              column: 9
            },
            end: {
              line: 201,
              column: 33
            }
          },
          loc: {
            start: {
              line: 201,
              column: 73
            },
            end: {
              line: 209,
              column: 1
            }
          },
          line: 201
        },
        "14": {
          name: "getTypeEvent",
          decl: {
            start: {
              line: 211,
              column: 9
            },
            end: {
              line: 211,
              column: 21
            }
          },
          loc: {
            start: {
              line: 211,
              column: 29
            },
            end: {
              line: 215,
              column: 1
            }
          },
          line: 211
        },
        "15": {
          name: "(anonymous_15)",
          decl: {
            start: {
              line: 218,
              column: 2
            },
            end: {
              line: 218,
              column: 3
            }
          },
          loc: {
            start: {
              line: 218,
              column: 50
            },
            end: {
              line: 220,
              column: 3
            }
          },
          line: 218
        },
        "16": {
          name: "(anonymous_16)",
          decl: {
            start: {
              line: 222,
              column: 2
            },
            end: {
              line: 222,
              column: 3
            }
          },
          loc: {
            start: {
              line: 222,
              column: 51
            },
            end: {
              line: 224,
              column: 3
            }
          },
          line: 222
        },
        "17": {
          name: "(anonymous_17)",
          decl: {
            start: {
              line: 226,
              column: 2
            },
            end: {
              line: 226,
              column: 3
            }
          },
          loc: {
            start: {
              line: 226,
              column: 63
            },
            end: {
              line: 260,
              column: 3
            }
          },
          line: 226
        },
        "18": {
          name: "(anonymous_18)",
          decl: {
            start: {
              line: 262,
              column: 2
            },
            end: {
              line: 262,
              column: 3
            }
          },
          loc: {
            start: {
              line: 262,
              column: 32
            },
            end: {
              line: 300,
              column: 3
            }
          },
          line: 262
        },
        "19": {
          name: "hydrateObj",
          decl: {
            start: {
              line: 303,
              column: 9
            },
            end: {
              line: 303,
              column: 19
            }
          },
          loc: {
            start: {
              line: 303,
              column: 36
            },
            end: {
              line: 318,
              column: 1
            }
          },
          line: 303
        },
        "20": {
          name: "(anonymous_20)",
          decl: {
            start: {
              line: 310,
              column: 8
            },
            end: {
              line: 310,
              column: 9
            }
          },
          loc: {
            start: {
              line: 310,
              column: 14
            },
            end: {
              line: 312,
              column: 9
            }
          },
          line: 310
        }
      },
      branchMap: {
        "0": {
          loc: {
            start: {
              line: 81,
              column: 9
            },
            end: {
              line: 81,
              column: 75
            }
          },
          type: "binary-expr",
          locations: [{
            start: {
              line: 81,
              column: 10
            },
            end: {
              line: 81,
              column: 13
            }
          }, {
            start: {
              line: 81,
              column: 17
            },
            end: {
              line: 81,
              column: 40
            }
          }, {
            start: {
              line: 81,
              column: 45
            },
            end: {
              line: 81,
              column: 61
            }
          }, {
            start: {
              line: 81,
              column: 65
            },
            end: {
              line: 81,
              column: 75
            }
          }],
          line: 81
        },
        "1": {
          loc: {
            start: {
              line: 88,
              column: 23
            },
            end: {
              line: 88,
              column: 47
            }
          },
          type: "binary-expr",
          locations: [{
            start: {
              line: 88,
              column: 23
            },
            end: {
              line: 88,
              column: 41
            }
          }, {
            start: {
              line: 88,
              column: 45
            },
            end: {
              line: 88,
              column: 47
            }
          }],
          line: 88
        },
        "2": {
          loc: {
            start: {
              line: 97,
              column: 4
            },
            end: {
              line: 99,
              column: 5
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 97,
              column: 4
            },
            end: {
              line: 99,
              column: 5
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 97
        },
        "3": {
          loc: {
            start: {
              line: 109,
              column: 33
            },
            end: {
              line: 109,
              column: 58
            }
          },
          type: "binary-expr",
          locations: [{
            start: {
              line: 109,
              column: 33
            },
            end: {
              line: 109,
              column: 39
            }
          }, {
            start: {
              line: 109,
              column: 43
            },
            end: {
              line: 109,
              column: 58
            }
          }],
          line: 109
        },
        "4": {
          loc: {
            start: {
              line: 111,
              column: 8
            },
            end: {
              line: 113,
              column: 9
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 111,
              column: 8
            },
            end: {
              line: 113,
              column: 9
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 111
        },
        "5": {
          loc: {
            start: {
              line: 117,
              column: 8
            },
            end: {
              line: 119,
              column: 9
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 117,
              column: 8
            },
            end: {
              line: 119,
              column: 9
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 117
        },
        "6": {
          loc: {
            start: {
              line: 127,
              column: 39
            },
            end: {
              line: 127,
              column: 64
            }
          },
          type: "default-arg",
          locations: [{
            start: {
              line: 127,
              column: 60
            },
            end: {
              line: 127,
              column: 64
            }
          }],
          line: 127
        },
        "7": {
          loc: {
            start: {
              line: 129,
              column: 19
            },
            end: {
              line: 129,
              column: 97
            }
          },
          type: "binary-expr",
          locations: [{
            start: {
              line: 129,
              column: 19
            },
            end: {
              line: 129,
              column: 46
            }
          }, {
            start: {
              line: 129,
              column: 50
            },
            end: {
              line: 129,
              column: 97
            }
          }],
          line: 129
        },
        "8": {
          loc: {
            start: {
              line: 135,
              column: 19
            },
            end: {
              line: 135,
              column: 85
            }
          },
          type: "cond-expr",
          locations: [{
            start: {
              line: 135,
              column: 33
            },
            end: {
              line: 135,
              column: 51
            }
          }, {
            start: {
              line: 135,
              column: 55
            },
            end: {
              line: 135,
              column: 84
            }
          }],
          line: 135
        },
        "9": {
          loc: {
            start: {
              line: 135,
              column: 55
            },
            end: {
              line: 135,
              column: 84
            }
          },
          type: "binary-expr",
          locations: [{
            start: {
              line: 135,
              column: 55
            },
            end: {
              line: 135,
              column: 62
            }
          }, {
            start: {
              line: 135,
              column: 66
            },
            end: {
              line: 135,
              column: 84
            }
          }],
          line: 135
        },
        "10": {
          loc: {
            start: {
              line: 138,
              column: 2
            },
            end: {
              line: 140,
              column: 3
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 138,
              column: 2
            },
            end: {
              line: 140,
              column: 3
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 138
        },
        "11": {
          loc: {
            start: {
              line: 146,
              column: 2
            },
            end: {
              line: 148,
              column: 3
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 146,
              column: 2
            },
            end: {
              line: 148,
              column: 3
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 146
        },
        "12": {
          loc: {
            start: {
              line: 146,
              column: 6
            },
            end: {
              line: 146,
              column: 55
            }
          },
          type: "binary-expr",
          locations: [{
            start: {
              line: 146,
              column: 6
            },
            end: {
              line: 146,
              column: 43
            }
          }, {
            start: {
              line: 146,
              column: 47
            },
            end: {
              line: 146,
              column: 55
            }
          }],
          line: 146
        },
        "13": {
          loc: {
            start: {
              line: 154,
              column: 2
            },
            end: {
              line: 164,
              column: 3
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 154,
              column: 2
            },
            end: {
              line: 164,
              column: 3
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 154
        },
        "14": {
          loc: {
            start: {
              line: 157,
              column: 8
            },
            end: {
              line: 159,
              column: 9
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 157,
              column: 8
            },
            end: {
              line: 159,
              column: 9
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 157
        },
        "15": {
          loc: {
            start: {
              line: 157,
              column: 12
            },
            end: {
              line: 157,
              column: 137
            }
          },
          type: "binary-expr",
          locations: [{
            start: {
              line: 157,
              column: 12
            },
            end: {
              line: 157,
              column: 32
            }
          }, {
            start: {
              line: 157,
              column: 37
            },
            end: {
              line: 157,
              column: 81
            }
          }, {
            start: {
              line: 157,
              column: 85
            },
            end: {
              line: 157,
              column: 136
            }
          }],
          line: 157
        },
        "16": {
          loc: {
            start: {
              line: 167,
              column: 19
            },
            end: {
              line: 167,
              column: 64
            }
          },
          type: "binary-expr",
          locations: [{
            start: {
              line: 167,
              column: 19
            },
            end: {
              line: 167,
              column: 36
            }
          }, {
            start: {
              line: 167,
              column: 41
            },
            end: {
              line: 167,
              column: 63
            }
          }],
          line: 167
        },
        "17": {
          loc: {
            start: {
              line: 168,
              column: 59
            },
            end: {
              line: 168,
              column: 87
            }
          },
          type: "cond-expr",
          locations: [{
            start: {
              line: 168,
              column: 73
            },
            end: {
              line: 168,
              column: 80
            }
          }, {
            start: {
              line: 168,
              column: 83
            },
            end: {
              line: 168,
              column: 87
            }
          }],
          line: 168
        },
        "18": {
          loc: {
            start: {
              line: 170,
              column: 2
            },
            end: {
              line: 174,
              column: 3
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 170,
              column: 2
            },
            end: {
              line: 174,
              column: 3
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 170
        },
        "19": {
          loc: {
            start: {
              line: 171,
              column: 30
            },
            end: {
              line: 171,
              column: 63
            }
          },
          type: "binary-expr",
          locations: [{
            start: {
              line: 171,
              column: 30
            },
            end: {
              line: 171,
              column: 53
            }
          }, {
            start: {
              line: 171,
              column: 57
            },
            end: {
              line: 171,
              column: 63
            }
          }],
          line: 171
        },
        "20": {
          loc: {
            start: {
              line: 177,
              column: 13
            },
            end: {
              line: 179,
              column: 39
            }
          },
          type: "cond-expr",
          locations: [{
            start: {
              line: 178,
              column: 4
            },
            end: {
              line: 178,
              column: 58
            }
          }, {
            start: {
              line: 179,
              column: 4
            },
            end: {
              line: 179,
              column: 39
            }
          }],
          line: 177
        },
        "21": {
          loc: {
            start: {
              line: 181,
              column: 26
            },
            end: {
              line: 181,
              column: 54
            }
          },
          type: "cond-expr",
          locations: [{
            start: {
              line: 181,
              column: 40
            },
            end: {
              line: 181,
              column: 47
            }
          }, {
            start: {
              line: 181,
              column: 50
            },
            end: {
              line: 181,
              column: 54
            }
          }],
          line: 181
        },
        "22": {
          loc: {
            start: {
              line: 193,
              column: 2
            },
            end: {
              line: 195,
              column: 3
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 193,
              column: 2
            },
            end: {
              line: 195,
              column: 3
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 193
        },
        "23": {
          loc: {
            start: {
              line: 202,
              column: 28
            },
            end: {
              line: 202,
              column: 51
            }
          },
          type: "binary-expr",
          locations: [{
            start: {
              line: 202,
              column: 28
            },
            end: {
              line: 202,
              column: 45
            }
          }, {
            start: {
              line: 202,
              column: 49
            },
            end: {
              line: 202,
              column: 51
            }
          }],
          line: 202
        },
        "24": {
          loc: {
            start: {
              line: 205,
              column: 4
            },
            end: {
              line: 207,
              column: 5
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 205,
              column: 4
            },
            end: {
              line: 207,
              column: 5
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 205
        },
        "25": {
          loc: {
            start: {
              line: 214,
              column: 9
            },
            end: {
              line: 214,
              column: 37
            }
          },
          type: "binary-expr",
          locations: [{
            start: {
              line: 214,
              column: 9
            },
            end: {
              line: 214,
              column: 28
            }
          }, {
            start: {
              line: 214,
              column: 32
            },
            end: {
              line: 214,
              column: 37
            }
          }],
          line: 214
        },
        "26": {
          loc: {
            start: {
              line: 227,
              column: 4
            },
            end: {
              line: 229,
              column: 5
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 227,
              column: 4
            },
            end: {
              line: 229,
              column: 5
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 227
        },
        "27": {
          loc: {
            start: {
              line: 227,
              column: 8
            },
            end: {
              line: 227,
              column: 57
            }
          },
          type: "binary-expr",
          locations: [{
            start: {
              line: 227,
              column: 8
            },
            end: {
              line: 227,
              column: 45
            }
          }, {
            start: {
              line: 227,
              column: 49
            },
            end: {
              line: 227,
              column: 57
            }
          }],
          line: 227
        },
        "28": {
          loc: {
            start: {
              line: 234,
              column: 30
            },
            end: {
              line: 234,
              column: 53
            }
          },
          type: "binary-expr",
          locations: [{
            start: {
              line: 234,
              column: 30
            },
            end: {
              line: 234,
              column: 47
            }
          }, {
            start: {
              line: 234,
              column: 51
            },
            end: {
              line: 234,
              column: 53
            }
          }],
          line: 234
        },
        "29": {
          loc: {
            start: {
              line: 237,
              column: 4
            },
            end: {
              line: 245,
              column: 5
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 237,
              column: 4
            },
            end: {
              line: 245,
              column: 5
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 237
        },
        "30": {
          loc: {
            start: {
              line: 239,
              column: 6
            },
            end: {
              line: 241,
              column: 7
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 239,
              column: 6
            },
            end: {
              line: 241,
              column: 7
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 239
        },
        "31": {
          loc: {
            start: {
              line: 243,
              column: 58
            },
            end: {
              line: 243,
              column: 86
            }
          },
          type: "cond-expr",
          locations: [{
            start: {
              line: 243,
              column: 72
            },
            end: {
              line: 243,
              column: 79
            }
          }, {
            start: {
              line: 243,
              column: 82
            },
            end: {
              line: 243,
              column: 86
            }
          }],
          line: 243
        },
        "32": {
          loc: {
            start: {
              line: 247,
              column: 4
            },
            end: {
              line: 251,
              column: 5
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 247,
              column: 4
            },
            end: {
              line: 251,
              column: 5
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 247
        },
        "33": {
          loc: {
            start: {
              line: 256,
              column: 6
            },
            end: {
              line: 258,
              column: 7
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 256,
              column: 6
            },
            end: {
              line: 258,
              column: 7
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 256
        },
        "34": {
          loc: {
            start: {
              line: 256,
              column: 10
            },
            end: {
              line: 256,
              column: 64
            }
          },
          type: "binary-expr",
          locations: [{
            start: {
              line: 256,
              column: 10
            },
            end: {
              line: 256,
              column: 22
            }
          }, {
            start: {
              line: 256,
              column: 26
            },
            end: {
              line: 256,
              column: 64
            }
          }],
          line: 256
        },
        "35": {
          loc: {
            start: {
              line: 263,
              column: 4
            },
            end: {
              line: 265,
              column: 5
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 263,
              column: 4
            },
            end: {
              line: 265,
              column: 5
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 263
        },
        "36": {
          loc: {
            start: {
              line: 263,
              column: 8
            },
            end: {
              line: 263,
              column: 45
            }
          },
          type: "binary-expr",
          locations: [{
            start: {
              line: 263,
              column: 8
            },
            end: {
              line: 263,
              column: 33
            }
          }, {
            start: {
              line: 263,
              column: 37
            },
            end: {
              line: 263,
              column: 45
            }
          }],
          line: 263
        },
        "37": {
          loc: {
            start: {
              line: 276,
              column: 4
            },
            end: {
              line: 283,
              column: 5
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 276,
              column: 4
            },
            end: {
              line: 283,
              column: 5
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 276
        },
        "38": {
          loc: {
            start: {
              line: 276,
              column: 8
            },
            end: {
              line: 276,
              column: 24
            }
          },
          type: "binary-expr",
          locations: [{
            start: {
              line: 276,
              column: 8
            },
            end: {
              line: 276,
              column: 19
            }
          }, {
            start: {
              line: 276,
              column: 23
            },
            end: {
              line: 276,
              column: 24
            }
          }],
          line: 276
        },
        "39": {
          loc: {
            start: {
              line: 287,
              column: 4
            },
            end: {
              line: 289,
              column: 5
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 287,
              column: 4
            },
            end: {
              line: 289,
              column: 5
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 287
        },
        "40": {
          loc: {
            start: {
              line: 291,
              column: 4
            },
            end: {
              line: 293,
              column: 5
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 291,
              column: 4
            },
            end: {
              line: 293,
              column: 5
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 291
        },
        "41": {
          loc: {
            start: {
              line: 295,
              column: 4
            },
            end: {
              line: 297,
              column: 5
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 295,
              column: 4
            },
            end: {
              line: 297,
              column: 5
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 295
        },
        "42": {
          loc: {
            start: {
              line: 295,
              column: 8
            },
            end: {
              line: 295,
              column: 43
            }
          },
          type: "binary-expr",
          locations: [{
            start: {
              line: 295,
              column: 8
            },
            end: {
              line: 295,
              column: 28
            }
          }, {
            start: {
              line: 295,
              column: 32
            },
            end: {
              line: 295,
              column: 43
            }
          }],
          line: 295
        },
        "43": {
          loc: {
            start: {
              line: 303,
              column: 25
            },
            end: {
              line: 303,
              column: 34
            }
          },
          type: "default-arg",
          locations: [{
            start: {
              line: 303,
              column: 32
            },
            end: {
              line: 303,
              column: 34
            }
          }],
          line: 303
        }
      },
      s: {
        "0": 0,
        "1": 0,
        "2": 0,
        "3": 0,
        "4": 0,
        "5": 0,
        "6": 0,
        "7": 0,
        "8": 0,
        "9": 0,
        "10": 0,
        "11": 0,
        "12": 0,
        "13": 0,
        "14": 0,
        "15": 0,
        "16": 0,
        "17": 0,
        "18": 0,
        "19": 0,
        "20": 0,
        "21": 0,
        "22": 0,
        "23": 0,
        "24": 0,
        "25": 0,
        "26": 0,
        "27": 0,
        "28": 0,
        "29": 0,
        "30": 0,
        "31": 0,
        "32": 0,
        "33": 0,
        "34": 0,
        "35": 0,
        "36": 0,
        "37": 0,
        "38": 0,
        "39": 0,
        "40": 0,
        "41": 0,
        "42": 0,
        "43": 0,
        "44": 0,
        "45": 0,
        "46": 0,
        "47": 0,
        "48": 0,
        "49": 0,
        "50": 0,
        "51": 0,
        "52": 0,
        "53": 0,
        "54": 0,
        "55": 0,
        "56": 0,
        "57": 0,
        "58": 0,
        "59": 0,
        "60": 0,
        "61": 0,
        "62": 0,
        "63": 0,
        "64": 0,
        "65": 0,
        "66": 0,
        "67": 0,
        "68": 0,
        "69": 0,
        "70": 0,
        "71": 0,
        "72": 0,
        "73": 0,
        "74": 0,
        "75": 0,
        "76": 0,
        "77": 0,
        "78": 0,
        "79": 0,
        "80": 0,
        "81": 0,
        "82": 0,
        "83": 0,
        "84": 0,
        "85": 0,
        "86": 0,
        "87": 0,
        "88": 0,
        "89": 0,
        "90": 0,
        "91": 0,
        "92": 0,
        "93": 0,
        "94": 0,
        "95": 0,
        "96": 0,
        "97": 0,
        "98": 0,
        "99": 0,
        "100": 0,
        "101": 0,
        "102": 0,
        "103": 0,
        "104": 0,
        "105": 0,
        "106": 0,
        "107": 0,
        "108": 0,
        "109": 0,
        "110": 0,
        "111": 0,
        "112": 0,
        "113": 0,
        "114": 0,
        "115": 0,
        "116": 0,
        "117": 0,
        "118": 0,
        "119": 0,
        "120": 0
      },
      f: {
        "0": 0,
        "1": 0,
        "2": 0,
        "3": 0,
        "4": 0,
        "5": 0,
        "6": 0,
        "7": 0,
        "8": 0,
        "9": 0,
        "10": 0,
        "11": 0,
        "12": 0,
        "13": 0,
        "14": 0,
        "15": 0,
        "16": 0,
        "17": 0,
        "18": 0,
        "19": 0,
        "20": 0
      },
      b: {
        "0": [0, 0, 0, 0],
        "1": [0, 0],
        "2": [0, 0],
        "3": [0, 0],
        "4": [0, 0],
        "5": [0, 0],
        "6": [0],
        "7": [0, 0],
        "8": [0, 0],
        "9": [0, 0],
        "10": [0, 0],
        "11": [0, 0],
        "12": [0, 0],
        "13": [0, 0],
        "14": [0, 0],
        "15": [0, 0, 0],
        "16": [0, 0],
        "17": [0, 0],
        "18": [0, 0],
        "19": [0, 0],
        "20": [0, 0],
        "21": [0, 0],
        "22": [0, 0],
        "23": [0, 0],
        "24": [0, 0],
        "25": [0, 0],
        "26": [0, 0],
        "27": [0, 0],
        "28": [0, 0],
        "29": [0, 0],
        "30": [0, 0],
        "31": [0, 0],
        "32": [0, 0],
        "33": [0, 0],
        "34": [0, 0],
        "35": [0, 0],
        "36": [0, 0],
        "37": [0, 0],
        "38": [0, 0],
        "39": [0, 0],
        "40": [0, 0],
        "41": [0, 0],
        "42": [0, 0],
        "43": [0]
      },
      inputSourceMap: {
        version: 3,
        sources: ["/Users/lukaszholeczek/Projekty/CoreUI/mrholek/coreui-pro/js/src/dom/event-handler.js"],
        sourcesContent: ["/**\n * --------------------------------------------------------------------------\n * CoreUI dom/event-handler.js\n * Licensed under MIT (https://github.com/coreui/coreui/blob/main/LICENSE)\n *\n * This is a modified version of the Bootstrap's dom/event-handler.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport { getjQuery } from '../util/index.js'\n\n/**\n * Constants\n */\n\nconst namespaceRegex = /[^.]*(?=\\..*)\\.|.*/\nconst stripNameRegex = /\\..*/\nconst stripUidRegex = /::\\d+$/\nconst eventRegistry = {} // Events storage\nlet uidEvent = 1\nconst customEvents = {\n  mouseenter: 'mouseover',\n  mouseleave: 'mouseout'\n}\n\nconst nativeEvents = new Set([\n  'click',\n  'dblclick',\n  'mouseup',\n  'mousedown',\n  'contextmenu',\n  'mousewheel',\n  'DOMMouseScroll',\n  'mouseover',\n  'mouseout',\n  'mousemove',\n  'selectstart',\n  'selectend',\n  'keydown',\n  'keypress',\n  'keyup',\n  'orientationchange',\n  'touchstart',\n  'touchmove',\n  'touchend',\n  'touchcancel',\n  'pointerdown',\n  'pointermove',\n  'pointerup',\n  'pointerleave',\n  'pointercancel',\n  'gesturestart',\n  'gesturechange',\n  'gestureend',\n  'focus',\n  'blur',\n  'change',\n  'reset',\n  'select',\n  'submit',\n  'focusin',\n  'focusout',\n  'load',\n  'unload',\n  'beforeunload',\n  'resize',\n  'move',\n  'DOMContentLoaded',\n  'readystatechange',\n  'error',\n  'abort',\n  'scroll'\n])\n\n/**\n * Private methods\n */\n\nfunction makeEventUid(element, uid) {\n  return (uid && `${uid}::${uidEvent++}`) || element.uidEvent || uidEvent++\n}\n\nfunction getElementEvents(element) {\n  const uid = makeEventUid(element)\n\n  element.uidEvent = uid\n  eventRegistry[uid] = eventRegistry[uid] || {}\n\n  return eventRegistry[uid]\n}\n\nfunction bootstrapHandler(element, fn) {\n  return function handler(event) {\n    hydrateObj(event, { delegateTarget: element })\n\n    if (handler.oneOff) {\n      EventHandler.off(element, event.type, fn)\n    }\n\n    return fn.apply(element, [event])\n  }\n}\n\nfunction bootstrapDelegationHandler(element, selector, fn) {\n  return function handler(event) {\n    const domElements = element.querySelectorAll(selector)\n\n    for (let { target } = event; target && target !== this; target = target.parentNode) {\n      for (const domElement of domElements) {\n        if (domElement !== target) {\n          continue\n        }\n\n        hydrateObj(event, { delegateTarget: target })\n\n        if (handler.oneOff) {\n          EventHandler.off(element, event.type, selector, fn)\n        }\n\n        return fn.apply(target, [event])\n      }\n    }\n  }\n}\n\nfunction findHandler(events, callable, delegationSelector = null) {\n  return Object.values(events)\n    .find(event => event.callable === callable && event.delegationSelector === delegationSelector)\n}\n\nfunction normalizeParameters(originalTypeEvent, handler, delegationFunction) {\n  const isDelegated = typeof handler === 'string'\n  // TODO: tooltip passes `false` instead of selector, so we need to check\n  const callable = isDelegated ? delegationFunction : (handler || delegationFunction)\n  let typeEvent = getTypeEvent(originalTypeEvent)\n\n  if (!nativeEvents.has(typeEvent)) {\n    typeEvent = originalTypeEvent\n  }\n\n  return [isDelegated, callable, typeEvent]\n}\n\nfunction addHandler(element, originalTypeEvent, handler, delegationFunction, oneOff) {\n  if (typeof originalTypeEvent !== 'string' || !element) {\n    return\n  }\n\n  let [isDelegated, callable, typeEvent] = normalizeParameters(originalTypeEvent, handler, delegationFunction)\n\n  // in case of mouseenter or mouseleave wrap the handler within a function that checks for its DOM position\n  // this prevents the handler from being dispatched the same way as mouseover or mouseout does\n  if (originalTypeEvent in customEvents) {\n    const wrapFunction = fn => {\n      return function (event) {\n        if (!event.relatedTarget || (event.relatedTarget !== event.delegateTarget && !event.delegateTarget.contains(event.relatedTarget))) {\n          return fn.call(this, event)\n        }\n      }\n    }\n\n    callable = wrapFunction(callable)\n  }\n\n  const events = getElementEvents(element)\n  const handlers = events[typeEvent] || (events[typeEvent] = {})\n  const previousFunction = findHandler(handlers, callable, isDelegated ? handler : null)\n\n  if (previousFunction) {\n    previousFunction.oneOff = previousFunction.oneOff && oneOff\n\n    return\n  }\n\n  const uid = makeEventUid(callable, originalTypeEvent.replace(namespaceRegex, ''))\n  const fn = isDelegated ?\n    bootstrapDelegationHandler(element, handler, callable) :\n    bootstrapHandler(element, callable)\n\n  fn.delegationSelector = isDelegated ? handler : null\n  fn.callable = callable\n  fn.oneOff = oneOff\n  fn.uidEvent = uid\n  handlers[uid] = fn\n\n  element.addEventListener(typeEvent, fn, isDelegated)\n}\n\nfunction removeHandler(element, events, typeEvent, handler, delegationSelector) {\n  const fn = findHandler(events[typeEvent], handler, delegationSelector)\n\n  if (!fn) {\n    return\n  }\n\n  element.removeEventListener(typeEvent, fn, Boolean(delegationSelector))\n  delete events[typeEvent][fn.uidEvent]\n}\n\nfunction removeNamespacedHandlers(element, events, typeEvent, namespace) {\n  const storeElementEvent = events[typeEvent] || {}\n\n  for (const [handlerKey, event] of Object.entries(storeElementEvent)) {\n    if (handlerKey.includes(namespace)) {\n      removeHandler(element, events, typeEvent, event.callable, event.delegationSelector)\n    }\n  }\n}\n\nfunction getTypeEvent(event) {\n  // allow to get the native events from namespaced events ('click.coreui.button' --> 'click')\n  event = event.replace(stripNameRegex, '')\n  return customEvents[event] || event\n}\n\nconst EventHandler = {\n  on(element, event, handler, delegationFunction) {\n    addHandler(element, event, handler, delegationFunction, false)\n  },\n\n  one(element, event, handler, delegationFunction) {\n    addHandler(element, event, handler, delegationFunction, true)\n  },\n\n  off(element, originalTypeEvent, handler, delegationFunction) {\n    if (typeof originalTypeEvent !== 'string' || !element) {\n      return\n    }\n\n    const [isDelegated, callable, typeEvent] = normalizeParameters(originalTypeEvent, handler, delegationFunction)\n    const inNamespace = typeEvent !== originalTypeEvent\n    const events = getElementEvents(element)\n    const storeElementEvent = events[typeEvent] || {}\n    const isNamespace = originalTypeEvent.startsWith('.')\n\n    if (typeof callable !== 'undefined') {\n      // Simplest case: handler is passed, remove that listener ONLY.\n      if (!Object.keys(storeElementEvent).length) {\n        return\n      }\n\n      removeHandler(element, events, typeEvent, callable, isDelegated ? handler : null)\n      return\n    }\n\n    if (isNamespace) {\n      for (const elementEvent of Object.keys(events)) {\n        removeNamespacedHandlers(element, events, elementEvent, originalTypeEvent.slice(1))\n      }\n    }\n\n    for (const [keyHandlers, event] of Object.entries(storeElementEvent)) {\n      const handlerKey = keyHandlers.replace(stripUidRegex, '')\n\n      if (!inNamespace || originalTypeEvent.includes(handlerKey)) {\n        removeHandler(element, events, typeEvent, event.callable, event.delegationSelector)\n      }\n    }\n  },\n\n  trigger(element, event, args) {\n    if (typeof event !== 'string' || !element) {\n      return null\n    }\n\n    const $ = getjQuery()\n    const typeEvent = getTypeEvent(event)\n    const inNamespace = event !== typeEvent\n\n    let jQueryEvent = null\n    let bubbles = true\n    let nativeDispatch = true\n    let defaultPrevented = false\n\n    if (inNamespace && $) {\n      jQueryEvent = $.Event(event, args)\n\n      $(element).trigger(jQueryEvent)\n      bubbles = !jQueryEvent.isPropagationStopped()\n      nativeDispatch = !jQueryEvent.isImmediatePropagationStopped()\n      defaultPrevented = jQueryEvent.isDefaultPrevented()\n    }\n\n    const evt = hydrateObj(new Event(event, { bubbles, cancelable: true }), args)\n\n    if (defaultPrevented) {\n      evt.preventDefault()\n    }\n\n    if (nativeDispatch) {\n      element.dispatchEvent(evt)\n    }\n\n    if (evt.defaultPrevented && jQueryEvent) {\n      jQueryEvent.preventDefault()\n    }\n\n    return evt\n  }\n}\n\nfunction hydrateObj(obj, meta = {}) {\n  for (const [key, value] of Object.entries(meta)) {\n    try {\n      obj[key] = value\n    } catch {\n      Object.defineProperty(obj, key, {\n        configurable: true,\n        get() {\n          return value\n        }\n      })\n    }\n  }\n\n  return obj\n}\n\nexport default EventHandler\n"],
        names: [],
        mappings: "AAAA,CAAC,CAAC;AACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5E,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzE,CAAC;AACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACdhB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC;;AAED,CAAC,CAAC;AACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC;;AAEF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAElC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAE9C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAEjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9C,CAAC,CAAC,CAAC,CAAC;;AAEJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC;AACF;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAEzD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAER,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAEpvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC;AACF;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACljhD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAEhD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChrF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzzpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC;;AAEJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC;;AAEF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzvF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAE9D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC;;AAEF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAEtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAEnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrD;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAEvE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC;;AAEF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAElD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxF,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC;AACF;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7F,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjE,CAAC,CAAC,CAAC;;AAEH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChjH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAExD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAEN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC,CAAC;;AAEJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtlhC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC,CAAC;;AAEJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAE1C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAE/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAEvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxD,CAAC,CAAC,CAAC,CAAC;;AAEJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAEhF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC;;AAEJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC,CAAC,CAAC,CAAC;;AAEJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC;;AAEJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC;AACF;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC;;AAEF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;",
        file: undefined
      },
      _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
      hash: "95a892d04b60654d637d45fc7abcd2c048e59cde"
    };
    var coverage = global[gcv] || (global[gcv] = {});
    if (!coverage[path] || coverage[path].hash !== hash) {
      coverage[path] = coverageData;
    }
    var actualCoverage = coverage[path];
    {
      // @ts-ignore
      cov_1mdef3fyys = function () {
        return actualCoverage;
      };
    }
    return actualCoverage;
  }
  cov_1mdef3fyys(); /**
                    * --------------------------------------------------------------------------
                    * CoreUI dom/event-handler.js
                    * Licensed under MIT (https://github.com/coreui/coreui/blob/main/LICENSE)
                    *
                    * This is a modified version of the Bootstrap's dom/event-handler.js
                    * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
                    * --------------------------------------------------------------------------
                    */
  const namespaceRegex = (cov_1mdef3fyys().s[0]++, /[^.]*(?=\..*)\.|.*/);
  const stripNameRegex = (cov_1mdef3fyys().s[1]++, /\..*/);
  const stripUidRegex = (cov_1mdef3fyys().s[2]++, /::\d+$/);
  const eventRegistry = (cov_1mdef3fyys().s[3]++, {}); // Events storage
  let uidEvent = (cov_1mdef3fyys().s[4]++, 1);
  const customEvents = (cov_1mdef3fyys().s[5]++, {
    mouseenter: 'mouseover',
    mouseleave: 'mouseout'
  });
  const nativeEvents = (cov_1mdef3fyys().s[6]++, new Set(['click', 'dblclick', 'mouseup', 'mousedown', 'contextmenu', 'mousewheel', 'DOMMouseScroll', 'mouseover', 'mouseout', 'mousemove', 'selectstart', 'selectend', 'keydown', 'keypress', 'keyup', 'orientationchange', 'touchstart', 'touchmove', 'touchend', 'touchcancel', 'pointerdown', 'pointermove', 'pointerup', 'pointerleave', 'pointercancel', 'gesturestart', 'gesturechange', 'gestureend', 'focus', 'blur', 'change', 'reset', 'select', 'submit', 'focusin', 'focusout', 'load', 'unload', 'beforeunload', 'resize', 'move', 'DOMContentLoaded', 'readystatechange', 'error', 'abort', 'scroll'])); /**
rivate methods
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        */
  function makeEventUid(element, uid) {
    cov_1mdef3fyys().f[0]++;
    cov_1mdef3fyys().s[7]++;
    return (cov_1mdef3fyys().b[0][0]++, uid) && (cov_1mdef3fyys().b[0][1]++, `${uid}::${uidEvent++}`) || (cov_1mdef3fyys().b[0][2]++, element.uidEvent) || (cov_1mdef3fyys().b[0][3]++, uidEvent++);
  }
  function getElementEvents(element) {
    cov_1mdef3fyys().f[1]++;
    const uid = (cov_1mdef3fyys().s[8]++, makeEventUid(element));
    cov_1mdef3fyys().s[9]++;
    element.uidEvent = uid;
    cov_1mdef3fyys().s[10]++;
    eventRegistry[uid] = (cov_1mdef3fyys().b[1][0]++, eventRegistry[uid]) || (cov_1mdef3fyys().b[1][1]++, {});
    cov_1mdef3fyys().s[11]++;
    return eventRegistry[uid];
  }
  function bootstrapHandler(element, fn) {
    cov_1mdef3fyys().f[2]++;
    cov_1mdef3fyys().s[12]++;
    return function handler(event) {
      cov_1mdef3fyys().f[3]++;
      cov_1mdef3fyys().s[13]++;
      hydrateObj(event, {
        delegateTarget: element
      });
      cov_1mdef3fyys().s[14]++;
      if (handler.oneOff) {
        cov_1mdef3fyys().b[2][0]++;
        cov_1mdef3fyys().s[15]++;
        EventHandler.off(element, event.type, fn);
      } else {
        cov_1mdef3fyys().b[2][1]++;
      }
      cov_1mdef3fyys().s[16]++;
      return fn.apply(element, [event]);
    };
  }
  function bootstrapDelegationHandler(element, selector, fn) {
    cov_1mdef3fyys().f[4]++;
    cov_1mdef3fyys().s[17]++;
    return function handler(event) {
      cov_1mdef3fyys().f[5]++;
      const domElements = (cov_1mdef3fyys().s[18]++, element.querySelectorAll(selector));
      cov_1mdef3fyys().s[19]++;
      for (let {
        target
      } = (cov_1mdef3fyys().s[20]++, event); (cov_1mdef3fyys().b[3][0]++, target) && (cov_1mdef3fyys().b[3][1]++, target !== this); target = target.parentNode) {
        cov_1mdef3fyys().s[21]++;
        for (const domElement of domElements) {
          cov_1mdef3fyys().s[22]++;
          if (domElement !== target) {
            cov_1mdef3fyys().b[4][0]++;
            cov_1mdef3fyys().s[23]++;
            continue;
          } else {
            cov_1mdef3fyys().b[4][1]++;
          }
          cov_1mdef3fyys().s[24]++;
          hydrateObj(event, {
            delegateTarget: target
          });
          cov_1mdef3fyys().s[25]++;
          if (handler.oneOff) {
            cov_1mdef3fyys().b[5][0]++;
            cov_1mdef3fyys().s[26]++;
            EventHandler.off(element, event.type, selector, fn);
          } else {
            cov_1mdef3fyys().b[5][1]++;
          }
          cov_1mdef3fyys().s[27]++;
          return fn.apply(target, [event]);
        }
      }
    };
  }
  function findHandler(events, callable, delegationSelector = (cov_1mdef3fyys().b[6][0]++, null)) {
    cov_1mdef3fyys().f[6]++;
    cov_1mdef3fyys().s[28]++;
    return Object.values(events).find(event => {
      cov_1mdef3fyys().f[7]++;
      cov_1mdef3fyys().s[29]++;
      return (cov_1mdef3fyys().b[7][0]++, event.callable === callable) && (cov_1mdef3fyys().b[7][1]++, event.delegationSelector === delegationSelector);
    });
  }
  function normalizeParameters(originalTypeEvent, handler, delegationFunction) {
    cov_1mdef3fyys().f[8]++;
    const isDelegated = (cov_1mdef3fyys().s[30]++, typeof handler === 'string'); // TODO: tooltip passes `false` instead of selector, so we need to check
    const callable = (cov_1mdef3fyys().s[31]++, isDelegated ? (cov_1mdef3fyys().b[8][0]++, delegationFunction) : (cov_1mdef3fyys().b[8][1]++, (cov_1mdef3fyys().b[9][0]++, handler) || (cov_1mdef3fyys().b[9][1]++, delegationFunction)));
    let typeEvent = (cov_1mdef3fyys().s[32]++, getTypeEvent(originalTypeEvent));
    cov_1mdef3fyys().s[33]++;
    if (!nativeEvents.has(typeEvent)) {
      cov_1mdef3fyys().b[10][0]++;
      cov_1mdef3fyys().s[34]++;
      typeEvent = originalTypeEvent;
    } else {
      cov_1mdef3fyys().b[10][1]++;
    }
    cov_1mdef3fyys().s[35]++;
    return [isDelegated, callable, typeEvent];
  }
  function addHandler(element, originalTypeEvent, handler, delegationFunction, oneOff) {
    cov_1mdef3fyys().f[9]++;
    cov_1mdef3fyys().s[36]++;
    if ((cov_1mdef3fyys().b[12][0]++, typeof originalTypeEvent !== 'string') || (cov_1mdef3fyys().b[12][1]++, !element)) {
      cov_1mdef3fyys().b[11][0]++;
      cov_1mdef3fyys().s[37]++;
      return;
    } else {
      cov_1mdef3fyys().b[11][1]++;
    }
    let [isDelegated, callable, typeEvent] = (cov_1mdef3fyys().s[38]++, normalizeParameters(originalTypeEvent, handler, delegationFunction)); // in case of mouseenter or mouseleave wrap the handler within a function that checks for its DOM position
    // this prevents the handler from being dispatched the same way as mouseover or mouseout does
    cov_1mdef3fyys().s[39]++;
    if (originalTypeEvent in customEvents) {
      cov_1mdef3fyys().b[13][0]++;
      cov_1mdef3fyys().s[40]++;
      const wrapFunction = fn => {
        cov_1mdef3fyys().f[10]++;
        cov_1mdef3fyys().s[41]++;
        return function (event) {
          cov_1mdef3fyys().f[11]++;
          cov_1mdef3fyys().s[42]++;
          if ((cov_1mdef3fyys().b[15][0]++, !event.relatedTarget) || (cov_1mdef3fyys().b[15][1]++, event.relatedTarget !== event.delegateTarget) && (cov_1mdef3fyys().b[15][2]++, !event.delegateTarget.contains(event.relatedTarget))) {
            cov_1mdef3fyys().b[14][0]++;
            cov_1mdef3fyys().s[43]++;
            return fn.call(this, event);
          } else {
            cov_1mdef3fyys().b[14][1]++;
          }
        };
      };
      cov_1mdef3fyys().s[44]++;
      callable = wrapFunction(callable);
    } else {
      cov_1mdef3fyys().b[13][1]++;
    }
    const events = (cov_1mdef3fyys().s[45]++, getElementEvents(element));
    const handlers = (cov_1mdef3fyys().s[46]++, (cov_1mdef3fyys().b[16][0]++, events[typeEvent]) || (cov_1mdef3fyys().b[16][1]++, events[typeEvent] = {}));
    const previousFunction = (cov_1mdef3fyys().s[47]++, findHandler(handlers, callable, isDelegated ? (cov_1mdef3fyys().b[17][0]++, handler) : (cov_1mdef3fyys().b[17][1]++, null)));
    cov_1mdef3fyys().s[48]++;
    if (previousFunction) {
      cov_1mdef3fyys().b[18][0]++;
      cov_1mdef3fyys().s[49]++;
      previousFunction.oneOff = (cov_1mdef3fyys().b[19][0]++, previousFunction.oneOff) && (cov_1mdef3fyys().b[19][1]++, oneOff);
      cov_1mdef3fyys().s[50]++;
      return;
    } else {
      cov_1mdef3fyys().b[18][1]++;
    }
    const uid = (cov_1mdef3fyys().s[51]++, makeEventUid(callable, originalTypeEvent.replace(namespaceRegex, '')));
    const fn = (cov_1mdef3fyys().s[52]++, isDelegated ? (cov_1mdef3fyys().b[20][0]++, bootstrapDelegationHandler(element, handler, callable)) : (cov_1mdef3fyys().b[20][1]++, bootstrapHandler(element, callable)));
    cov_1mdef3fyys().s[53]++;
    fn.delegationSelector = isDelegated ? (cov_1mdef3fyys().b[21][0]++, handler) : (cov_1mdef3fyys().b[21][1]++, null);
    cov_1mdef3fyys().s[54]++;
    fn.callable = callable;
    cov_1mdef3fyys().s[55]++;
    fn.oneOff = oneOff;
    cov_1mdef3fyys().s[56]++;
    fn.uidEvent = uid;
    cov_1mdef3fyys().s[57]++;
    handlers[uid] = fn;
    cov_1mdef3fyys().s[58]++;
    element.addEventListener(typeEvent, fn, isDelegated);
  }
  function removeHandler(element, events, typeEvent, handler, delegationSelector) {
    cov_1mdef3fyys().f[12]++;
    const fn = (cov_1mdef3fyys().s[59]++, findHandler(events[typeEvent], handler, delegationSelector));
    cov_1mdef3fyys().s[60]++;
    if (!fn) {
      cov_1mdef3fyys().b[22][0]++;
      cov_1mdef3fyys().s[61]++;
      return;
    } else {
      cov_1mdef3fyys().b[22][1]++;
    }
    cov_1mdef3fyys().s[62]++;
    element.removeEventListener(typeEvent, fn, Boolean(delegationSelector));
    cov_1mdef3fyys().s[63]++;
    delete events[typeEvent][fn.uidEvent];
  }
  function removeNamespacedHandlers(element, events, typeEvent, namespace) {
    cov_1mdef3fyys().f[13]++;
    const storeElementEvent = (cov_1mdef3fyys().s[64]++, (cov_1mdef3fyys().b[23][0]++, events[typeEvent]) || (cov_1mdef3fyys().b[23][1]++, {}));
    cov_1mdef3fyys().s[65]++;
    for (const [handlerKey, event] of Object.entries(storeElementEvent)) {
      cov_1mdef3fyys().s[66]++;
      if (handlerKey.includes(namespace)) {
        cov_1mdef3fyys().b[24][0]++;
        cov_1mdef3fyys().s[67]++;
        removeHandler(element, events, typeEvent, event.callable, event.delegationSelector);
      } else {
        cov_1mdef3fyys().b[24][1]++;
      }
    }
  }
  function getTypeEvent(event) {
    cov_1mdef3fyys().f[14]++;
    cov_1mdef3fyys().s[68]++; // allow to get the native events from namespaced events ('click.coreui.button' --> 'click')
    event = event.replace(stripNameRegex, '');
    cov_1mdef3fyys().s[69]++;
    return (cov_1mdef3fyys().b[25][0]++, customEvents[event]) || (cov_1mdef3fyys().b[25][1]++, event);
  }
  const EventHandler = (cov_1mdef3fyys().s[70]++, {
    on(element, event, handler, delegationFunction) {
      cov_1mdef3fyys().f[15]++;
      cov_1mdef3fyys().s[71]++;
      addHandler(element, event, handler, delegationFunction, false);
    },
    one(element, event, handler, delegationFunction) {
      cov_1mdef3fyys().f[16]++;
      cov_1mdef3fyys().s[72]++;
      addHandler(element, event, handler, delegationFunction, true);
    },
    off(element, originalTypeEvent, handler, delegationFunction) {
      cov_1mdef3fyys().f[17]++;
      cov_1mdef3fyys().s[73]++;
      if ((cov_1mdef3fyys().b[27][0]++, typeof originalTypeEvent !== 'string') || (cov_1mdef3fyys().b[27][1]++, !element)) {
        cov_1mdef3fyys().b[26][0]++;
        cov_1mdef3fyys().s[74]++;
        return;
      } else {
        cov_1mdef3fyys().b[26][1]++;
      }
      const [isDelegated, callable, typeEvent] = (cov_1mdef3fyys().s[75]++, normalizeParameters(originalTypeEvent, handler, delegationFunction));
      const inNamespace = (cov_1mdef3fyys().s[76]++, typeEvent !== originalTypeEvent);
      const events = (cov_1mdef3fyys().s[77]++, getElementEvents(element));
      const storeElementEvent = (cov_1mdef3fyys().s[78]++, (cov_1mdef3fyys().b[28][0]++, events[typeEvent]) || (cov_1mdef3fyys().b[28][1]++, {}));
      const isNamespace = (cov_1mdef3fyys().s[79]++, originalTypeEvent.startsWith('.'));
      cov_1mdef3fyys().s[80]++;
      if (typeof callable !== 'undefined') {
        cov_1mdef3fyys().b[29][0]++;
        cov_1mdef3fyys().s[81]++; // Simplest case: handler is passed, remove that listener ONLY.
        if (!Object.keys(storeElementEvent).length) {
          cov_1mdef3fyys().b[30][0]++;
          cov_1mdef3fyys().s[82]++;
          return;
        } else {
          cov_1mdef3fyys().b[30][1]++;
        }
        cov_1mdef3fyys().s[83]++;
        removeHandler(element, events, typeEvent, callable, isDelegated ? (cov_1mdef3fyys().b[31][0]++, handler) : (cov_1mdef3fyys().b[31][1]++, null));
        cov_1mdef3fyys().s[84]++;
        return;
      } else {
        cov_1mdef3fyys().b[29][1]++;
      }
      cov_1mdef3fyys().s[85]++;
      if (isNamespace) {
        cov_1mdef3fyys().b[32][0]++;
        cov_1mdef3fyys().s[86]++;
        for (const elementEvent of Object.keys(events)) {
          cov_1mdef3fyys().s[87]++;
          removeNamespacedHandlers(element, events, elementEvent, originalTypeEvent.slice(1));
        }
      } else {
        cov_1mdef3fyys().b[32][1]++;
      }
      cov_1mdef3fyys().s[88]++;
      for (const [keyHandlers, event] of Object.entries(storeElementEvent)) {
        const handlerKey = (cov_1mdef3fyys().s[89]++, keyHandlers.replace(stripUidRegex, ''));
        cov_1mdef3fyys().s[90]++;
        if ((cov_1mdef3fyys().b[34][0]++, !inNamespace) || (cov_1mdef3fyys().b[34][1]++, originalTypeEvent.includes(handlerKey))) {
          cov_1mdef3fyys().b[33][0]++;
          cov_1mdef3fyys().s[91]++;
          removeHandler(element, events, typeEvent, event.callable, event.delegationSelector);
        } else {
          cov_1mdef3fyys().b[33][1]++;
        }
      }
    },
    trigger(element, event, args) {
      cov_1mdef3fyys().f[18]++;
      cov_1mdef3fyys().s[92]++;
      if ((cov_1mdef3fyys().b[36][0]++, typeof event !== 'string') || (cov_1mdef3fyys().b[36][1]++, !element)) {
        cov_1mdef3fyys().b[35][0]++;
        cov_1mdef3fyys().s[93]++;
        return null;
      } else {
        cov_1mdef3fyys().b[35][1]++;
      }
      const $ = (cov_1mdef3fyys().s[94]++, getjQuery());
      const typeEvent = (cov_1mdef3fyys().s[95]++, getTypeEvent(event));
      const inNamespace = (cov_1mdef3fyys().s[96]++, event !== typeEvent);
      let jQueryEvent = (cov_1mdef3fyys().s[97]++, null);
      let bubbles = (cov_1mdef3fyys().s[98]++, true);
      let nativeDispatch = (cov_1mdef3fyys().s[99]++, true);
      let defaultPrevented = (cov_1mdef3fyys().s[100]++, false);
      cov_1mdef3fyys().s[101]++;
      if ((cov_1mdef3fyys().b[38][0]++, inNamespace) && (cov_1mdef3fyys().b[38][1]++, $)) {
        cov_1mdef3fyys().b[37][0]++;
        cov_1mdef3fyys().s[102]++;
        jQueryEvent = $.Event(event, args);
        cov_1mdef3fyys().s[103]++;
        $(element).trigger(jQueryEvent);
        cov_1mdef3fyys().s[104]++;
        bubbles = !jQueryEvent.isPropagationStopped();
        cov_1mdef3fyys().s[105]++;
        nativeDispatch = !jQueryEvent.isImmediatePropagationStopped();
        cov_1mdef3fyys().s[106]++;
        defaultPrevented = jQueryEvent.isDefaultPrevented();
      } else {
        cov_1mdef3fyys().b[37][1]++;
      }
      const evt = (cov_1mdef3fyys().s[107]++, hydrateObj(new Event(event, {
        bubbles,
        cancelable: true
      }), args));
      cov_1mdef3fyys().s[108]++;
      if (defaultPrevented) {
        cov_1mdef3fyys().b[39][0]++;
        cov_1mdef3fyys().s[109]++;
        evt.preventDefault();
      } else {
        cov_1mdef3fyys().b[39][1]++;
      }
      cov_1mdef3fyys().s[110]++;
      if (nativeDispatch) {
        cov_1mdef3fyys().b[40][0]++;
        cov_1mdef3fyys().s[111]++;
        element.dispatchEvent(evt);
      } else {
        cov_1mdef3fyys().b[40][1]++;
      }
      cov_1mdef3fyys().s[112]++;
      if ((cov_1mdef3fyys().b[42][0]++, evt.defaultPrevented) && (cov_1mdef3fyys().b[42][1]++, jQueryEvent)) {
        cov_1mdef3fyys().b[41][0]++;
        cov_1mdef3fyys().s[113]++;
        jQueryEvent.preventDefault();
      } else {
        cov_1mdef3fyys().b[41][1]++;
      }
      cov_1mdef3fyys().s[114]++;
      return evt;
    }
  });
  function hydrateObj(obj, meta = (cov_1mdef3fyys().b[43][0]++, {})) {
    cov_1mdef3fyys().f[19]++;
    cov_1mdef3fyys().s[115]++;
    for (const [key, value] of Object.entries(meta)) {
      cov_1mdef3fyys().s[116]++;
      try {
        cov_1mdef3fyys().s[117]++;
        obj[key] = value;
      } catch (_unused) {
        cov_1mdef3fyys().s[118]++;
        Object.defineProperty(obj, key, {
          configurable: true,
          get() {
            cov_1mdef3fyys().f[20]++;
            cov_1mdef3fyys().s[119]++;
            return value;
          }
        });
      }
    }
    cov_1mdef3fyys().s[120]++;
    return obj;
  }

  var top = 'top';
  var bottom = 'bottom';
  var right = 'right';
  var left = 'left';
  var auto = 'auto';
  var basePlacements = [top, bottom, right, left];
  var start = 'start';
  var end = 'end';
  var clippingParents = 'clippingParents';
  var viewport = 'viewport';
  var popper = 'popper';
  var reference = 'reference';
  var variationPlacements = /*#__PURE__*/basePlacements.reduce(function (acc, placement) {
    return acc.concat([placement + "-" + start, placement + "-" + end]);
  }, []);
  var placements = /*#__PURE__*/[].concat(basePlacements, [auto]).reduce(function (acc, placement) {
    return acc.concat([placement, placement + "-" + start, placement + "-" + end]);
  }, []); // modifiers that need to read the DOM

  var beforeRead = 'beforeRead';
  var read = 'read';
  var afterRead = 'afterRead'; // pure-logic modifiers

  var beforeMain = 'beforeMain';
  var main = 'main';
  var afterMain = 'afterMain'; // modifier with the purpose to write to the DOM (or write into a framework state)

  var beforeWrite = 'beforeWrite';
  var write = 'write';
  var afterWrite = 'afterWrite';
  var modifierPhases = [beforeRead, read, afterRead, beforeMain, main, afterMain, beforeWrite, write, afterWrite];

  function getNodeName(element) {
    return element ? (element.nodeName || '').toLowerCase() : null;
  }

  function getWindow(node) {
    if (node == null) {
      return window;
    }

    if (node.toString() !== '[object Window]') {
      var ownerDocument = node.ownerDocument;
      return ownerDocument ? ownerDocument.defaultView || window : window;
    }

    return node;
  }

  function isElement(node) {
    var OwnElement = getWindow(node).Element;
    return node instanceof OwnElement || node instanceof Element;
  }

  function isHTMLElement(node) {
    var OwnElement = getWindow(node).HTMLElement;
    return node instanceof OwnElement || node instanceof HTMLElement;
  }

  function isShadowRoot(node) {
    // IE 11 has no ShadowRoot
    if (typeof ShadowRoot === 'undefined') {
      return false;
    }

    var OwnElement = getWindow(node).ShadowRoot;
    return node instanceof OwnElement || node instanceof ShadowRoot;
  }

  // and applies them to the HTMLElements such as popper and arrow

  function applyStyles(_ref) {
    var state = _ref.state;
    Object.keys(state.elements).forEach(function (name) {
      var style = state.styles[name] || {};
      var attributes = state.attributes[name] || {};
      var element = state.elements[name]; // arrow is optional + virtual elements

      if (!isHTMLElement(element) || !getNodeName(element)) {
        return;
      } // Flow doesn't support to extend this property, but it's the most
      // effective way to apply styles to an HTMLElement
      // $FlowFixMe[cannot-write]


      Object.assign(element.style, style);
      Object.keys(attributes).forEach(function (name) {
        var value = attributes[name];

        if (value === false) {
          element.removeAttribute(name);
        } else {
          element.setAttribute(name, value === true ? '' : value);
        }
      });
    });
  }

  function effect$2(_ref2) {
    var state = _ref2.state;
    var initialStyles = {
      popper: {
        position: state.options.strategy,
        left: '0',
        top: '0',
        margin: '0'
      },
      arrow: {
        position: 'absolute'
      },
      reference: {}
    };
    Object.assign(state.elements.popper.style, initialStyles.popper);
    state.styles = initialStyles;

    if (state.elements.arrow) {
      Object.assign(state.elements.arrow.style, initialStyles.arrow);
    }

    return function () {
      Object.keys(state.elements).forEach(function (name) {
        var element = state.elements[name];
        var attributes = state.attributes[name] || {};
        var styleProperties = Object.keys(state.styles.hasOwnProperty(name) ? state.styles[name] : initialStyles[name]); // Set all values to an empty string to unset them

        var style = styleProperties.reduce(function (style, property) {
          style[property] = '';
          return style;
        }, {}); // arrow is optional + virtual elements

        if (!isHTMLElement(element) || !getNodeName(element)) {
          return;
        }

        Object.assign(element.style, style);
        Object.keys(attributes).forEach(function (attribute) {
          element.removeAttribute(attribute);
        });
      });
    };
  } // eslint-disable-next-line import/no-unused-modules


  const applyStyles$1 = {
    name: 'applyStyles',
    enabled: true,
    phase: 'write',
    fn: applyStyles,
    effect: effect$2,
    requires: ['computeStyles']
  };

  function getBasePlacement(placement) {
    return placement.split('-')[0];
  }

  var max = Math.max;
  var min = Math.min;
  var round = Math.round;

  function getUAString() {
    var uaData = navigator.userAgentData;

    if (uaData != null && uaData.brands && Array.isArray(uaData.brands)) {
      return uaData.brands.map(function (item) {
        return item.brand + "/" + item.version;
      }).join(' ');
    }

    return navigator.userAgent;
  }

  function isLayoutViewport() {
    return !/^((?!chrome|android).)*safari/i.test(getUAString());
  }

  function getBoundingClientRect(element, includeScale, isFixedStrategy) {
    if (includeScale === void 0) {
      includeScale = false;
    }

    if (isFixedStrategy === void 0) {
      isFixedStrategy = false;
    }

    var clientRect = element.getBoundingClientRect();
    var scaleX = 1;
    var scaleY = 1;

    if (includeScale && isHTMLElement(element)) {
      scaleX = element.offsetWidth > 0 ? round(clientRect.width) / element.offsetWidth || 1 : 1;
      scaleY = element.offsetHeight > 0 ? round(clientRect.height) / element.offsetHeight || 1 : 1;
    }

    var _ref = isElement(element) ? getWindow(element) : window,
        visualViewport = _ref.visualViewport;

    var addVisualOffsets = !isLayoutViewport() && isFixedStrategy;
    var x = (clientRect.left + (addVisualOffsets && visualViewport ? visualViewport.offsetLeft : 0)) / scaleX;
    var y = (clientRect.top + (addVisualOffsets && visualViewport ? visualViewport.offsetTop : 0)) / scaleY;
    var width = clientRect.width / scaleX;
    var height = clientRect.height / scaleY;
    return {
      width: width,
      height: height,
      top: y,
      right: x + width,
      bottom: y + height,
      left: x,
      x: x,
      y: y
    };
  }

  // means it doesn't take into account transforms.

  function getLayoutRect(element) {
    var clientRect = getBoundingClientRect(element); // Use the clientRect sizes if it's not been transformed.
    // Fixes https://github.com/popperjs/popper-core/issues/1223

    var width = element.offsetWidth;
    var height = element.offsetHeight;

    if (Math.abs(clientRect.width - width) <= 1) {
      width = clientRect.width;
    }

    if (Math.abs(clientRect.height - height) <= 1) {
      height = clientRect.height;
    }

    return {
      x: element.offsetLeft,
      y: element.offsetTop,
      width: width,
      height: height
    };
  }

  function contains(parent, child) {
    var rootNode = child.getRootNode && child.getRootNode(); // First, attempt with faster native method

    if (parent.contains(child)) {
      return true;
    } // then fallback to custom implementation with Shadow DOM support
    else if (rootNode && isShadowRoot(rootNode)) {
        var next = child;

        do {
          if (next && parent.isSameNode(next)) {
            return true;
          } // $FlowFixMe[prop-missing]: need a better way to handle this...


          next = next.parentNode || next.host;
        } while (next);
      } // Give up, the result is false


    return false;
  }

  function getComputedStyle$1(element) {
    return getWindow(element).getComputedStyle(element);
  }

  function isTableElement(element) {
    return ['table', 'td', 'th'].indexOf(getNodeName(element)) >= 0;
  }

  function getDocumentElement(element) {
    // $FlowFixMe[incompatible-return]: assume body is always available
    return ((isElement(element) ? element.ownerDocument : // $FlowFixMe[prop-missing]
    element.document) || window.document).documentElement;
  }

  function getParentNode(element) {
    if (getNodeName(element) === 'html') {
      return element;
    }

    return (// this is a quicker (but less type safe) way to save quite some bytes from the bundle
      // $FlowFixMe[incompatible-return]
      // $FlowFixMe[prop-missing]
      element.assignedSlot || // step into the shadow DOM of the parent of a slotted node
      element.parentNode || ( // DOM Element detected
      isShadowRoot(element) ? element.host : null) || // ShadowRoot detected
      // $FlowFixMe[incompatible-call]: HTMLElement is a Node
      getDocumentElement(element) // fallback

    );
  }

  function getTrueOffsetParent(element) {
    if (!isHTMLElement(element) || // https://github.com/popperjs/popper-core/issues/837
    getComputedStyle$1(element).position === 'fixed') {
      return null;
    }

    return element.offsetParent;
  } // `.offsetParent` reports `null` for fixed elements, while absolute elements
  // return the containing block


  function getContainingBlock(element) {
    var isFirefox = /firefox/i.test(getUAString());
    var isIE = /Trident/i.test(getUAString());

    if (isIE && isHTMLElement(element)) {
      // In IE 9, 10 and 11 fixed elements containing block is always established by the viewport
      var elementCss = getComputedStyle$1(element);

      if (elementCss.position === 'fixed') {
        return null;
      }
    }

    var currentNode = getParentNode(element);

    if (isShadowRoot(currentNode)) {
      currentNode = currentNode.host;
    }

    while (isHTMLElement(currentNode) && ['html', 'body'].indexOf(getNodeName(currentNode)) < 0) {
      var css = getComputedStyle$1(currentNode); // This is non-exhaustive but covers the most common CSS properties that
      // create a containing block.
      // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block

      if (css.transform !== 'none' || css.perspective !== 'none' || css.contain === 'paint' || ['transform', 'perspective'].indexOf(css.willChange) !== -1 || isFirefox && css.willChange === 'filter' || isFirefox && css.filter && css.filter !== 'none') {
        return currentNode;
      } else {
        currentNode = currentNode.parentNode;
      }
    }

    return null;
  } // Gets the closest ancestor positioned element. Handles some edge cases,
  // such as table ancestors and cross browser bugs.


  function getOffsetParent(element) {
    var window = getWindow(element);
    var offsetParent = getTrueOffsetParent(element);

    while (offsetParent && isTableElement(offsetParent) && getComputedStyle$1(offsetParent).position === 'static') {
      offsetParent = getTrueOffsetParent(offsetParent);
    }

    if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle$1(offsetParent).position === 'static')) {
      return window;
    }

    return offsetParent || getContainingBlock(element) || window;
  }

  function getMainAxisFromPlacement(placement) {
    return ['top', 'bottom'].indexOf(placement) >= 0 ? 'x' : 'y';
  }

  function within(min$1, value, max$1) {
    return max(min$1, min(value, max$1));
  }
  function withinMaxClamp(min, value, max) {
    var v = within(min, value, max);
    return v > max ? max : v;
  }

  function getFreshSideObject() {
    return {
      top: 0,
      right: 0,
      bottom: 0,
      left: 0
    };
  }

  function mergePaddingObject(paddingObject) {
    return Object.assign({}, getFreshSideObject(), paddingObject);
  }

  function expandToHashMap(value, keys) {
    return keys.reduce(function (hashMap, key) {
      hashMap[key] = value;
      return hashMap;
    }, {});
  }

  var toPaddingObject = function toPaddingObject(padding, state) {
    padding = typeof padding === 'function' ? padding(Object.assign({}, state.rects, {
      placement: state.placement
    })) : padding;
    return mergePaddingObject(typeof padding !== 'number' ? padding : expandToHashMap(padding, basePlacements));
  };

  function arrow(_ref) {
    var _state$modifiersData$;

    var state = _ref.state,
        name = _ref.name,
        options = _ref.options;
    var arrowElement = state.elements.arrow;
    var popperOffsets = state.modifiersData.popperOffsets;
    var basePlacement = getBasePlacement(state.placement);
    var axis = getMainAxisFromPlacement(basePlacement);
    var isVertical = [left, right].indexOf(basePlacement) >= 0;
    var len = isVertical ? 'height' : 'width';

    if (!arrowElement || !popperOffsets) {
      return;
    }

    var paddingObject = toPaddingObject(options.padding, state);
    var arrowRect = getLayoutRect(arrowElement);
    var minProp = axis === 'y' ? top : left;
    var maxProp = axis === 'y' ? bottom : right;
    var endDiff = state.rects.reference[len] + state.rects.reference[axis] - popperOffsets[axis] - state.rects.popper[len];
    var startDiff = popperOffsets[axis] - state.rects.reference[axis];
    var arrowOffsetParent = getOffsetParent(arrowElement);
    var clientSize = arrowOffsetParent ? axis === 'y' ? arrowOffsetParent.clientHeight || 0 : arrowOffsetParent.clientWidth || 0 : 0;
    var centerToReference = endDiff / 2 - startDiff / 2; // Make sure the arrow doesn't overflow the popper if the center point is
    // outside of the popper bounds

    var min = paddingObject[minProp];
    var max = clientSize - arrowRect[len] - paddingObject[maxProp];
    var center = clientSize / 2 - arrowRect[len] / 2 + centerToReference;
    var offset = within(min, center, max); // Prevents breaking syntax highlighting...

    var axisProp = axis;
    state.modifiersData[name] = (_state$modifiersData$ = {}, _state$modifiersData$[axisProp] = offset, _state$modifiersData$.centerOffset = offset - center, _state$modifiersData$);
  }

  function effect$1(_ref2) {
    var state = _ref2.state,
        options = _ref2.options;
    var _options$element = options.element,
        arrowElement = _options$element === void 0 ? '[data-popper-arrow]' : _options$element;

    if (arrowElement == null) {
      return;
    } // CSS selector


    if (typeof arrowElement === 'string') {
      arrowElement = state.elements.popper.querySelector(arrowElement);

      if (!arrowElement) {
        return;
      }
    }

    if (!contains(state.elements.popper, arrowElement)) {
      return;
    }

    state.elements.arrow = arrowElement;
  } // eslint-disable-next-line import/no-unused-modules


  const arrow$1 = {
    name: 'arrow',
    enabled: true,
    phase: 'main',
    fn: arrow,
    effect: effect$1,
    requires: ['popperOffsets'],
    requiresIfExists: ['preventOverflow']
  };

  function getVariation(placement) {
    return placement.split('-')[1];
  }

  var unsetSides = {
    top: 'auto',
    right: 'auto',
    bottom: 'auto',
    left: 'auto'
  }; // Round the offsets to the nearest suitable subpixel based on the DPR.
  // Zooming can change the DPR, but it seems to report a value that will
  // cleanly divide the values into the appropriate subpixels.

  function roundOffsetsByDPR(_ref, win) {
    var x = _ref.x,
        y = _ref.y;
    var dpr = win.devicePixelRatio || 1;
    return {
      x: round(x * dpr) / dpr || 0,
      y: round(y * dpr) / dpr || 0
    };
  }

  function mapToStyles(_ref2) {
    var _Object$assign2;

    var popper = _ref2.popper,
        popperRect = _ref2.popperRect,
        placement = _ref2.placement,
        variation = _ref2.variation,
        offsets = _ref2.offsets,
        position = _ref2.position,
        gpuAcceleration = _ref2.gpuAcceleration,
        adaptive = _ref2.adaptive,
        roundOffsets = _ref2.roundOffsets,
        isFixed = _ref2.isFixed;
    var _offsets$x = offsets.x,
        x = _offsets$x === void 0 ? 0 : _offsets$x,
        _offsets$y = offsets.y,
        y = _offsets$y === void 0 ? 0 : _offsets$y;

    var _ref3 = typeof roundOffsets === 'function' ? roundOffsets({
      x: x,
      y: y
    }) : {
      x: x,
      y: y
    };

    x = _ref3.x;
    y = _ref3.y;
    var hasX = offsets.hasOwnProperty('x');
    var hasY = offsets.hasOwnProperty('y');
    var sideX = left;
    var sideY = top;
    var win = window;

    if (adaptive) {
      var offsetParent = getOffsetParent(popper);
      var heightProp = 'clientHeight';
      var widthProp = 'clientWidth';

      if (offsetParent === getWindow(popper)) {
        offsetParent = getDocumentElement(popper);

        if (getComputedStyle$1(offsetParent).position !== 'static' && position === 'absolute') {
          heightProp = 'scrollHeight';
          widthProp = 'scrollWidth';
        }
      } // $FlowFixMe[incompatible-cast]: force type refinement, we compare offsetParent with window above, but Flow doesn't detect it


      offsetParent = offsetParent;

      if (placement === top || (placement === left || placement === right) && variation === end) {
        sideY = bottom;
        var offsetY = isFixed && offsetParent === win && win.visualViewport ? win.visualViewport.height : // $FlowFixMe[prop-missing]
        offsetParent[heightProp];
        y -= offsetY - popperRect.height;
        y *= gpuAcceleration ? 1 : -1;
      }

      if (placement === left || (placement === top || placement === bottom) && variation === end) {
        sideX = right;
        var offsetX = isFixed && offsetParent === win && win.visualViewport ? win.visualViewport.width : // $FlowFixMe[prop-missing]
        offsetParent[widthProp];
        x -= offsetX - popperRect.width;
        x *= gpuAcceleration ? 1 : -1;
      }
    }

    var commonStyles = Object.assign({
      position: position
    }, adaptive && unsetSides);

    var _ref4 = roundOffsets === true ? roundOffsetsByDPR({
      x: x,
      y: y
    }, getWindow(popper)) : {
      x: x,
      y: y
    };

    x = _ref4.x;
    y = _ref4.y;

    if (gpuAcceleration) {
      var _Object$assign;

      return Object.assign({}, commonStyles, (_Object$assign = {}, _Object$assign[sideY] = hasY ? '0' : '', _Object$assign[sideX] = hasX ? '0' : '', _Object$assign.transform = (win.devicePixelRatio || 1) <= 1 ? "translate(" + x + "px, " + y + "px)" : "translate3d(" + x + "px, " + y + "px, 0)", _Object$assign));
    }

    return Object.assign({}, commonStyles, (_Object$assign2 = {}, _Object$assign2[sideY] = hasY ? y + "px" : '', _Object$assign2[sideX] = hasX ? x + "px" : '', _Object$assign2.transform = '', _Object$assign2));
  }

  function computeStyles(_ref5) {
    var state = _ref5.state,
        options = _ref5.options;
    var _options$gpuAccelerat = options.gpuAcceleration,
        gpuAcceleration = _options$gpuAccelerat === void 0 ? true : _options$gpuAccelerat,
        _options$adaptive = options.adaptive,
        adaptive = _options$adaptive === void 0 ? true : _options$adaptive,
        _options$roundOffsets = options.roundOffsets,
        roundOffsets = _options$roundOffsets === void 0 ? true : _options$roundOffsets;
    var commonStyles = {
      placement: getBasePlacement(state.placement),
      variation: getVariation(state.placement),
      popper: state.elements.popper,
      popperRect: state.rects.popper,
      gpuAcceleration: gpuAcceleration,
      isFixed: state.options.strategy === 'fixed'
    };

    if (state.modifiersData.popperOffsets != null) {
      state.styles.popper = Object.assign({}, state.styles.popper, mapToStyles(Object.assign({}, commonStyles, {
        offsets: state.modifiersData.popperOffsets,
        position: state.options.strategy,
        adaptive: adaptive,
        roundOffsets: roundOffsets
      })));
    }

    if (state.modifiersData.arrow != null) {
      state.styles.arrow = Object.assign({}, state.styles.arrow, mapToStyles(Object.assign({}, commonStyles, {
        offsets: state.modifiersData.arrow,
        position: 'absolute',
        adaptive: false,
        roundOffsets: roundOffsets
      })));
    }

    state.attributes.popper = Object.assign({}, state.attributes.popper, {
      'data-popper-placement': state.placement
    });
  } // eslint-disable-next-line import/no-unused-modules


  const computeStyles$1 = {
    name: 'computeStyles',
    enabled: true,
    phase: 'beforeWrite',
    fn: computeStyles,
    data: {}
  };

  var passive = {
    passive: true
  };

  function effect(_ref) {
    var state = _ref.state,
        instance = _ref.instance,
        options = _ref.options;
    var _options$scroll = options.scroll,
        scroll = _options$scroll === void 0 ? true : _options$scroll,
        _options$resize = options.resize,
        resize = _options$resize === void 0 ? true : _options$resize;
    var window = getWindow(state.elements.popper);
    var scrollParents = [].concat(state.scrollParents.reference, state.scrollParents.popper);

    if (scroll) {
      scrollParents.forEach(function (scrollParent) {
        scrollParent.addEventListener('scroll', instance.update, passive);
      });
    }

    if (resize) {
      window.addEventListener('resize', instance.update, passive);
    }

    return function () {
      if (scroll) {
        scrollParents.forEach(function (scrollParent) {
          scrollParent.removeEventListener('scroll', instance.update, passive);
        });
      }

      if (resize) {
        window.removeEventListener('resize', instance.update, passive);
      }
    };
  } // eslint-disable-next-line import/no-unused-modules


  const eventListeners = {
    name: 'eventListeners',
    enabled: true,
    phase: 'write',
    fn: function fn() {},
    effect: effect,
    data: {}
  };

  var hash$1 = {
    left: 'right',
    right: 'left',
    bottom: 'top',
    top: 'bottom'
  };
  function getOppositePlacement(placement) {
    return placement.replace(/left|right|bottom|top/g, function (matched) {
      return hash$1[matched];
    });
  }

  var hash = {
    start: 'end',
    end: 'start'
  };
  function getOppositeVariationPlacement(placement) {
    return placement.replace(/start|end/g, function (matched) {
      return hash[matched];
    });
  }

  function getWindowScroll(node) {
    var win = getWindow(node);
    var scrollLeft = win.pageXOffset;
    var scrollTop = win.pageYOffset;
    return {
      scrollLeft: scrollLeft,
      scrollTop: scrollTop
    };
  }

  function getWindowScrollBarX(element) {
    // If <html> has a CSS width greater than the viewport, then this will be
    // incorrect for RTL.
    // Popper 1 is broken in this case and never had a bug report so let's assume
    // it's not an issue. I don't think anyone ever specifies width on <html>
    // anyway.
    // Browsers where the left scrollbar doesn't cause an issue report `0` for
    // this (e.g. Edge 2019, IE11, Safari)
    return getBoundingClientRect(getDocumentElement(element)).left + getWindowScroll(element).scrollLeft;
  }

  function getViewportRect(element, strategy) {
    var win = getWindow(element);
    var html = getDocumentElement(element);
    var visualViewport = win.visualViewport;
    var width = html.clientWidth;
    var height = html.clientHeight;
    var x = 0;
    var y = 0;

    if (visualViewport) {
      width = visualViewport.width;
      height = visualViewport.height;
      var layoutViewport = isLayoutViewport();

      if (layoutViewport || !layoutViewport && strategy === 'fixed') {
        x = visualViewport.offsetLeft;
        y = visualViewport.offsetTop;
      }
    }

    return {
      width: width,
      height: height,
      x: x + getWindowScrollBarX(element),
      y: y
    };
  }

  // of the `<html>` and `<body>` rect bounds if horizontally scrollable

  function getDocumentRect(element) {
    var _element$ownerDocumen;

    var html = getDocumentElement(element);
    var winScroll = getWindowScroll(element);
    var body = (_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body;
    var width = max(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);
    var height = max(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);
    var x = -winScroll.scrollLeft + getWindowScrollBarX(element);
    var y = -winScroll.scrollTop;

    if (getComputedStyle$1(body || html).direction === 'rtl') {
      x += max(html.clientWidth, body ? body.clientWidth : 0) - width;
    }

    return {
      width: width,
      height: height,
      x: x,
      y: y
    };
  }

  function isScrollParent(element) {
    // Firefox wants us to check `-x` and `-y` variations as well
    var _getComputedStyle = getComputedStyle$1(element),
        overflow = _getComputedStyle.overflow,
        overflowX = _getComputedStyle.overflowX,
        overflowY = _getComputedStyle.overflowY;

    return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX);
  }

  function getScrollParent(node) {
    if (['html', 'body', '#document'].indexOf(getNodeName(node)) >= 0) {
      // $FlowFixMe[incompatible-return]: assume body is always available
      return node.ownerDocument.body;
    }

    if (isHTMLElement(node) && isScrollParent(node)) {
      return node;
    }

    return getScrollParent(getParentNode(node));
  }

  /*
  given a DOM element, return the list of all scroll parents, up the list of ancesors
  until we get to the top window object. This list is what we attach scroll listeners
  to, because if any of these parent elements scroll, we'll need to re-calculate the
  reference element's position.
  */

  function listScrollParents(element, list) {
    var _element$ownerDocumen;

    if (list === void 0) {
      list = [];
    }

    var scrollParent = getScrollParent(element);
    var isBody = scrollParent === ((_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body);
    var win = getWindow(scrollParent);
    var target = isBody ? [win].concat(win.visualViewport || [], isScrollParent(scrollParent) ? scrollParent : []) : scrollParent;
    var updatedList = list.concat(target);
    return isBody ? updatedList : // $FlowFixMe[incompatible-call]: isBody tells us target will be an HTMLElement here
    updatedList.concat(listScrollParents(getParentNode(target)));
  }

  function rectToClientRect(rect) {
    return Object.assign({}, rect, {
      left: rect.x,
      top: rect.y,
      right: rect.x + rect.width,
      bottom: rect.y + rect.height
    });
  }

  function getInnerBoundingClientRect(element, strategy) {
    var rect = getBoundingClientRect(element, false, strategy === 'fixed');
    rect.top = rect.top + element.clientTop;
    rect.left = rect.left + element.clientLeft;
    rect.bottom = rect.top + element.clientHeight;
    rect.right = rect.left + element.clientWidth;
    rect.width = element.clientWidth;
    rect.height = element.clientHeight;
    rect.x = rect.left;
    rect.y = rect.top;
    return rect;
  }

  function getClientRectFromMixedType(element, clippingParent, strategy) {
    return clippingParent === viewport ? rectToClientRect(getViewportRect(element, strategy)) : isElement(clippingParent) ? getInnerBoundingClientRect(clippingParent, strategy) : rectToClientRect(getDocumentRect(getDocumentElement(element)));
  } // A "clipping parent" is an overflowable container with the characteristic of
  // clipping (or hiding) overflowing elements with a position different from
  // `initial`


  function getClippingParents(element) {
    var clippingParents = listScrollParents(getParentNode(element));
    var canEscapeClipping = ['absolute', 'fixed'].indexOf(getComputedStyle$1(element).position) >= 0;
    var clipperElement = canEscapeClipping && isHTMLElement(element) ? getOffsetParent(element) : element;

    if (!isElement(clipperElement)) {
      return [];
    } // $FlowFixMe[incompatible-return]: https://github.com/facebook/flow/issues/1414


    return clippingParents.filter(function (clippingParent) {
      return isElement(clippingParent) && contains(clippingParent, clipperElement) && getNodeName(clippingParent) !== 'body';
    });
  } // Gets the maximum area that the element is visible in due to any number of
  // clipping parents


  function getClippingRect(element, boundary, rootBoundary, strategy) {
    var mainClippingParents = boundary === 'clippingParents' ? getClippingParents(element) : [].concat(boundary);
    var clippingParents = [].concat(mainClippingParents, [rootBoundary]);
    var firstClippingParent = clippingParents[0];
    var clippingRect = clippingParents.reduce(function (accRect, clippingParent) {
      var rect = getClientRectFromMixedType(element, clippingParent, strategy);
      accRect.top = max(rect.top, accRect.top);
      accRect.right = min(rect.right, accRect.right);
      accRect.bottom = min(rect.bottom, accRect.bottom);
      accRect.left = max(rect.left, accRect.left);
      return accRect;
    }, getClientRectFromMixedType(element, firstClippingParent, strategy));
    clippingRect.width = clippingRect.right - clippingRect.left;
    clippingRect.height = clippingRect.bottom - clippingRect.top;
    clippingRect.x = clippingRect.left;
    clippingRect.y = clippingRect.top;
    return clippingRect;
  }

  function computeOffsets(_ref) {
    var reference = _ref.reference,
        element = _ref.element,
        placement = _ref.placement;
    var basePlacement = placement ? getBasePlacement(placement) : null;
    var variation = placement ? getVariation(placement) : null;
    var commonX = reference.x + reference.width / 2 - element.width / 2;
    var commonY = reference.y + reference.height / 2 - element.height / 2;
    var offsets;

    switch (basePlacement) {
      case top:
        offsets = {
          x: commonX,
          y: reference.y - element.height
        };
        break;

      case bottom:
        offsets = {
          x: commonX,
          y: reference.y + reference.height
        };
        break;

      case right:
        offsets = {
          x: reference.x + reference.width,
          y: commonY
        };
        break;

      case left:
        offsets = {
          x: reference.x - element.width,
          y: commonY
        };
        break;

      default:
        offsets = {
          x: reference.x,
          y: reference.y
        };
    }

    var mainAxis = basePlacement ? getMainAxisFromPlacement(basePlacement) : null;

    if (mainAxis != null) {
      var len = mainAxis === 'y' ? 'height' : 'width';

      switch (variation) {
        case start:
          offsets[mainAxis] = offsets[mainAxis] - (reference[len] / 2 - element[len] / 2);
          break;

        case end:
          offsets[mainAxis] = offsets[mainAxis] + (reference[len] / 2 - element[len] / 2);
          break;
      }
    }

    return offsets;
  }

  function detectOverflow(state, options) {
    if (options === void 0) {
      options = {};
    }

    var _options = options,
        _options$placement = _options.placement,
        placement = _options$placement === void 0 ? state.placement : _options$placement,
        _options$strategy = _options.strategy,
        strategy = _options$strategy === void 0 ? state.strategy : _options$strategy,
        _options$boundary = _options.boundary,
        boundary = _options$boundary === void 0 ? clippingParents : _options$boundary,
        _options$rootBoundary = _options.rootBoundary,
        rootBoundary = _options$rootBoundary === void 0 ? viewport : _options$rootBoundary,
        _options$elementConte = _options.elementContext,
        elementContext = _options$elementConte === void 0 ? popper : _options$elementConte,
        _options$altBoundary = _options.altBoundary,
        altBoundary = _options$altBoundary === void 0 ? false : _options$altBoundary,
        _options$padding = _options.padding,
        padding = _options$padding === void 0 ? 0 : _options$padding;
    var paddingObject = mergePaddingObject(typeof padding !== 'number' ? padding : expandToHashMap(padding, basePlacements));
    var altContext = elementContext === popper ? reference : popper;
    var popperRect = state.rects.popper;
    var element = state.elements[altBoundary ? altContext : elementContext];
    var clippingClientRect = getClippingRect(isElement(element) ? element : element.contextElement || getDocumentElement(state.elements.popper), boundary, rootBoundary, strategy);
    var referenceClientRect = getBoundingClientRect(state.elements.reference);
    var popperOffsets = computeOffsets({
      reference: referenceClientRect,
      element: popperRect,
      strategy: 'absolute',
      placement: placement
    });
    var popperClientRect = rectToClientRect(Object.assign({}, popperRect, popperOffsets));
    var elementClientRect = elementContext === popper ? popperClientRect : referenceClientRect; // positive = overflowing the clipping rect
    // 0 or negative = within the clipping rect

    var overflowOffsets = {
      top: clippingClientRect.top - elementClientRect.top + paddingObject.top,
      bottom: elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom,
      left: clippingClientRect.left - elementClientRect.left + paddingObject.left,
      right: elementClientRect.right - clippingClientRect.right + paddingObject.right
    };
    var offsetData = state.modifiersData.offset; // Offsets can be applied only to the popper element

    if (elementContext === popper && offsetData) {
      var offset = offsetData[placement];
      Object.keys(overflowOffsets).forEach(function (key) {
        var multiply = [right, bottom].indexOf(key) >= 0 ? 1 : -1;
        var axis = [top, bottom].indexOf(key) >= 0 ? 'y' : 'x';
        overflowOffsets[key] += offset[axis] * multiply;
      });
    }

    return overflowOffsets;
  }

  function computeAutoPlacement(state, options) {
    if (options === void 0) {
      options = {};
    }

    var _options = options,
        placement = _options.placement,
        boundary = _options.boundary,
        rootBoundary = _options.rootBoundary,
        padding = _options.padding,
        flipVariations = _options.flipVariations,
        _options$allowedAutoP = _options.allowedAutoPlacements,
        allowedAutoPlacements = _options$allowedAutoP === void 0 ? placements : _options$allowedAutoP;
    var variation = getVariation(placement);
    var placements$1 = variation ? flipVariations ? variationPlacements : variationPlacements.filter(function (placement) {
      return getVariation(placement) === variation;
    }) : basePlacements;
    var allowedPlacements = placements$1.filter(function (placement) {
      return allowedAutoPlacements.indexOf(placement) >= 0;
    });

    if (allowedPlacements.length === 0) {
      allowedPlacements = placements$1;
    } // $FlowFixMe[incompatible-type]: Flow seems to have problems with two array unions...


    var overflows = allowedPlacements.reduce(function (acc, placement) {
      acc[placement] = detectOverflow(state, {
        placement: placement,
        boundary: boundary,
        rootBoundary: rootBoundary,
        padding: padding
      })[getBasePlacement(placement)];
      return acc;
    }, {});
    return Object.keys(overflows).sort(function (a, b) {
      return overflows[a] - overflows[b];
    });
  }

  function getExpandedFallbackPlacements(placement) {
    if (getBasePlacement(placement) === auto) {
      return [];
    }

    var oppositePlacement = getOppositePlacement(placement);
    return [getOppositeVariationPlacement(placement), oppositePlacement, getOppositeVariationPlacement(oppositePlacement)];
  }

  function flip(_ref) {
    var state = _ref.state,
        options = _ref.options,
        name = _ref.name;

    if (state.modifiersData[name]._skip) {
      return;
    }

    var _options$mainAxis = options.mainAxis,
        checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis,
        _options$altAxis = options.altAxis,
        checkAltAxis = _options$altAxis === void 0 ? true : _options$altAxis,
        specifiedFallbackPlacements = options.fallbackPlacements,
        padding = options.padding,
        boundary = options.boundary,
        rootBoundary = options.rootBoundary,
        altBoundary = options.altBoundary,
        _options$flipVariatio = options.flipVariations,
        flipVariations = _options$flipVariatio === void 0 ? true : _options$flipVariatio,
        allowedAutoPlacements = options.allowedAutoPlacements;
    var preferredPlacement = state.options.placement;
    var basePlacement = getBasePlacement(preferredPlacement);
    var isBasePlacement = basePlacement === preferredPlacement;
    var fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipVariations ? [getOppositePlacement(preferredPlacement)] : getExpandedFallbackPlacements(preferredPlacement));
    var placements = [preferredPlacement].concat(fallbackPlacements).reduce(function (acc, placement) {
      return acc.concat(getBasePlacement(placement) === auto ? computeAutoPlacement(state, {
        placement: placement,
        boundary: boundary,
        rootBoundary: rootBoundary,
        padding: padding,
        flipVariations: flipVariations,
        allowedAutoPlacements: allowedAutoPlacements
      }) : placement);
    }, []);
    var referenceRect = state.rects.reference;
    var popperRect = state.rects.popper;
    var checksMap = new Map();
    var makeFallbackChecks = true;
    var firstFittingPlacement = placements[0];

    for (var i = 0; i < placements.length; i++) {
      var placement = placements[i];

      var _basePlacement = getBasePlacement(placement);

      var isStartVariation = getVariation(placement) === start;
      var isVertical = [top, bottom].indexOf(_basePlacement) >= 0;
      var len = isVertical ? 'width' : 'height';
      var overflow = detectOverflow(state, {
        placement: placement,
        boundary: boundary,
        rootBoundary: rootBoundary,
        altBoundary: altBoundary,
        padding: padding
      });
      var mainVariationSide = isVertical ? isStartVariation ? right : left : isStartVariation ? bottom : top;

      if (referenceRect[len] > popperRect[len]) {
        mainVariationSide = getOppositePlacement(mainVariationSide);
      }

      var altVariationSide = getOppositePlacement(mainVariationSide);
      var checks = [];

      if (checkMainAxis) {
        checks.push(overflow[_basePlacement] <= 0);
      }

      if (checkAltAxis) {
        checks.push(overflow[mainVariationSide] <= 0, overflow[altVariationSide] <= 0);
      }

      if (checks.every(function (check) {
        return check;
      })) {
        firstFittingPlacement = placement;
        makeFallbackChecks = false;
        break;
      }

      checksMap.set(placement, checks);
    }

    if (makeFallbackChecks) {
      // `2` may be desired in some cases – research later
      var numberOfChecks = flipVariations ? 3 : 1;

      var _loop = function _loop(_i) {
        var fittingPlacement = placements.find(function (placement) {
          var checks = checksMap.get(placement);

          if (checks) {
            return checks.slice(0, _i).every(function (check) {
              return check;
            });
          }
        });

        if (fittingPlacement) {
          firstFittingPlacement = fittingPlacement;
          return "break";
        }
      };

      for (var _i = numberOfChecks; _i > 0; _i--) {
        var _ret = _loop(_i);

        if (_ret === "break") break;
      }
    }

    if (state.placement !== firstFittingPlacement) {
      state.modifiersData[name]._skip = true;
      state.placement = firstFittingPlacement;
      state.reset = true;
    }
  } // eslint-disable-next-line import/no-unused-modules


  const flip$1 = {
    name: 'flip',
    enabled: true,
    phase: 'main',
    fn: flip,
    requiresIfExists: ['offset'],
    data: {
      _skip: false
    }
  };

  function getSideOffsets(overflow, rect, preventedOffsets) {
    if (preventedOffsets === void 0) {
      preventedOffsets = {
        x: 0,
        y: 0
      };
    }

    return {
      top: overflow.top - rect.height - preventedOffsets.y,
      right: overflow.right - rect.width + preventedOffsets.x,
      bottom: overflow.bottom - rect.height + preventedOffsets.y,
      left: overflow.left - rect.width - preventedOffsets.x
    };
  }

  function isAnySideFullyClipped(overflow) {
    return [top, right, bottom, left].some(function (side) {
      return overflow[side] >= 0;
    });
  }

  function hide(_ref) {
    var state = _ref.state,
        name = _ref.name;
    var referenceRect = state.rects.reference;
    var popperRect = state.rects.popper;
    var preventedOffsets = state.modifiersData.preventOverflow;
    var referenceOverflow = detectOverflow(state, {
      elementContext: 'reference'
    });
    var popperAltOverflow = detectOverflow(state, {
      altBoundary: true
    });
    var referenceClippingOffsets = getSideOffsets(referenceOverflow, referenceRect);
    var popperEscapeOffsets = getSideOffsets(popperAltOverflow, popperRect, preventedOffsets);
    var isReferenceHidden = isAnySideFullyClipped(referenceClippingOffsets);
    var hasPopperEscaped = isAnySideFullyClipped(popperEscapeOffsets);
    state.modifiersData[name] = {
      referenceClippingOffsets: referenceClippingOffsets,
      popperEscapeOffsets: popperEscapeOffsets,
      isReferenceHidden: isReferenceHidden,
      hasPopperEscaped: hasPopperEscaped
    };
    state.attributes.popper = Object.assign({}, state.attributes.popper, {
      'data-popper-reference-hidden': isReferenceHidden,
      'data-popper-escaped': hasPopperEscaped
    });
  } // eslint-disable-next-line import/no-unused-modules


  const hide$1 = {
    name: 'hide',
    enabled: true,
    phase: 'main',
    requiresIfExists: ['preventOverflow'],
    fn: hide
  };

  function distanceAndSkiddingToXY(placement, rects, offset) {
    var basePlacement = getBasePlacement(placement);
    var invertDistance = [left, top].indexOf(basePlacement) >= 0 ? -1 : 1;

    var _ref = typeof offset === 'function' ? offset(Object.assign({}, rects, {
      placement: placement
    })) : offset,
        skidding = _ref[0],
        distance = _ref[1];

    skidding = skidding || 0;
    distance = (distance || 0) * invertDistance;
    return [left, right].indexOf(basePlacement) >= 0 ? {
      x: distance,
      y: skidding
    } : {
      x: skidding,
      y: distance
    };
  }

  function offset(_ref2) {
    var state = _ref2.state,
        options = _ref2.options,
        name = _ref2.name;
    var _options$offset = options.offset,
        offset = _options$offset === void 0 ? [0, 0] : _options$offset;
    var data = placements.reduce(function (acc, placement) {
      acc[placement] = distanceAndSkiddingToXY(placement, state.rects, offset);
      return acc;
    }, {});
    var _data$state$placement = data[state.placement],
        x = _data$state$placement.x,
        y = _data$state$placement.y;

    if (state.modifiersData.popperOffsets != null) {
      state.modifiersData.popperOffsets.x += x;
      state.modifiersData.popperOffsets.y += y;
    }

    state.modifiersData[name] = data;
  } // eslint-disable-next-line import/no-unused-modules


  const offset$1 = {
    name: 'offset',
    enabled: true,
    phase: 'main',
    requires: ['popperOffsets'],
    fn: offset
  };

  function popperOffsets(_ref) {
    var state = _ref.state,
        name = _ref.name;
    // Offsets are the actual position the popper needs to have to be
    // properly positioned near its reference element
    // This is the most basic placement, and will be adjusted by
    // the modifiers in the next step
    state.modifiersData[name] = computeOffsets({
      reference: state.rects.reference,
      element: state.rects.popper,
      strategy: 'absolute',
      placement: state.placement
    });
  } // eslint-disable-next-line import/no-unused-modules


  const popperOffsets$1 = {
    name: 'popperOffsets',
    enabled: true,
    phase: 'read',
    fn: popperOffsets,
    data: {}
  };

  function getAltAxis(axis) {
    return axis === 'x' ? 'y' : 'x';
  }

  function preventOverflow(_ref) {
    var state = _ref.state,
        options = _ref.options,
        name = _ref.name;
    var _options$mainAxis = options.mainAxis,
        checkMainAxis = _options$mainAxis === void 0 ? true : _options$mainAxis,
        _options$altAxis = options.altAxis,
        checkAltAxis = _options$altAxis === void 0 ? false : _options$altAxis,
        boundary = options.boundary,
        rootBoundary = options.rootBoundary,
        altBoundary = options.altBoundary,
        padding = options.padding,
        _options$tether = options.tether,
        tether = _options$tether === void 0 ? true : _options$tether,
        _options$tetherOffset = options.tetherOffset,
        tetherOffset = _options$tetherOffset === void 0 ? 0 : _options$tetherOffset;
    var overflow = detectOverflow(state, {
      boundary: boundary,
      rootBoundary: rootBoundary,
      padding: padding,
      altBoundary: altBoundary
    });
    var basePlacement = getBasePlacement(state.placement);
    var variation = getVariation(state.placement);
    var isBasePlacement = !variation;
    var mainAxis = getMainAxisFromPlacement(basePlacement);
    var altAxis = getAltAxis(mainAxis);
    var popperOffsets = state.modifiersData.popperOffsets;
    var referenceRect = state.rects.reference;
    var popperRect = state.rects.popper;
    var tetherOffsetValue = typeof tetherOffset === 'function' ? tetherOffset(Object.assign({}, state.rects, {
      placement: state.placement
    })) : tetherOffset;
    var normalizedTetherOffsetValue = typeof tetherOffsetValue === 'number' ? {
      mainAxis: tetherOffsetValue,
      altAxis: tetherOffsetValue
    } : Object.assign({
      mainAxis: 0,
      altAxis: 0
    }, tetherOffsetValue);
    var offsetModifierState = state.modifiersData.offset ? state.modifiersData.offset[state.placement] : null;
    var data = {
      x: 0,
      y: 0
    };

    if (!popperOffsets) {
      return;
    }

    if (checkMainAxis) {
      var _offsetModifierState$;

      var mainSide = mainAxis === 'y' ? top : left;
      var altSide = mainAxis === 'y' ? bottom : right;
      var len = mainAxis === 'y' ? 'height' : 'width';
      var offset = popperOffsets[mainAxis];
      var min$1 = offset + overflow[mainSide];
      var max$1 = offset - overflow[altSide];
      var additive = tether ? -popperRect[len] / 2 : 0;
      var minLen = variation === start ? referenceRect[len] : popperRect[len];
      var maxLen = variation === start ? -popperRect[len] : -referenceRect[len]; // We need to include the arrow in the calculation so the arrow doesn't go
      // outside the reference bounds

      var arrowElement = state.elements.arrow;
      var arrowRect = tether && arrowElement ? getLayoutRect(arrowElement) : {
        width: 0,
        height: 0
      };
      var arrowPaddingObject = state.modifiersData['arrow#persistent'] ? state.modifiersData['arrow#persistent'].padding : getFreshSideObject();
      var arrowPaddingMin = arrowPaddingObject[mainSide];
      var arrowPaddingMax = arrowPaddingObject[altSide]; // If the reference length is smaller than the arrow length, we don't want
      // to include its full size in the calculation. If the reference is small
      // and near the edge of a boundary, the popper can overflow even if the
      // reference is not overflowing as well (e.g. virtual elements with no
      // width or height)

      var arrowLen = within(0, referenceRect[len], arrowRect[len]);
      var minOffset = isBasePlacement ? referenceRect[len] / 2 - additive - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis : minLen - arrowLen - arrowPaddingMin - normalizedTetherOffsetValue.mainAxis;
      var maxOffset = isBasePlacement ? -referenceRect[len] / 2 + additive + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis : maxLen + arrowLen + arrowPaddingMax + normalizedTetherOffsetValue.mainAxis;
      var arrowOffsetParent = state.elements.arrow && getOffsetParent(state.elements.arrow);
      var clientOffset = arrowOffsetParent ? mainAxis === 'y' ? arrowOffsetParent.clientTop || 0 : arrowOffsetParent.clientLeft || 0 : 0;
      var offsetModifierValue = (_offsetModifierState$ = offsetModifierState == null ? void 0 : offsetModifierState[mainAxis]) != null ? _offsetModifierState$ : 0;
      var tetherMin = offset + minOffset - offsetModifierValue - clientOffset;
      var tetherMax = offset + maxOffset - offsetModifierValue;
      var preventedOffset = within(tether ? min(min$1, tetherMin) : min$1, offset, tether ? max(max$1, tetherMax) : max$1);
      popperOffsets[mainAxis] = preventedOffset;
      data[mainAxis] = preventedOffset - offset;
    }

    if (checkAltAxis) {
      var _offsetModifierState$2;

      var _mainSide = mainAxis === 'x' ? top : left;

      var _altSide = mainAxis === 'x' ? bottom : right;

      var _offset = popperOffsets[altAxis];

      var _len = altAxis === 'y' ? 'height' : 'width';

      var _min = _offset + overflow[_mainSide];

      var _max = _offset - overflow[_altSide];

      var isOriginSide = [top, left].indexOf(basePlacement) !== -1;

      var _offsetModifierValue = (_offsetModifierState$2 = offsetModifierState == null ? void 0 : offsetModifierState[altAxis]) != null ? _offsetModifierState$2 : 0;

      var _tetherMin = isOriginSide ? _min : _offset - referenceRect[_len] - popperRect[_len] - _offsetModifierValue + normalizedTetherOffsetValue.altAxis;

      var _tetherMax = isOriginSide ? _offset + referenceRect[_len] + popperRect[_len] - _offsetModifierValue - normalizedTetherOffsetValue.altAxis : _max;

      var _preventedOffset = tether && isOriginSide ? withinMaxClamp(_tetherMin, _offset, _tetherMax) : within(tether ? _tetherMin : _min, _offset, tether ? _tetherMax : _max);

      popperOffsets[altAxis] = _preventedOffset;
      data[altAxis] = _preventedOffset - _offset;
    }

    state.modifiersData[name] = data;
  } // eslint-disable-next-line import/no-unused-modules


  const preventOverflow$1 = {
    name: 'preventOverflow',
    enabled: true,
    phase: 'main',
    fn: preventOverflow,
    requiresIfExists: ['offset']
  };

  function getHTMLElementScroll(element) {
    return {
      scrollLeft: element.scrollLeft,
      scrollTop: element.scrollTop
    };
  }

  function getNodeScroll(node) {
    if (node === getWindow(node) || !isHTMLElement(node)) {
      return getWindowScroll(node);
    } else {
      return getHTMLElementScroll(node);
    }
  }

  function isElementScaled(element) {
    var rect = element.getBoundingClientRect();
    var scaleX = round(rect.width) / element.offsetWidth || 1;
    var scaleY = round(rect.height) / element.offsetHeight || 1;
    return scaleX !== 1 || scaleY !== 1;
  } // Returns the composite rect of an element relative to its offsetParent.
  // Composite means it takes into account transforms as well as layout.


  function getCompositeRect(elementOrVirtualElement, offsetParent, isFixed) {
    if (isFixed === void 0) {
      isFixed = false;
    }

    var isOffsetParentAnElement = isHTMLElement(offsetParent);
    var offsetParentIsScaled = isHTMLElement(offsetParent) && isElementScaled(offsetParent);
    var documentElement = getDocumentElement(offsetParent);
    var rect = getBoundingClientRect(elementOrVirtualElement, offsetParentIsScaled, isFixed);
    var scroll = {
      scrollLeft: 0,
      scrollTop: 0
    };
    var offsets = {
      x: 0,
      y: 0
    };

    if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {
      if (getNodeName(offsetParent) !== 'body' || // https://github.com/popperjs/popper-core/issues/1078
      isScrollParent(documentElement)) {
        scroll = getNodeScroll(offsetParent);
      }

      if (isHTMLElement(offsetParent)) {
        offsets = getBoundingClientRect(offsetParent, true);
        offsets.x += offsetParent.clientLeft;
        offsets.y += offsetParent.clientTop;
      } else if (documentElement) {
        offsets.x = getWindowScrollBarX(documentElement);
      }
    }

    return {
      x: rect.left + scroll.scrollLeft - offsets.x,
      y: rect.top + scroll.scrollTop - offsets.y,
      width: rect.width,
      height: rect.height
    };
  }

  function order(modifiers) {
    var map = new Map();
    var visited = new Set();
    var result = [];
    modifiers.forEach(function (modifier) {
      map.set(modifier.name, modifier);
    }); // On visiting object, check for its dependencies and visit them recursively

    function sort(modifier) {
      visited.add(modifier.name);
      var requires = [].concat(modifier.requires || [], modifier.requiresIfExists || []);
      requires.forEach(function (dep) {
        if (!visited.has(dep)) {
          var depModifier = map.get(dep);

          if (depModifier) {
            sort(depModifier);
          }
        }
      });
      result.push(modifier);
    }

    modifiers.forEach(function (modifier) {
      if (!visited.has(modifier.name)) {
        // check for visited object
        sort(modifier);
      }
    });
    return result;
  }

  function orderModifiers(modifiers) {
    // order based on dependencies
    var orderedModifiers = order(modifiers); // order based on phase

    return modifierPhases.reduce(function (acc, phase) {
      return acc.concat(orderedModifiers.filter(function (modifier) {
        return modifier.phase === phase;
      }));
    }, []);
  }

  function debounce(fn) {
    var pending;
    return function () {
      if (!pending) {
        pending = new Promise(function (resolve) {
          Promise.resolve().then(function () {
            pending = undefined;
            resolve(fn());
          });
        });
      }

      return pending;
    };
  }

  function mergeByName(modifiers) {
    var merged = modifiers.reduce(function (merged, current) {
      var existing = merged[current.name];
      merged[current.name] = existing ? Object.assign({}, existing, current, {
        options: Object.assign({}, existing.options, current.options),
        data: Object.assign({}, existing.data, current.data)
      }) : current;
      return merged;
    }, {}); // IE11 does not support Object.values

    return Object.keys(merged).map(function (key) {
      return merged[key];
    });
  }

  var DEFAULT_OPTIONS = {
    placement: 'bottom',
    modifiers: [],
    strategy: 'absolute'
  };

  function areValidElements() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return !args.some(function (element) {
      return !(element && typeof element.getBoundingClientRect === 'function');
    });
  }

  function popperGenerator(generatorOptions) {
    if (generatorOptions === void 0) {
      generatorOptions = {};
    }

    var _generatorOptions = generatorOptions,
        _generatorOptions$def = _generatorOptions.defaultModifiers,
        defaultModifiers = _generatorOptions$def === void 0 ? [] : _generatorOptions$def,
        _generatorOptions$def2 = _generatorOptions.defaultOptions,
        defaultOptions = _generatorOptions$def2 === void 0 ? DEFAULT_OPTIONS : _generatorOptions$def2;
    return function createPopper(reference, popper, options) {
      if (options === void 0) {
        options = defaultOptions;
      }

      var state = {
        placement: 'bottom',
        orderedModifiers: [],
        options: Object.assign({}, DEFAULT_OPTIONS, defaultOptions),
        modifiersData: {},
        elements: {
          reference: reference,
          popper: popper
        },
        attributes: {},
        styles: {}
      };
      var effectCleanupFns = [];
      var isDestroyed = false;
      var instance = {
        state: state,
        setOptions: function setOptions(setOptionsAction) {
          var options = typeof setOptionsAction === 'function' ? setOptionsAction(state.options) : setOptionsAction;
          cleanupModifierEffects();
          state.options = Object.assign({}, defaultOptions, state.options, options);
          state.scrollParents = {
            reference: isElement(reference) ? listScrollParents(reference) : reference.contextElement ? listScrollParents(reference.contextElement) : [],
            popper: listScrollParents(popper)
          }; // Orders the modifiers based on their dependencies and `phase`
          // properties

          var orderedModifiers = orderModifiers(mergeByName([].concat(defaultModifiers, state.options.modifiers))); // Strip out disabled modifiers

          state.orderedModifiers = orderedModifiers.filter(function (m) {
            return m.enabled;
          });
          runModifierEffects();
          return instance.update();
        },
        // Sync update – it will always be executed, even if not necessary. This
        // is useful for low frequency updates where sync behavior simplifies the
        // logic.
        // For high frequency updates (e.g. `resize` and `scroll` events), always
        // prefer the async Popper#update method
        forceUpdate: function forceUpdate() {
          if (isDestroyed) {
            return;
          }

          var _state$elements = state.elements,
              reference = _state$elements.reference,
              popper = _state$elements.popper; // Don't proceed if `reference` or `popper` are not valid elements
          // anymore

          if (!areValidElements(reference, popper)) {
            return;
          } // Store the reference and popper rects to be read by modifiers


          state.rects = {
            reference: getCompositeRect(reference, getOffsetParent(popper), state.options.strategy === 'fixed'),
            popper: getLayoutRect(popper)
          }; // Modifiers have the ability to reset the current update cycle. The
          // most common use case for this is the `flip` modifier changing the
          // placement, which then needs to re-run all the modifiers, because the
          // logic was previously ran for the previous placement and is therefore
          // stale/incorrect

          state.reset = false;
          state.placement = state.options.placement; // On each update cycle, the `modifiersData` property for each modifier
          // is filled with the initial data specified by the modifier. This means
          // it doesn't persist and is fresh on each update.
          // To ensure persistent data, use `${name}#persistent`

          state.orderedModifiers.forEach(function (modifier) {
            return state.modifiersData[modifier.name] = Object.assign({}, modifier.data);
          });

          for (var index = 0; index < state.orderedModifiers.length; index++) {
            if (state.reset === true) {
              state.reset = false;
              index = -1;
              continue;
            }

            var _state$orderedModifie = state.orderedModifiers[index],
                fn = _state$orderedModifie.fn,
                _state$orderedModifie2 = _state$orderedModifie.options,
                _options = _state$orderedModifie2 === void 0 ? {} : _state$orderedModifie2,
                name = _state$orderedModifie.name;

            if (typeof fn === 'function') {
              state = fn({
                state: state,
                options: _options,
                name: name,
                instance: instance
              }) || state;
            }
          }
        },
        // Async and optimistically optimized update – it will not be executed if
        // not necessary (debounced to run at most once-per-tick)
        update: debounce(function () {
          return new Promise(function (resolve) {
            instance.forceUpdate();
            resolve(state);
          });
        }),
        destroy: function destroy() {
          cleanupModifierEffects();
          isDestroyed = true;
        }
      };

      if (!areValidElements(reference, popper)) {
        return instance;
      }

      instance.setOptions(options).then(function (state) {
        if (!isDestroyed && options.onFirstUpdate) {
          options.onFirstUpdate(state);
        }
      }); // Modifiers have the ability to execute arbitrary code before the first
      // update cycle runs. They will be executed in the same order as the update
      // cycle. This is useful when a modifier adds some persistent data that
      // other modifiers need to use, but the modifier is run after the dependent
      // one.

      function runModifierEffects() {
        state.orderedModifiers.forEach(function (_ref) {
          var name = _ref.name,
              _ref$options = _ref.options,
              options = _ref$options === void 0 ? {} : _ref$options,
              effect = _ref.effect;

          if (typeof effect === 'function') {
            var cleanupFn = effect({
              state: state,
              name: name,
              instance: instance,
              options: options
            });

            var noopFn = function noopFn() {};

            effectCleanupFns.push(cleanupFn || noopFn);
          }
        });
      }

      function cleanupModifierEffects() {
        effectCleanupFns.forEach(function (fn) {
          return fn();
        });
        effectCleanupFns = [];
      }

      return instance;
    };
  }
  var createPopper$2 = /*#__PURE__*/popperGenerator(); // eslint-disable-next-line import/no-unused-modules

  var defaultModifiers$1 = [eventListeners, popperOffsets$1, computeStyles$1, applyStyles$1];
  var createPopper$1 = /*#__PURE__*/popperGenerator({
    defaultModifiers: defaultModifiers$1
  }); // eslint-disable-next-line import/no-unused-modules

  var defaultModifiers = [eventListeners, popperOffsets$1, computeStyles$1, applyStyles$1, offset$1, flip$1, preventOverflow$1, arrow$1, hide$1];
  var createPopper = /*#__PURE__*/popperGenerator({
    defaultModifiers: defaultModifiers
  }); // eslint-disable-next-line import/no-unused-modules

  const Popper = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
    __proto__: null,
    afterMain,
    afterRead,
    afterWrite,
    applyStyles: applyStyles$1,
    arrow: arrow$1,
    auto,
    basePlacements,
    beforeMain,
    beforeRead,
    beforeWrite,
    bottom,
    clippingParents,
    computeStyles: computeStyles$1,
    createPopper,
    createPopperBase: createPopper$2,
    createPopperLite: createPopper$1,
    detectOverflow,
    end,
    eventListeners,
    flip: flip$1,
    hide: hide$1,
    left,
    main,
    modifierPhases,
    offset: offset$1,
    placements,
    popper,
    popperGenerator,
    popperOffsets: popperOffsets$1,
    preventOverflow: preventOverflow$1,
    read,
    reference,
    right,
    start,
    top,
    variationPlacements,
    viewport,
    write
  }, Symbol.toStringTag, { value: 'Module' }));

  function cov_nkna4zv86() {
    var path = "/Users/lukaszholeczek/Projekty/CoreUI/mrholek/coreui-pro/js/src/dom/data.js";
    var hash = "60d5c05e55cfcb7c12de51bcbe7929c47dec2280";
    var global = new Function("return this")();
    var gcv = "__coverage__";
    var coverageData = {
      path: "/Users/lukaszholeczek/Projekty/CoreUI/mrholek/coreui-pro/js/src/dom/data.js",
      statementMap: {
        "0": {
          start: {
            line: 15,
            column: 19
          },
          end: {
            line: 15,
            column: 28
          }
        },
        "1": {
          start: {
            line: 19,
            column: 4
          },
          end: {
            line: 21,
            column: 5
          }
        },
        "2": {
          start: {
            line: 20,
            column: 6
          },
          end: {
            line: 20,
            column: 40
          }
        },
        "3": {
          start: {
            line: 23,
            column: 24
          },
          end: {
            line: 23,
            column: 47
          }
        },
        "4": {
          start: {
            line: 27,
            column: 4
          },
          end: {
            line: 31,
            column: 5
          }
        },
        "5": {
          start: {
            line: 29,
            column: 6
          },
          end: {
            line: 29,
            column: 136
          }
        },
        "6": {
          start: {
            line: 30,
            column: 6
          },
          end: {
            line: 30,
            column: 12
          }
        },
        "7": {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 33,
            column: 34
          }
        },
        "8": {
          start: {
            line: 37,
            column: 4
          },
          end: {
            line: 39,
            column: 5
          }
        },
        "9": {
          start: {
            line: 38,
            column: 6
          },
          end: {
            line: 38,
            column: 53
          }
        },
        "10": {
          start: {
            line: 41,
            column: 4
          },
          end: {
            line: 41,
            column: 15
          }
        },
        "11": {
          start: {
            line: 45,
            column: 4
          },
          end: {
            line: 47,
            column: 5
          }
        },
        "12": {
          start: {
            line: 46,
            column: 6
          },
          end: {
            line: 46,
            column: 12
          }
        },
        "13": {
          start: {
            line: 49,
            column: 24
          },
          end: {
            line: 49,
            column: 47
          }
        },
        "14": {
          start: {
            line: 51,
            column: 4
          },
          end: {
            line: 51,
            column: 27
          }
        },
        "15": {
          start: {
            line: 54,
            column: 4
          },
          end: {
            line: 56,
            column: 5
          }
        },
        "16": {
          start: {
            line: 55,
            column: 6
          },
          end: {
            line: 55,
            column: 32
          }
        }
      },
      fnMap: {
        "0": {
          name: "(anonymous_0)",
          decl: {
            start: {
              line: 18,
              column: 2
            },
            end: {
              line: 18,
              column: 3
            }
          },
          loc: {
            start: {
              line: 18,
              column: 30
            },
            end: {
              line: 34,
              column: 3
            }
          },
          line: 18
        },
        "1": {
          name: "(anonymous_1)",
          decl: {
            start: {
              line: 36,
              column: 2
            },
            end: {
              line: 36,
              column: 3
            }
          },
          loc: {
            start: {
              line: 36,
              column: 20
            },
            end: {
              line: 42,
              column: 3
            }
          },
          line: 36
        },
        "2": {
          name: "(anonymous_2)",
          decl: {
            start: {
              line: 44,
              column: 2
            },
            end: {
              line: 44,
              column: 3
            }
          },
          loc: {
            start: {
              line: 44,
              column: 23
            },
            end: {
              line: 57,
              column: 3
            }
          },
          line: 44
        }
      },
      branchMap: {
        "0": {
          loc: {
            start: {
              line: 19,
              column: 4
            },
            end: {
              line: 21,
              column: 5
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 19,
              column: 4
            },
            end: {
              line: 21,
              column: 5
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 19
        },
        "1": {
          loc: {
            start: {
              line: 27,
              column: 4
            },
            end: {
              line: 31,
              column: 5
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 27,
              column: 4
            },
            end: {
              line: 31,
              column: 5
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 27
        },
        "2": {
          loc: {
            start: {
              line: 27,
              column: 8
            },
            end: {
              line: 27,
              column: 55
            }
          },
          type: "binary-expr",
          locations: [{
            start: {
              line: 27,
              column: 8
            },
            end: {
              line: 27,
              column: 29
            }
          }, {
            start: {
              line: 27,
              column: 33
            },
            end: {
              line: 27,
              column: 55
            }
          }],
          line: 27
        },
        "3": {
          loc: {
            start: {
              line: 37,
              column: 4
            },
            end: {
              line: 39,
              column: 5
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 37,
              column: 4
            },
            end: {
              line: 39,
              column: 5
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 37
        },
        "4": {
          loc: {
            start: {
              line: 38,
              column: 13
            },
            end: {
              line: 38,
              column: 53
            }
          },
          type: "binary-expr",
          locations: [{
            start: {
              line: 38,
              column: 13
            },
            end: {
              line: 38,
              column: 45
            }
          }, {
            start: {
              line: 38,
              column: 49
            },
            end: {
              line: 38,
              column: 53
            }
          }],
          line: 38
        },
        "5": {
          loc: {
            start: {
              line: 45,
              column: 4
            },
            end: {
              line: 47,
              column: 5
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 45,
              column: 4
            },
            end: {
              line: 47,
              column: 5
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 45
        },
        "6": {
          loc: {
            start: {
              line: 54,
              column: 4
            },
            end: {
              line: 56,
              column: 5
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 54,
              column: 4
            },
            end: {
              line: 56,
              column: 5
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 54
        }
      },
      s: {
        "0": 0,
        "1": 0,
        "2": 0,
        "3": 0,
        "4": 0,
        "5": 0,
        "6": 0,
        "7": 0,
        "8": 0,
        "9": 0,
        "10": 0,
        "11": 0,
        "12": 0,
        "13": 0,
        "14": 0,
        "15": 0,
        "16": 0
      },
      f: {
        "0": 0,
        "1": 0,
        "2": 0
      },
      b: {
        "0": [0, 0],
        "1": [0, 0],
        "2": [0, 0],
        "3": [0, 0],
        "4": [0, 0],
        "5": [0, 0],
        "6": [0, 0]
      },
      inputSourceMap: {
        version: 3,
        sources: ["/Users/lukaszholeczek/Projekty/CoreUI/mrholek/coreui-pro/js/src/dom/data.js"],
        sourcesContent: ["/**\n * --------------------------------------------------------------------------\n * CoreUI dom/data.js\n * Licensed under MIT (https://github.com/coreui/coreui/blob/main/LICENSE)\n *\n * This is a modified version of the Bootstrap's dom/data.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\n/**\n * Constants\n */\n\nconst elementMap = new Map()\n\nexport default {\n  set(element, key, instance) {\n    if (!elementMap.has(element)) {\n      elementMap.set(element, new Map())\n    }\n\n    const instanceMap = elementMap.get(element)\n\n    // make it clear we only want one instance per element\n    // can be removed later when multiple key/instances are fine to be used\n    if (!instanceMap.has(key) && instanceMap.size !== 0) {\n      // eslint-disable-next-line no-console\n      console.error(`Bootstrap doesn't allow more than one instance per element. Bound instance: ${Array.from(instanceMap.keys())[0]}.`)\n      return\n    }\n\n    instanceMap.set(key, instance)\n  },\n\n  get(element, key) {\n    if (elementMap.has(element)) {\n      return elementMap.get(element).get(key) || null\n    }\n\n    return null\n  },\n\n  remove(element, key) {\n    if (!elementMap.has(element)) {\n      return\n    }\n\n    const instanceMap = elementMap.get(element)\n\n    instanceMap.delete(key)\n\n    // free up element references if there are no instances left for an element\n    if (instanceMap.size === 0) {\n      elementMap.delete(element)\n    }\n  }\n}\n"],
        names: [],
        mappings: "AAAA,CAAC,CAAC;AACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5E,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,C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",
        file: undefined
      },
      _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
      hash: "60d5c05e55cfcb7c12de51bcbe7929c47dec2280"
    };
    var coverage = global[gcv] || (global[gcv] = {});
    if (!coverage[path] || coverage[path].hash !== hash) {
      coverage[path] = coverageData;
    }
    var actualCoverage = coverage[path];
    {
      // @ts-ignore
      cov_nkna4zv86 = function () {
        return actualCoverage;
      };
    }
    return actualCoverage;
  }
  cov_nkna4zv86(); /**
                   * --------------------------------------------------------------------------
                   * CoreUI dom/data.js
                   * Licensed under MIT (https://github.com/coreui/coreui/blob/main/LICENSE)
                   *
                   * This is a modified version of the Bootstrap's dom/data.js
                   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
                   * --------------------------------------------------------------------------
                   */ /**
                      * Constants
                      */
  const elementMap = (cov_nkna4zv86().s[0]++, new Map());
  const Data = {
    set(element, key, instance) {
      cov_nkna4zv86().f[0]++;
      cov_nkna4zv86().s[1]++;
      if (!elementMap.has(element)) {
        cov_nkna4zv86().b[0][0]++;
        cov_nkna4zv86().s[2]++;
        elementMap.set(element, new Map());
      } else {
        cov_nkna4zv86().b[0][1]++;
      }
      const instanceMap = (cov_nkna4zv86().s[3]++, elementMap.get(element)); // make it clear we only want one instance per element
      // can be removed later when multiple key/instances are fine to be used
      cov_nkna4zv86().s[4]++;
      if ((cov_nkna4zv86().b[2][0]++, !instanceMap.has(key)) && (cov_nkna4zv86().b[2][1]++, instanceMap.size !== 0)) {
        cov_nkna4zv86().b[1][0]++;
        cov_nkna4zv86().s[5]++; // eslint-disable-next-line no-console
        console.error(`Bootstrap doesn't allow more than one instance per element. Bound instance: ${Array.from(instanceMap.keys())[0]}.`);
        cov_nkna4zv86().s[6]++;
        return;
      } else {
        cov_nkna4zv86().b[1][1]++;
      }
      cov_nkna4zv86().s[7]++;
      instanceMap.set(key, instance);
    },
    get(element, key) {
      cov_nkna4zv86().f[1]++;
      cov_nkna4zv86().s[8]++;
      if (elementMap.has(element)) {
        cov_nkna4zv86().b[3][0]++;
        cov_nkna4zv86().s[9]++;
        return (cov_nkna4zv86().b[4][0]++, elementMap.get(element).get(key)) || (cov_nkna4zv86().b[4][1]++, null);
      } else {
        cov_nkna4zv86().b[3][1]++;
      }
      cov_nkna4zv86().s[10]++;
      return null;
    },
    remove(element, key) {
      cov_nkna4zv86().f[2]++;
      cov_nkna4zv86().s[11]++;
      if (!elementMap.has(element)) {
        cov_nkna4zv86().b[5][0]++;
        cov_nkna4zv86().s[12]++;
        return;
      } else {
        cov_nkna4zv86().b[5][1]++;
      }
      const instanceMap = (cov_nkna4zv86().s[13]++, elementMap.get(element));
      cov_nkna4zv86().s[14]++;
      instanceMap.delete(key); // free up element references if there are no instances left for an element
      cov_nkna4zv86().s[15]++;
      if (instanceMap.size === 0) {
        cov_nkna4zv86().b[6][0]++;
        cov_nkna4zv86().s[16]++;
        elementMap.delete(element);
      } else {
        cov_nkna4zv86().b[6][1]++;
      }
    }
  };

  function cov_20thob4n11() {
    var path = "/Users/lukaszholeczek/Projekty/CoreUI/mrholek/coreui-pro/js/src/dom/manipulator.js";
    var hash = "374d2aacae34736b9480801e3b354fc437737a3c";
    var global = new Function("return this")();
    var gcv = "__coverage__";
    var coverageData = {
      path: "/Users/lukaszholeczek/Projekty/CoreUI/mrholek/coreui-pro/js/src/dom/manipulator.js",
      statementMap: {
        "0": {
          start: {
            line: 12,
            column: 2
          },
          end: {
            line: 14,
            column: 3
          }
        },
        "1": {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 13,
            column: 15
          }
        },
        "2": {
          start: {
            line: 16,
            column: 2
          },
          end: {
            line: 18,
            column: 3
          }
        },
        "3": {
          start: {
            line: 17,
            column: 4
          },
          end: {
            line: 17,
            column: 16
          }
        },
        "4": {
          start: {
            line: 20,
            column: 2
          },
          end: {
            line: 22,
            column: 3
          }
        },
        "5": {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 24
          }
        },
        "6": {
          start: {
            line: 24,
            column: 2
          },
          end: {
            line: 26,
            column: 3
          }
        },
        "7": {
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 25,
            column: 15
          }
        },
        "8": {
          start: {
            line: 28,
            column: 2
          },
          end: {
            line: 30,
            column: 3
          }
        },
        "9": {
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 29,
            column: 16
          }
        },
        "10": {
          start: {
            line: 32,
            column: 2
          },
          end: {
            line: 36,
            column: 3
          }
        },
        "11": {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 33,
            column: 48
          }
        },
        "12": {
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 35,
            column: 16
          }
        },
        "13": {
          start: {
            line: 40,
            column: 2
          },
          end: {
            line: 40,
            column: 62
          }
        },
        "14": {
          start: {
            line: 40,
            column: 38
          },
          end: {
            line: 40,
            column: 61
          }
        },
        "15": {
          start: {
            line: 43,
            column: 20
          },
          end: {
            line: 72,
            column: 1
          }
        },
        "16": {
          start: {
            line: 45,
            column: 4
          },
          end: {
            line: 45,
            column: 71
          }
        },
        "17": {
          start: {
            line: 49,
            column: 4
          },
          end: {
            line: 49,
            column: 67
          }
        },
        "18": {
          start: {
            line: 53,
            column: 4
          },
          end: {
            line: 55,
            column: 5
          }
        },
        "19": {
          start: {
            line: 54,
            column: 6
          },
          end: {
            line: 54,
            column: 15
          }
        },
        "20": {
          start: {
            line: 57,
            column: 23
          },
          end: {
            line: 57,
            column: 25
          }
        },
        "21": {
          start: {
            line: 58,
            column: 23
          },
          end: {
            line: 58,
            column: 126
          }
        },
        "22": {
          start: {
            line: 58,
            column: 66
          },
          end: {
            line: 58,
            column: 125
          }
        },
        "23": {
          start: {
            line: 60,
            column: 4
          },
          end: {
            line: 64,
            column: 5
          }
        },
        "24": {
          start: {
            line: 61,
            column: 20
          },
          end: {
            line: 61,
            column: 46
          }
        },
        "25": {
          start: {
            line: 62,
            column: 6
          },
          end: {
            line: 62,
            column: 66
          }
        },
        "26": {
          start: {
            line: 63,
            column: 6
          },
          end: {
            line: 63,
            column: 63
          }
        },
        "27": {
          start: {
            line: 66,
            column: 4
          },
          end: {
            line: 66,
            column: 21
          }
        },
        "28": {
          start: {
            line: 70,
            column: 4
          },
          end: {
            line: 70,
            column: 86
          }
        }
      },
      fnMap: {
        "0": {
          name: "normalizeData",
          decl: {
            start: {
              line: 11,
              column: 9
            },
            end: {
              line: 11,
              column: 22
            }
          },
          loc: {
            start: {
              line: 11,
              column: 30
            },
            end: {
              line: 37,
              column: 1
            }
          },
          line: 11
        },
        "1": {
          name: "normalizeDataKey",
          decl: {
            start: {
              line: 39,
              column: 9
            },
            end: {
              line: 39,
              column: 25
            }
          },
          loc: {
            start: {
              line: 39,
              column: 31
            },
            end: {
              line: 41,
              column: 1
            }
          },
          line: 39
        },
        "2": {
          name: "(anonymous_2)",
          decl: {
            start: {
              line: 40,
              column: 31
            },
            end: {
              line: 40,
              column: 32
            }
          },
          loc: {
            start: {
              line: 40,
              column: 38
            },
            end: {
              line: 40,
              column: 61
            }
          },
          line: 40
        },
        "3": {
          name: "(anonymous_3)",
          decl: {
            start: {
              line: 44,
              column: 2
            },
            end: {
              line: 44,
              column: 3
            }
          },
          loc: {
            start: {
              line: 44,
              column: 40
            },
            end: {
              line: 46,
              column: 3
            }
          },
          line: 44
        },
        "4": {
          name: "(anonymous_4)",
          decl: {
            start: {
              line: 48,
              column: 2
            },
            end: {
              line: 48,
              column: 3
            }
          },
          loc: {
            start: {
              line: 48,
              column: 36
            },
            end: {
              line: 50,
              column: 3
            }
          },
          line: 48
        },
        "5": {
          name: "(anonymous_5)",
          decl: {
            start: {
              line: 52,
              column: 2
            },
            end: {
              line: 52,
              column: 3
            }
          },
          loc: {
            start: {
              line: 52,
              column: 29
            },
            end: {
              line: 67,
              column: 3
            }
          },
          line: 52
        },
        "6": {
          name: "(anonymous_6)",
          decl: {
            start: {
              line: 58,
              column: 59
            },
            end: {
              line: 58,
              column: 60
            }
          },
          loc: {
            start: {
              line: 58,
              column: 66
            },
            end: {
              line: 58,
              column: 125
            }
          },
          line: 58
        },
        "7": {
          name: "(anonymous_7)",
          decl: {
            start: {
              line: 69,
              column: 2
            },
            end: {
              line: 69,
              column: 3
            }
          },
          loc: {
            start: {
              line: 69,
              column: 33
            },
            end: {
              line: 71,
              column: 3
            }
          },
          line: 69
        }
      },
      branchMap: {
        "0": {
          loc: {
            start: {
              line: 12,
              column: 2
            },
            end: {
              line: 14,
              column: 3
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 12,
              column: 2
            },
            end: {
              line: 14,
              column: 3
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 12
        },
        "1": {
          loc: {
            start: {
              line: 16,
              column: 2
            },
            end: {
              line: 18,
              column: 3
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 16,
              column: 2
            },
            end: {
              line: 18,
              column: 3
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 16
        },
        "2": {
          loc: {
            start: {
              line: 20,
              column: 2
            },
            end: {
              line: 22,
              column: 3
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 20,
              column: 2
            },
            end: {
              line: 22,
              column: 3
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 20
        },
        "3": {
          loc: {
            start: {
              line: 24,
              column: 2
            },
            end: {
              line: 26,
              column: 3
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 24,
              column: 2
            },
            end: {
              line: 26,
              column: 3
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 24
        },
        "4": {
          loc: {
            start: {
              line: 24,
              column: 6
            },
            end: {
              line: 24,
              column: 38
            }
          },
          type: "binary-expr",
          locations: [{
            start: {
              line: 24,
              column: 6
            },
            end: {
              line: 24,
              column: 18
            }
          }, {
            start: {
              line: 24,
              column: 22
            },
            end: {
              line: 24,
              column: 38
            }
          }],
          line: 24
        },
        "5": {
          loc: {
            start: {
              line: 28,
              column: 2
            },
            end: {
              line: 30,
              column: 3
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 28,
              column: 2
            },
            end: {
              line: 30,
              column: 3
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 28
        },
        "6": {
          loc: {
            start: {
              line: 53,
              column: 4
            },
            end: {
              line: 55,
              column: 5
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 53,
              column: 4
            },
            end: {
              line: 55,
              column: 5
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 53
        },
        "7": {
          loc: {
            start: {
              line: 58,
              column: 66
            },
            end: {
              line: 58,
              column: 125
            }
          },
          type: "binary-expr",
          locations: [{
            start: {
              line: 58,
              column: 66
            },
            end: {
              line: 58,
              column: 90
            }
          }, {
            start: {
              line: 58,
              column: 94
            },
            end: {
              line: 58,
              column: 125
            }
          }],
          line: 58
        }
      },
      s: {
        "0": 0,
        "1": 0,
        "2": 0,
        "3": 0,
        "4": 0,
        "5": 0,
        "6": 0,
        "7": 0,
        "8": 0,
        "9": 0,
        "10": 0,
        "11": 0,
        "12": 0,
        "13": 0,
        "14": 0,
        "15": 0,
        "16": 0,
        "17": 0,
        "18": 0,
        "19": 0,
        "20": 0,
        "21": 0,
        "22": 0,
        "23": 0,
        "24": 0,
        "25": 0,
        "26": 0,
        "27": 0,
        "28": 0
      },
      f: {
        "0": 0,
        "1": 0,
        "2": 0,
        "3": 0,
        "4": 0,
        "5": 0,
        "6": 0,
        "7": 0
      },
      b: {
        "0": [0, 0],
        "1": [0, 0],
        "2": [0, 0],
        "3": [0, 0],
        "4": [0, 0],
        "5": [0, 0],
        "6": [0, 0],
        "7": [0, 0]
      },
      inputSourceMap: {
        version: 3,
        sources: ["/Users/lukaszholeczek/Projekty/CoreUI/mrholek/coreui-pro/js/src/dom/manipulator.js"],
        sourcesContent: ["/**\n * --------------------------------------------------------------------------\n * CoreUI dom/manipulator.js\n * Licensed under MIT (https://github.com/coreui/coreui/blob/main/LICENSE)\n *\n * This is a modified version of the Bootstrap's dom/manipulator.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nfunction normalizeData(value) {\n  if (value === 'true') {\n    return true\n  }\n\n  if (value === 'false') {\n    return false\n  }\n\n  if (value === Number(value).toString()) {\n    return Number(value)\n  }\n\n  if (value === '' || value === 'null') {\n    return null\n  }\n\n  if (typeof value !== 'string') {\n    return value\n  }\n\n  try {\n    return JSON.parse(decodeURIComponent(value))\n  } catch {\n    return value\n  }\n}\n\nfunction normalizeDataKey(key) {\n  return key.replace(/[A-Z]/g, chr => `-${chr.toLowerCase()}`)\n}\n\nconst Manipulator = {\n  setDataAttribute(element, key, value) {\n    element.setAttribute(`data-coreui-${normalizeDataKey(key)}`, value)\n  },\n\n  removeDataAttribute(element, key) {\n    element.removeAttribute(`data-coreui-${normalizeDataKey(key)}`)\n  },\n\n  getDataAttributes(element) {\n    if (!element) {\n      return {}\n    }\n\n    const attributes = {}\n    const coreuiKeys = Object.keys(element.dataset).filter(key => key.startsWith('coreui') && !key.startsWith('coreuiConfig'))\n\n    for (const key of coreuiKeys) {\n      let pureKey = key.replace(/^coreui/, '')\n      pureKey = pureKey.charAt(0).toLowerCase() + pureKey.slice(1)\n      attributes[pureKey] = normalizeData(element.dataset[key])\n    }\n\n    return attributes\n  },\n\n  getDataAttribute(element, key) {\n    return normalizeData(element.getAttribute(`data-coreui-${normalizeDataKey(key)}`))\n  }\n}\n\nexport default Manipulator\n"],
        names: [],
        mappings: "AAAA,CAAC,CAAC;AACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5E,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzE,CAAC;AACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC;;AAEF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACf,CAAC,CAAC;;AAEF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC;;AAEF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC;;AAEF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACf,CAAC,CAAC;;AAEF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACf,CAAC,CAAC;AACF;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7D;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtE,CAAC,CAAC,CAAC;;AAEH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClE,CAAC,CAAC,CAAC;;AAEH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC;;AAEJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxljE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9D,CAAC,CAAC,CAAC,CAAC;;AAEJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC;;AAEH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrF,CAAC,CAAC;AACF;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;",
        file: undefined
      },
      _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
      hash: "374d2aacae34736b9480801e3b354fc437737a3c"
    };
    var coverage = global[gcv] || (global[gcv] = {});
    if (!coverage[path] || coverage[path].hash !== hash) {
      coverage[path] = coverageData;
    }
    var actualCoverage = coverage[path];
    {
      // @ts-ignore
      cov_20thob4n11 = function () {
        return actualCoverage;
      };
    }
    return actualCoverage;
  }
  cov_20thob4n11(); /**
                    * --------------------------------------------------------------------------
                    * CoreUI dom/manipulator.js
                    * Licensed under MIT (https://github.com/coreui/coreui/blob/main/LICENSE)
                    *
                    * This is a modified version of the Bootstrap's dom/manipulator.js
                    * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
                    * --------------------------------------------------------------------------
                    */
  function normalizeData(value) {
    cov_20thob4n11().f[0]++;
    cov_20thob4n11().s[0]++;
    if (value === 'true') {
      cov_20thob4n11().b[0][0]++;
      cov_20thob4n11().s[1]++;
      return true;
    } else {
      cov_20thob4n11().b[0][1]++;
    }
    cov_20thob4n11().s[2]++;
    if (value === 'false') {
      cov_20thob4n11().b[1][0]++;
      cov_20thob4n11().s[3]++;
      return false;
    } else {
      cov_20thob4n11().b[1][1]++;
    }
    cov_20thob4n11().s[4]++;
    if (value === Number(value).toString()) {
      cov_20thob4n11().b[2][0]++;
      cov_20thob4n11().s[5]++;
      return Number(value);
    } else {
      cov_20thob4n11().b[2][1]++;
    }
    cov_20thob4n11().s[6]++;
    if ((cov_20thob4n11().b[4][0]++, value === '') || (cov_20thob4n11().b[4][1]++, value === 'null')) {
      cov_20thob4n11().b[3][0]++;
      cov_20thob4n11().s[7]++;
      return null;
    } else {
      cov_20thob4n11().b[3][1]++;
    }
    cov_20thob4n11().s[8]++;
    if (typeof value !== 'string') {
      cov_20thob4n11().b[5][0]++;
      cov_20thob4n11().s[9]++;
      return value;
    } else {
      cov_20thob4n11().b[5][1]++;
    }
    cov_20thob4n11().s[10]++;
    try {
      cov_20thob4n11().s[11]++;
      return JSON.parse(decodeURIComponent(value));
    } catch (_unused) {
      cov_20thob4n11().s[12]++;
      return value;
    }
  }
  function normalizeDataKey(key) {
    cov_20thob4n11().f[1]++;
    cov_20thob4n11().s[13]++;
    return key.replace(/[A-Z]/g, chr => {
      cov_20thob4n11().f[2]++;
      cov_20thob4n11().s[14]++;
      return `-${chr.toLowerCase()}`;
    });
  }
  const Manipulator = (cov_20thob4n11().s[15]++, {
    setDataAttribute(element, key, value) {
      cov_20thob4n11().f[3]++;
      cov_20thob4n11().s[16]++;
      element.setAttribute(`data-coreui-${normalizeDataKey(key)}`, value);
    },
    removeDataAttribute(element, key) {
      cov_20thob4n11().f[4]++;
      cov_20thob4n11().s[17]++;
      element.removeAttribute(`data-coreui-${normalizeDataKey(key)}`);
    },
    getDataAttributes(element) {
      cov_20thob4n11().f[5]++;
      cov_20thob4n11().s[18]++;
      if (!element) {
        cov_20thob4n11().b[6][0]++;
        cov_20thob4n11().s[19]++;
        return {};
      } else {
        cov_20thob4n11().b[6][1]++;
      }
      const attributes = (cov_20thob4n11().s[20]++, {});
      const coreuiKeys = (cov_20thob4n11().s[21]++, Object.keys(element.dataset).filter(key => {
        cov_20thob4n11().f[6]++;
        cov_20thob4n11().s[22]++;
        return (cov_20thob4n11().b[7][0]++, key.startsWith('coreui')) && (cov_20thob4n11().b[7][1]++, !key.startsWith('coreuiConfig'));
      }));
      cov_20thob4n11().s[23]++;
      for (const key of coreuiKeys) {
        let pureKey = (cov_20thob4n11().s[24]++, key.replace(/^coreui/, ''));
        cov_20thob4n11().s[25]++;
        pureKey = pureKey.charAt(0).toLowerCase() + pureKey.slice(1);
        cov_20thob4n11().s[26]++;
        attributes[pureKey] = normalizeData(element.dataset[key]);
      }
      cov_20thob4n11().s[27]++;
      return attributes;
    },
    getDataAttribute(element, key) {
      cov_20thob4n11().f[7]++;
      cov_20thob4n11().s[28]++;
      return normalizeData(element.getAttribute(`data-coreui-${normalizeDataKey(key)}`));
    }
  });

  function cov_2cltcjq0lv() {
    var path = "/Users/lukaszholeczek/Projekty/CoreUI/mrholek/coreui-pro/js/src/util/config.js";
    var hash = "71bf5ddac4ddf2598ba3f925e75896530c8e8934";
    var global = new Function("return this")();
    var gcv = "__coverage__";
    var coverageData = {
      path: "/Users/lukaszholeczek/Projekty/CoreUI/mrholek/coreui-pro/js/src/util/config.js",
      statementMap: {
        "0": {
          start: {
            line: 21,
            column: 4
          },
          end: {
            line: 21,
            column: 13
          }
        },
        "1": {
          start: {
            line: 25,
            column: 4
          },
          end: {
            line: 25,
            column: 13
          }
        },
        "2": {
          start: {
            line: 29,
            column: 4
          },
          end: {
            line: 29,
            column: 90
          }
        },
        "3": {
          start: {
            line: 33,
            column: 4
          },
          end: {
            line: 33,
            column: 41
          }
        },
        "4": {
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 34,
            column: 43
          }
        },
        "5": {
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 35,
            column: 33
          }
        },
        "6": {
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 36,
            column: 17
          }
        },
        "7": {
          start: {
            line: 40,
            column: 4
          },
          end: {
            line: 40,
            column: 17
          }
        },
        "8": {
          start: {
            line: 44,
            column: 23
          },
          end: {
            line: 44,
            column: 96
          }
        },
        "9": {
          start: {
            line: 46,
            column: 4
          },
          end: {
            line: 51,
            column: 5
          }
        },
        "10": {
          start: {
            line: 55,
            column: 4
          },
          end: {
            line: 64,
            column: 5
          }
        },
        "11": {
          start: {
            line: 56,
            column: 20
          },
          end: {
            line: 56,
            column: 36
          }
        },
        "12": {
          start: {
            line: 57,
            column: 24
          },
          end: {
            line: 57,
            column: 68
          }
        },
        "13": {
          start: {
            line: 59,
            column: 6
          },
          end: {
            line: 63,
            column: 7
          }
        },
        "14": {
          start: {
            line: 60,
            column: 8
          },
          end: {
            line: 62,
            column: 9
          }
        }
      },
      fnMap: {
        "0": {
          name: "(anonymous_0)",
          decl: {
            start: {
              line: 20,
              column: 2
            },
            end: {
              line: 20,
              column: 3
            }
          },
          loc: {
            start: {
              line: 20,
              column: 23
            },
            end: {
              line: 22,
              column: 3
            }
          },
          line: 20
        },
        "1": {
          name: "(anonymous_1)",
          decl: {
            start: {
              line: 24,
              column: 2
            },
            end: {
              line: 24,
              column: 3
            }
          },
          loc: {
            start: {
              line: 24,
              column: 27
            },
            end: {
              line: 26,
              column: 3
            }
          },
          line: 24
        },
        "2": {
          name: "(anonymous_2)",
          decl: {
            start: {
              line: 28,
              column: 2
            },
            end: {
              line: 28,
              column: 3
            }
          },
          loc: {
            start: {
              line: 28,
              column: 20
            },
            end: {
              line: 30,
              column: 3
            }
          },
          line: 28
        },
        "3": {
          name: "(anonymous_3)",
          decl: {
            start: {
              line: 32,
              column: 2
            },
            end: {
              line: 32,
              column: 3
            }
          },
          loc: {
            start: {
              line: 32,
              column: 21
            },
            end: {
              line: 37,
              column: 3
            }
          },
          line: 32
        },
        "4": {
          name: "(anonymous_4)",
          decl: {
            start: {
              line: 39,
              column: 2
            },
            end: {
              line: 39,
              column: 3
            }
          },
          loc: {
            start: {
              line: 39,
              column: 28
            },
            end: {
              line: 41,
              column: 3
            }
          },
          line: 39
        },
        "5": {
          name: "(anonymous_5)",
          decl: {
            start: {
              line: 43,
              column: 2
            },
            end: {
              line: 43,
              column: 3
            }
          },
          loc: {
            start: {
              line: 43,
              column: 35
            },
            end: {
              line: 52,
              column: 3
            }
          },
          line: 43
        },
        "6": {
          name: "(anonymous_6)",
          decl: {
            start: {
              line: 54,
              column: 2
            },
            end: {
              line: 54,
              column: 3
            }
          },
          loc: {
            start: {
              line: 54,
              column: 71
            },
            end: {
              line: 65,
              column: 3
            }
          },
          line: 54
        }
      },
      branchMap: {
        "0": {
          loc: {
            start: {
              line: 44,
              column: 23
            },
            end: {
              line: 44,
              column: 96
            }
          },
          type: "cond-expr",
          locations: [{
            start: {
              line: 44,
              column: 44
            },
            end: {
              line: 44,
              column: 91
            }
          }, {
            start: {
              line: 44,
              column: 94
            },
            end: {
              line: 44,
              column: 96
            }
          }],
          line: 44
        },
        "1": {
          loc: {
            start: {
              line: 48,
              column: 10
            },
            end: {
              line: 48,
              column: 58
            }
          },
          type: "cond-expr",
          locations: [{
            start: {
              line: 48,
              column: 43
            },
            end: {
              line: 48,
              column: 53
            }
          }, {
            start: {
              line: 48,
              column: 56
            },
            end: {
              line: 48,
              column: 58
            }
          }],
          line: 48
        },
        "2": {
          loc: {
            start: {
              line: 49,
              column: 10
            },
            end: {
              line: 49,
              column: 74
            }
          },
          type: "cond-expr",
          locations: [{
            start: {
              line: 49,
              column: 31
            },
            end: {
              line: 49,
              column: 69
            }
          }, {
            start: {
              line: 49,
              column: 72
            },
            end: {
              line: 49,
              column: 74
            }
          }],
          line: 49
        },
        "3": {
          loc: {
            start: {
              line: 50,
              column: 10
            },
            end: {
              line: 50,
              column: 50
            }
          },
          type: "cond-expr",
          locations: [{
            start: {
              line: 50,
              column: 39
            },
            end: {
              line: 50,
              column: 45
            }
          }, {
            start: {
              line: 50,
              column: 48
            },
            end: {
              line: 50,
              column: 50
            }
          }],
          line: 50
        },
        "4": {
          loc: {
            start: {
              line: 54,
              column: 27
            },
            end: {
              line: 54,
              column: 69
            }
          },
          type: "default-arg",
          locations: [{
            start: {
              line: 54,
              column: 41
            },
            end: {
              line: 54,
              column: 69
            }
          }],
          line: 54
        },
        "5": {
          loc: {
            start: {
              line: 57,
              column: 24
            },
            end: {
              line: 57,
              column: 68
            }
          },
          type: "cond-expr",
          locations: [{
            start: {
              line: 57,
              column: 43
            },
            end: {
              line: 57,
              column: 52
            }
          }, {
            start: {
              line: 57,
              column: 55
            },
            end: {
              line: 57,
              column: 68
            }
          }],
          line: 57
        },
        "6": {
          loc: {
            start: {
              line: 59,
              column: 6
            },
            end: {
              line: 63,
              column: 7
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 59,
              column: 6
            },
            end: {
              line: 63,
              column: 7
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 59
        }
      },
      s: {
        "0": 0,
        "1": 0,
        "2": 0,
        "3": 0,
        "4": 0,
        "5": 0,
        "6": 0,
        "7": 0,
        "8": 0,
        "9": 0,
        "10": 0,
        "11": 0,
        "12": 0,
        "13": 0,
        "14": 0
      },
      f: {
        "0": 0,
        "1": 0,
        "2": 0,
        "3": 0,
        "4": 0,
        "5": 0,
        "6": 0
      },
      b: {
        "0": [0, 0],
        "1": [0, 0],
        "2": [0, 0],
        "3": [0, 0],
        "4": [0],
        "5": [0, 0],
        "6": [0, 0]
      },
      inputSourceMap: {
        version: 3,
        sources: ["/Users/lukaszholeczek/Projekty/CoreUI/mrholek/coreui-pro/js/src/util/config.js"],
        sourcesContent: ["/**\n * --------------------------------------------------------------------------\n * CoreUI util/config.js\n * Licensed under MIT (https://github.com/coreui/coreui/blob/main/LICENSE)\n *\n * This is a modified version of the Bootstrap's util/config.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport Manipulator from '../dom/manipulator.js'\nimport { isElement, toType } from './index.js'\n\n/**\n * Class definition\n */\n\nclass Config {\n  // Getters\n  static get Default() {\n    return {}\n  }\n\n  static get DefaultType() {\n    return {}\n  }\n\n  static get NAME() {\n    throw new Error('You have to implement the static method \"NAME\", for each component!')\n  }\n\n  _getConfig(config) {\n    config = this._mergeConfigObj(config)\n    config = this._configAfterMerge(config)\n    this._typeCheckConfig(config)\n    return config\n  }\n\n  _configAfterMerge(config) {\n    return config\n  }\n\n  _mergeConfigObj(config, element) {\n    const jsonConfig = isElement(element) ? Manipulator.getDataAttribute(element, 'config') : {} // try to parse\n\n    return {\n      ...this.constructor.Default,\n      ...(typeof jsonConfig === 'object' ? jsonConfig : {}),\n      ...(isElement(element) ? Manipulator.getDataAttributes(element) : {}),\n      ...(typeof config === 'object' ? config : {})\n    }\n  }\n\n  _typeCheckConfig(config, configTypes = this.constructor.DefaultType) {\n    for (const [property, expectedTypes] of Object.entries(configTypes)) {\n      const value = config[property]\n      const valueType = isElement(value) ? 'element' : toType(value)\n\n      if (!new RegExp(expectedTypes).test(valueType)) {\n        throw new TypeError(\n          `${this.constructor.NAME.toUpperCase()}: Option \"${property}\" provided type \"${valueType}\" but expected type \"${expectedTypes}\".`\n        )\n      }\n    }\n  }\n}\n\nexport default Config\n"],
        names: [],
        mappings: "AAAA,CAAC,CAAC;AACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5E,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzlB,CAAC,CAAC;;AAEF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACZ,CAAC,CAAC;;AAEF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACZ,CAAC,CAAC;;AAEF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzF,CAAC,CAAC;;AAEF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC;;AAEF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC;;AAEF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnjlD,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC;;AAEF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAEnE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACt
        file: undefined
      },
      _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
      hash: "71bf5ddac4ddf2598ba3f925e75896530c8e8934"
    };
    var coverage = global[gcv] || (global[gcv] = {});
    if (!coverage[path] || coverage[path].hash !== hash) {
      coverage[path] = coverageData;
    }
    var actualCoverage = coverage[path];
    {
      // @ts-ignore
      cov_2cltcjq0lv = function () {
        return actualCoverage;
      };
    }
    return actualCoverage;
  }
  cov_2cltcjq0lv(); /**
                    * --------------------------------------------------------------------------
                    * CoreUI util/config.js
                    * Licensed under MIT (https://github.com/coreui/coreui/blob/main/LICENSE)
                    *
                    * This is a modified version of the Bootstrap's util/config.js
                    * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
                    * --------------------------------------------------------------------------
                    */
  class Config {
    // Getters
    static get Default() {
      cov_2cltcjq0lv().f[0]++;
      cov_2cltcjq0lv().s[0]++;
      return {};
    }
    static get DefaultType() {
      cov_2cltcjq0lv().f[1]++;
      cov_2cltcjq0lv().s[1]++;
      return {};
    }
    static get NAME() {
      cov_2cltcjq0lv().f[2]++;
      cov_2cltcjq0lv().s[2]++;
      throw new Error('You have to implement the static method "NAME", for each component!');
    }
    _getConfig(config) {
      cov_2cltcjq0lv().f[3]++;
      cov_2cltcjq0lv().s[3]++;
      config = this._mergeConfigObj(config);
      cov_2cltcjq0lv().s[4]++;
      config = this._configAfterMerge(config);
      cov_2cltcjq0lv().s[5]++;
      this._typeCheckConfig(config);
      cov_2cltcjq0lv().s[6]++;
      return config;
    }
    _configAfterMerge(config) {
      cov_2cltcjq0lv().f[4]++;
      cov_2cltcjq0lv().s[7]++;
      return config;
    }
    _mergeConfigObj(config, element) {
      cov_2cltcjq0lv().f[5]++;
      const jsonConfig = (cov_2cltcjq0lv().s[8]++, isElement$1(element) ? (cov_2cltcjq0lv().b[0][0]++, Manipulator.getDataAttribute(element, 'config')) : (cov_2cltcjq0lv().b[0][1]++, {})); // try to parse
      cov_2cltcjq0lv().s[9]++;
      return {
        ...this.constructor.Default,
        ...(typeof jsonConfig === 'object' ? (cov_2cltcjq0lv().b[1][0]++, jsonConfig) : (cov_2cltcjq0lv().b[1][1]++, {})),
        ...(isElement$1(element) ? (cov_2cltcjq0lv().b[2][0]++, Manipulator.getDataAttributes(element)) : (cov_2cltcjq0lv().b[2][1]++, {})),
        ...(typeof config === 'object' ? (cov_2cltcjq0lv().b[3][0]++, config) : (cov_2cltcjq0lv().b[3][1]++, {}))
      };
    }
    _typeCheckConfig(config, configTypes = (cov_2cltcjq0lv().b[4][0]++, this.constructor.DefaultType)) {
      cov_2cltcjq0lv().f[6]++;
      cov_2cltcjq0lv().s[10]++;
      for (const [property, expectedTypes] of Object.entries(configTypes)) {
        const value = (cov_2cltcjq0lv().s[11]++, config[property]);
        const valueType = (cov_2cltcjq0lv().s[12]++, isElement$1(value) ? (cov_2cltcjq0lv().b[5][0]++, 'element') : (cov_2cltcjq0lv().b[5][1]++, toType(value)));
        cov_2cltcjq0lv().s[13]++;
        if (!new RegExp(expectedTypes).test(valueType)) {
          cov_2cltcjq0lv().b[6][0]++;
          cov_2cltcjq0lv().s[14]++;
          throw new TypeError(`${this.constructor.NAME.toUpperCase()}: Option "${property}" provided type "${valueType}" but expected type "${expectedTypes}".`);
        } else {
          cov_2cltcjq0lv().b[6][1]++;
        }
      }
    }
  }

  function cov_2jooxbgoyf() {
    var path = "/Users/lukaszholeczek/Projekty/CoreUI/mrholek/coreui-pro/js/src/base-component.js";
    var hash = "8ed600f6ecf7178c6990b5f152cc238708535c43";
    var global = new Function("return this")();
    var gcv = "__coverage__";
    var coverageData = {
      path: "/Users/lukaszholeczek/Projekty/CoreUI/mrholek/coreui-pro/js/src/base-component.js",
      statementMap: {
        "0": {
          start: {
            line: 20,
            column: 16
          },
          end: {
            line: 20,
            column: 23
          }
        },
        "1": {
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 28,
            column: 11
          }
        },
        "2": {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 30,
            column: 33
          }
        },
        "3": {
          start: {
            line: 31,
            column: 4
          },
          end: {
            line: 33,
            column: 5
          }
        },
        "4": {
          start: {
            line: 32,
            column: 6
          },
          end: {
            line: 32,
            column: 12
          }
        },
        "5": {
          start: {
            line: 35,
            column: 4
          },
          end: {
            line: 35,
            column: 27
          }
        },
        "6": {
          start: {
            line: 36,
            column: 4
          },
          end: {
            line: 36,
            column: 42
          }
        },
        "7": {
          start: {
            line: 38,
            column: 4
          },
          end: {
            line: 38,
            column: 60
          }
        },
        "8": {
          start: {
            line: 43,
            column: 4
          },
          end: {
            line: 43,
            column: 57
          }
        },
        "9": {
          start: {
            line: 44,
            column: 4
          },
          end: {
            line: 44,
            column: 63
          }
        },
        "10": {
          start: {
            line: 46,
            column: 4
          },
          end: {
            line: 48,
            column: 5
          }
        },
        "11": {
          start: {
            line: 47,
            column: 6
          },
          end: {
            line: 47,
            column: 31
          }
        },
        "12": {
          start: {
            line: 52,
            column: 4
          },
          end: {
            line: 52,
            column: 57
          }
        },
        "13": {
          start: {
            line: 56,
            column: 4
          },
          end: {
            line: 56,
            column: 56
          }
        },
        "14": {
          start: {
            line: 57,
            column: 4
          },
          end: {
            line: 57,
            column: 43
          }
        },
        "15": {
          start: {
            line: 58,
            column: 4
          },
          end: {
            line: 58,
            column: 33
          }
        },
        "16": {
          start: {
            line: 59,
            column: 4
          },
          end: {
            line: 59,
            column: 17
          }
        },
        "17": {
          start: {
            line: 64,
            column: 4
          },
          end: {
            line: 64,
            column: 55
          }
        },
        "18": {
          start: {
            line: 68,
            column: 4
          },
          end: {
            line: 68,
            column: 101
          }
        },
        "19": {
          start: {
            line: 72,
            column: 4
          },
          end: {
            line: 72,
            column: 18
          }
        },
        "20": {
          start: {
            line: 76,
            column: 4
          },
          end: {
            line: 76,
            column: 32
          }
        },
        "21": {
          start: {
            line: 80,
            column: 4
          },
          end: {
            line: 80,
            column: 30
          }
        },
        "22": {
          start: {
            line: 84,
            column: 4
          },
          end: {
            line: 84,
            column: 37
          }
        }
      },
      fnMap: {
        "0": {
          name: "(anonymous_0)",
          decl: {
            start: {
              line: 27,
              column: 2
            },
            end: {
              line: 27,
              column: 3
            }
          },
          loc: {
            start: {
              line: 27,
              column: 31
            },
            end: {
              line: 39,
              column: 3
            }
          },
          line: 27
        },
        "1": {
          name: "(anonymous_1)",
          decl: {
            start: {
              line: 42,
              column: 2
            },
            end: {
              line: 42,
              column: 3
            }
          },
          loc: {
            start: {
              line: 42,
              column: 12
            },
            end: {
              line: 49,
              column: 3
            }
          },
          line: 42
        },
        "2": {
          name: "(anonymous_2)",
          decl: {
            start: {
              line: 51,
              column: 2
            },
            end: {
              line: 51,
              column: 3
            }
          },
          loc: {
            start: {
              line: 51,
              column: 55
            },
            end: {
              line: 53,
              column: 3
            }
          },
          line: 51
        },
        "3": {
          name: "(anonymous_3)",
          decl: {
            start: {
              line: 55,
              column: 2
            },
            end: {
              line: 55,
              column: 3
            }
          },
          loc: {
            start: {
              line: 55,
              column: 21
            },
            end: {
              line: 60,
              column: 3
            }
          },
          line: 55
        },
        "4": {
          name: "(anonymous_4)",
          decl: {
            start: {
              line: 63,
              column: 2
            },
            end: {
              line: 63,
              column: 3
            }
          },
          loc: {
            start: {
              line: 63,
              column: 30
            },
            end: {
              line: 65,
              column: 3
            }
          },
          line: 63
        },
        "5": {
          name: "(anonymous_5)",
          decl: {
            start: {
              line: 67,
              column: 2
            },
            end: {
              line: 67,
              column: 3
            }
          },
          loc: {
            start: {
              line: 67,
              column: 51
            },
            end: {
              line: 69,
              column: 3
            }
          },
          line: 67
        },
        "6": {
          name: "(anonymous_6)",
          decl: {
            start: {
              line: 71,
              column: 2
            },
            end: {
              line: 71,
              column: 3
            }
          },
          loc: {
            start: {
              line: 71,
              column: 23
            },
            end: {
              line: 73,
              column: 3
            }
          },
          line: 71
        },
        "7": {
          name: "(anonymous_7)",
          decl: {
            start: {
              line: 75,
              column: 2
            },
            end: {
              line: 75,
              column: 3
            }
          },
          loc: {
            start: {
              line: 75,
              column: 24
            },
            end: {
              line: 77,
              column: 3
            }
          },
          line: 75
        },
        "8": {
          name: "(anonymous_8)",
          decl: {
            start: {
              line: 79,
              column: 2
            },
            end: {
              line: 79,
              column: 3
            }
          },
          loc: {
            start: {
              line: 79,
              column: 25
            },
            end: {
              line: 81,
              column: 3
            }
          },
          line: 79
        },
        "9": {
          name: "(anonymous_9)",
          decl: {
            start: {
              line: 83,
              column: 2
            },
            end: {
              line: 83,
              column: 3
            }
          },
          loc: {
            start: {
              line: 83,
              column: 25
            },
            end: {
              line: 85,
              column: 3
            }
          },
          line: 83
        }
      },
      branchMap: {
        "0": {
          loc: {
            start: {
              line: 31,
              column: 4
            },
            end: {
              line: 33,
              column: 5
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 31,
              column: 4
            },
            end: {
              line: 33,
              column: 5
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 31
        },
        "1": {
          loc: {
            start: {
              line: 51,
              column: 36
            },
            end: {
              line: 51,
              column: 53
            }
          },
          type: "default-arg",
          locations: [{
            start: {
              line: 51,
              column: 49
            },
            end: {
              line: 51,
              column: 53
            }
          }],
          line: 51
        },
        "2": {
          loc: {
            start: {
              line: 67,
              column: 38
            },
            end: {
              line: 67,
              column: 49
            }
          },
          type: "default-arg",
          locations: [{
            start: {
              line: 67,
              column: 47
            },
            end: {
              line: 67,
              column: 49
            }
          }],
          line: 67
        },
        "3": {
          loc: {
            start: {
              line: 68,
              column: 11
            },
            end: {
              line: 68,
              column: 101
            }
          },
          type: "binary-expr",
          locations: [{
            start: {
              line: 68,
              column: 11
            },
            end: {
              line: 68,
              column: 36
            }
          }, {
            start: {
              line: 68,
              column: 40
            },
            end: {
              line: 68,
              column: 101
            }
          }],
          line: 68
        },
        "4": {
          loc: {
            start: {
              line: 68,
              column: 58
            },
            end: {
              line: 68,
              column: 100
            }
          },
          type: "cond-expr",
          locations: [{
            start: {
              line: 68,
              column: 87
            },
            end: {
              line: 68,
              column: 93
            }
          }, {
            start: {
              line: 68,
              column: 96
            },
            end: {
              line: 68,
              column: 100
            }
          }],
          line: 68
        }
      },
      s: {
        "0": 0,
        "1": 0,
        "2": 0,
        "3": 0,
        "4": 0,
        "5": 0,
        "6": 0,
        "7": 0,
        "8": 0,
        "9": 0,
        "10": 0,
        "11": 0,
        "12": 0,
        "13": 0,
        "14": 0,
        "15": 0,
        "16": 0,
        "17": 0,
        "18": 0,
        "19": 0,
        "20": 0,
        "21": 0,
        "22": 0
      },
      f: {
        "0": 0,
        "1": 0,
        "2": 0,
        "3": 0,
        "4": 0,
        "5": 0,
        "6": 0,
        "7": 0,
        "8": 0,
        "9": 0
      },
      b: {
        "0": [0, 0],
        "1": [0],
        "2": [0],
        "3": [0, 0],
        "4": [0, 0]
      },
      inputSourceMap: {
        version: 3,
        sources: ["/Users/lukaszholeczek/Projekty/CoreUI/mrholek/coreui-pro/js/src/base-component.js"],
        sourcesContent: ["/**\n * --------------------------------------------------------------------------\n * CoreUI base-component.js\n * Licensed under MIT (https://github.com/coreui/coreui/blob/main/LICENSE)\n *\n * This component is a modified version of the Bootstrap's base-component.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport Data from './dom/data.js'\nimport EventHandler from './dom/event-handler.js'\nimport Config from './util/config.js'\nimport { executeAfterTransition, getElement } from './util/index.js'\n\n/**\n * Constants\n */\n\nconst VERSION = '5.8.1'\n\n/**\n * Class definition\n */\n\nclass BaseComponent extends Config {\n  constructor(element, config) {\n    super()\n\n    element = getElement(element)\n    if (!element) {\n      return\n    }\n\n    this._element = element\n    this._config = this._getConfig(config)\n\n    Data.set(this._element, this.constructor.DATA_KEY, this)\n  }\n\n  // Public\n  dispose() {\n    Data.remove(this._element, this.constructor.DATA_KEY)\n    EventHandler.off(this._element, this.constructor.EVENT_KEY)\n\n    for (const propertyName of Object.getOwnPropertyNames(this)) {\n      this[propertyName] = null\n    }\n  }\n\n  _queueCallback(callback, element, isAnimated = true) {\n    executeAfterTransition(callback, element, isAnimated)\n  }\n\n  _getConfig(config) {\n    config = this._mergeConfigObj(config, this._element)\n    config = this._configAfterMerge(config)\n    this._typeCheckConfig(config)\n    return config\n  }\n\n  // Static\n  static getInstance(element) {\n    return Data.get(getElement(element), this.DATA_KEY)\n  }\n\n  static getOrCreateInstance(element, config = {}) {\n    return this.getInstance(element) || new this(element, typeof config === 'object' ? config : null)\n  }\n\n  static get VERSION() {\n    return VERSION\n  }\n\n  static get DATA_KEY() {\n    return `coreui.${this.NAME}`\n  }\n\n  static get EVENT_KEY() {\n    return `.${this.DATA_KEY}`\n  }\n\n  static eventName(name) {\n    return `${name}${this.EVENT_KEY}`\n  }\n}\n\nexport default BaseComponent\n"],
        names: [],
        mappings: "AAAA,CAAC,CAAC;AACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5E,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzhD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,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CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC;;AAEF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxD,CAAC,CAAC;;AAEF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC;;AAEF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtD,CAAC,CAAC;;AAEF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpG,CAAC,CAAC;;AAEF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC;;AAEF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC,CAAC;;AAEF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7B,CAAC,CAAC;;AAEF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC;AACF;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;",
        file: undefined
      },
      _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
      hash: "8ed600f6ecf7178c6990b5f152cc238708535c43"
    };
    var coverage = global[gcv] || (global[gcv] = {});
    if (!coverage[path] || coverage[path].hash !== hash) {
      coverage[path] = coverageData;
    }
    var actualCoverage = coverage[path];
    {
      // @ts-ignore
      cov_2jooxbgoyf = function () {
        return actualCoverage;
      };
    }
    return actualCoverage;
  }
  cov_2jooxbgoyf(); /**
                    * --------------------------------------------------------------------------
                    * CoreUI base-component.js
                    * Licensed under MIT (https://github.com/coreui/coreui/blob/main/LICENSE)
                    *
                    * This component is a modified version of the Bootstrap's base-component.js
                    * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
                    * --------------------------------------------------------------------------
                    */
  const VERSION = (cov_2jooxbgoyf().s[0]++, '5.8.1'); /**
                                                      * Class definition
                                                      */
  class BaseComponent extends Config {
    constructor(element, config) {
      cov_2jooxbgoyf().f[0]++;
      cov_2jooxbgoyf().s[1]++;
      super();
      cov_2jooxbgoyf().s[2]++;
      element = getElement(element);
      cov_2jooxbgoyf().s[3]++;
      if (!element) {
        cov_2jooxbgoyf().b[0][0]++;
        cov_2jooxbgoyf().s[4]++;
        return;
      } else {
        cov_2jooxbgoyf().b[0][1]++;
      }
      cov_2jooxbgoyf().s[5]++;
      this._element = element;
      cov_2jooxbgoyf().s[6]++;
      this._config = this._getConfig(config);
      cov_2jooxbgoyf().s[7]++;
      Data.set(this._element, this.constructor.DATA_KEY, this);
    } // Public
    dispose() {
      cov_2jooxbgoyf().f[1]++;
      cov_2jooxbgoyf().s[8]++;
      Data.remove(this._element, this.constructor.DATA_KEY);
      cov_2jooxbgoyf().s[9]++;
      EventHandler.off(this._element, this.constructor.EVENT_KEY);
      cov_2jooxbgoyf().s[10]++;
      for (const propertyName of Object.getOwnPropertyNames(this)) {
        cov_2jooxbgoyf().s[11]++;
        this[propertyName] = null;
      }
    }
    _queueCallback(callback, element, isAnimated = (cov_2jooxbgoyf().b[1][0]++, true)) {
      cov_2jooxbgoyf().f[2]++;
      cov_2jooxbgoyf().s[12]++;
      executeAfterTransition(callback, element, isAnimated);
    }
    _getConfig(config) {
      cov_2jooxbgoyf().f[3]++;
      cov_2jooxbgoyf().s[13]++;
      config = this._mergeConfigObj(config, this._element);
      cov_2jooxbgoyf().s[14]++;
      config = this._configAfterMerge(config);
      cov_2jooxbgoyf().s[15]++;
      this._typeCheckConfig(config);
      cov_2jooxbgoyf().s[16]++;
      return config;
    } // Static
    static getInstance(element) {
      cov_2jooxbgoyf().f[4]++;
      cov_2jooxbgoyf().s[17]++;
      return Data.get(getElement(element), this.DATA_KEY);
    }
    static getOrCreateInstance(element, config = (cov_2jooxbgoyf().b[2][0]++, {})) {
      cov_2jooxbgoyf().f[5]++;
      cov_2jooxbgoyf().s[18]++;
      return (cov_2jooxbgoyf().b[3][0]++, this.getInstance(element)) || (cov_2jooxbgoyf().b[3][1]++, new this(element, typeof config === 'object' ? (cov_2jooxbgoyf().b[4][0]++, config) : (cov_2jooxbgoyf().b[4][1]++, null)));
    }
    static get VERSION() {
      cov_2jooxbgoyf().f[6]++;
      cov_2jooxbgoyf().s[19]++;
      return VERSION;
    }
    static get DATA_KEY() {
      cov_2jooxbgoyf().f[7]++;
      cov_2jooxbgoyf().s[20]++;
      return `coreui.${this.NAME}`;
    }
    static get EVENT_KEY() {
      cov_2jooxbgoyf().f[8]++;
      cov_2jooxbgoyf().s[21]++;
      return `.${this.DATA_KEY}`;
    }
    static eventName(name) {
      cov_2jooxbgoyf().f[9]++;
      cov_2jooxbgoyf().s[22]++;
      return `${name}${this.EVENT_KEY}`;
    }
  }

  function cov_21brbc1pq7() {
    var path = "/Users/lukaszholeczek/Projekty/CoreUI/mrholek/coreui-pro/js/src/util/sanitizer.js";
    var hash = "54defd9a3b4b237cd30f45dbefe66f4cab8ce2fe";
    var global = new Function("return this")();
    var gcv = "__coverage__";
    var coverageData = {
      path: "/Users/lukaszholeczek/Projekty/CoreUI/mrholek/coreui-pro/js/src/util/sanitizer.js",
      statementMap: {
        "0": {
          start: {
            line: 12,
            column: 31
          },
          end: {
            line: 12,
            column: 47
          }
        },
        "1": {
          start: {
            line: 14,
            column: 32
          },
          end: {
            line: 49,
            column: 1
          }
        },
        "2": {
          start: {
            line: 52,
            column: 22
          },
          end: {
            line: 61,
            column: 2
          }
        },
        "3": {
          start: {
            line: 70,
            column: 25
          },
          end: {
            line: 70,
            column: 82
          }
        },
        "4": {
          start: {
            line: 72,
            column: 25
          },
          end: {
            line: 86,
            column: 1
          }
        },
        "5": {
          start: {
            line: 73,
            column: 24
          },
          end: {
            line: 73,
            column: 56
          }
        },
        "6": {
          start: {
            line: 75,
            column: 2
          },
          end: {
            line: 81,
            column: 3
          }
        },
        "7": {
          start: {
            line: 76,
            column: 4
          },
          end: {
            line: 78,
            column: 5
          }
        },
        "8": {
          start: {
            line: 77,
            column: 6
          },
          end: {
            line: 77,
            column: 64
          }
        },
        "9": {
          start: {
            line: 80,
            column: 4
          },
          end: {
            line: 80,
            column: 15
          }
        },
        "10": {
          start: {
            line: 84,
            column: 2
          },
          end: {
            line: 85,
            column: 45
          }
        },
        "11": {
          start: {
            line: 84,
            column: 55
          },
          end: {
            line: 84,
            column: 87
          }
        },
        "12": {
          start: {
            line: 85,
            column: 19
          },
          end: {
            line: 85,
            column: 44
          }
        },
        "13": {
          start: {
            line: 89,
            column: 2
          },
          end: {
            line: 91,
            column: 3
          }
        },
        "14": {
          start: {
            line: 90,
            column: 4
          },
          end: {
            line: 90,
            column: 21
          }
        },
        "15": {
          start: {
            line: 93,
            column: 2
          },
          end: {
            line: 95,
            column: 3
          }
        },
        "16": {
          start: {
            line: 94,
            column: 4
          },
          end: {
            line: 94,
            column: 39
          }
        },
        "17": {
          start: {
            line: 97,
            column: 20
          },
          end: {
            line: 97,
            column: 42
          }
        },
        "18": {
          start: {
            line: 98,
            column: 26
          },
          end: {
            line: 98,
            column: 76
          }
        },
        "19": {
          start: {
            line: 99,
            column: 19
          },
          end: {
            line: 99,
            column: 75
          }
        },
        "20": {
          start: {
            line: 101,
            column: 2
          },
          end: {
            line: 118,
            column: 3
          }
        },
        "21": {
          start: {
            line: 102,
            column: 24
          },
          end: {
            line: 102,
            column: 54
          }
        },
        "22": {
          start: {
            line: 104,
            column: 4
          },
          end: {
            line: 108,
            column: 5
          }
        },
        "23": {
          start: {
            line: 105,
            column: 6
          },
          end: {
            line: 105,
            column: 22
          }
        },
        "24": {
          start: {
            line: 107,
            column: 6
          },
          end: {
            line: 107,
            column: 14
          }
        },
        "25": {
          start: {
            line: 110,
            column: 26
          },
          end: {
            line: 110,
            column: 58
          }
        },
        "26": {
          start: {
            line: 111,
            column: 30
          },
          end: {
            line: 111,
            column: 91
          }
        },
        "27": {
          start: {
            line: 113,
            column: 4
          },
          end: {
            line: 117,
            column: 5
          }
        },
        "28": {
          start: {
            line: 114,
            column: 6
          },
          end: {
            line: 116,
            column: 7
          }
        },
        "29": {
          start: {
            line: 115,
            column: 8
          },
          end: {
            line: 115,
            column: 51
          }
        },
        "30": {
          start: {
            line: 120,
            column: 2
          },
          end: {
            line: 120,
            column: 39
          }
        }
      },
      fnMap: {
        "0": {
          name: "(anonymous_0)",
          decl: {
            start: {
              line: 72,
              column: 25
            },
            end: {
              line: 72,
              column: 26
            }
          },
          loc: {
            start: {
              line: 72,
              column: 62
            },
            end: {
              line: 86,
              column: 1
            }
          },
          line: 72
        },
        "1": {
          name: "(anonymous_1)",
          decl: {
            start: {
              line: 84,
              column: 37
            },
            end: {
              line: 84,
              column: 38
            }
          },
          loc: {
            start: {
              line: 84,
              column: 55
            },
            end: {
              line: 84,
              column: 87
            }
          },
          line: 84
        },
        "2": {
          name: "(anonymous_2)",
          decl: {
            start: {
              line: 85,
              column: 10
            },
            end: {
              line: 85,
              column: 11
            }
          },
          loc: {
            start: {
              line: 85,
              column: 19
            },
            end: {
              line: 85,
              column: 44
            }
          },
          line: 85
        },
        "3": {
          name: "sanitizeHtml",
          decl: {
            start: {
              line: 88,
              column: 16
            },
            end: {
              line: 88,
              column: 28
            }
          },
          loc: {
            start: {
              line: 88,
              column: 70
            },
            end: {
              line: 121,
              column: 1
            }
          },
          line: 88
        }
      },
      branchMap: {
        "0": {
          loc: {
            start: {
              line: 75,
              column: 2
            },
            end: {
              line: 81,
              column: 3
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 75,
              column: 2
            },
            end: {
              line: 81,
              column: 3
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 75
        },
        "1": {
          loc: {
            start: {
              line: 76,
              column: 4
            },
            end: {
              line: 78,
              column: 5
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 76,
              column: 4
            },
            end: {
              line: 78,
              column: 5
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 76
        },
        "2": {
          loc: {
            start: {
              line: 89,
              column: 2
            },
            end: {
              line: 91,
              column: 3
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 89,
              column: 2
            },
            end: {
              line: 91,
              column: 3
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 89
        },
        "3": {
          loc: {
            start: {
              line: 93,
              column: 2
            },
            end: {
              line: 95,
              column: 3
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 93,
              column: 2
            },
            end: {
              line: 95,
              column: 3
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 93
        },
        "4": {
          loc: {
            start: {
              line: 93,
              column: 6
            },
            end: {
              line: 93,
              column: 64
            }
          },
          type: "binary-expr",
          locations: [{
            start: {
              line: 93,
              column: 6
            },
            end: {
              line: 93,
              column: 22
            }
          }, {
            start: {
              line: 93,
              column: 26
            },
            end: {
              line: 93,
              column: 64
            }
          }],
          line: 93
        },
        "5": {
          loc: {
            start: {
              line: 104,
              column: 4
            },
            end: {
              line: 108,
              column: 5
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 104,
              column: 4
            },
            end: {
              line: 108,
              column: 5
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 104
        },
        "6": {
          loc: {
            start: {
              line: 111,
              column: 40
            },
            end: {
              line: 111,
              column: 60
            }
          },
          type: "binary-expr",
          locations: [{
            start: {
              line: 111,
              column: 40
            },
            end: {
              line: 111,
              column: 54
            }
          }, {
            start: {
              line: 111,
              column: 58
            },
            end: {
              line: 111,
              column: 60
            }
          }],
          line: 111
        },
        "7": {
          loc: {
            start: {
              line: 111,
              column: 62
            },
            end: {
              line: 111,
              column: 90
            }
          },
          type: "binary-expr",
          locations: [{
            start: {
              line: 111,
              column: 62
            },
            end: {
              line: 111,
              column: 84
            }
          }, {
            start: {
              line: 111,
              column: 88
            },
            end: {
              line: 111,
              column: 90
            }
          }],
          line: 111
        },
        "8": {
          loc: {
            start: {
              line: 114,
              column: 6
            },
            end: {
              line: 116,
              column: 7
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 114,
              column: 6
            },
            end: {
              line: 116,
              column: 7
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 114
        }
      },
      s: {
        "0": 0,
        "1": 0,
        "2": 0,
        "3": 0,
        "4": 0,
        "5": 0,
        "6": 0,
        "7": 0,
        "8": 0,
        "9": 0,
        "10": 0,
        "11": 0,
        "12": 0,
        "13": 0,
        "14": 0,
        "15": 0,
        "16": 0,
        "17": 0,
        "18": 0,
        "19": 0,
        "20": 0,
        "21": 0,
        "22": 0,
        "23": 0,
        "24": 0,
        "25": 0,
        "26": 0,
        "27": 0,
        "28": 0,
        "29": 0,
        "30": 0
      },
      f: {
        "0": 0,
        "1": 0,
        "2": 0,
        "3": 0
      },
      b: {
        "0": [0, 0],
        "1": [0, 0],
        "2": [0, 0],
        "3": [0, 0],
        "4": [0, 0],
        "5": [0, 0],
        "6": [0, 0],
        "7": [0, 0],
        "8": [0, 0]
      },
      inputSourceMap: {
        version: 3,
        sources: ["/Users/lukaszholeczek/Projekty/CoreUI/mrholek/coreui-pro/js/src/util/sanitizer.js"],
        sourcesContent: ["/**\n * --------------------------------------------------------------------------\n * CoreUI util/sanitizer.js\n * Licensed under MIT (https://github.com/coreui/coreui/blob/main/LICENSE)\n *\n * This is a modified version of the Bootstrap's util/sanitizer.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\n// js-docs-start allow-list\nconst ARIA_ATTRIBUTE_PATTERN = /^aria-[\\w-]*$/i\n\nexport const DefaultAllowlist = {\n  // Global attributes allowed on any supplied element below.\n  '*': ['class', 'dir', 'id', 'lang', 'role', ARIA_ATTRIBUTE_PATTERN],\n  a: ['target', 'href', 'title', 'rel'],\n  area: [],\n  b: [],\n  br: [],\n  col: [],\n  code: [],\n  dd: [],\n  div: [],\n  dl: [],\n  dt: [],\n  em: [],\n  hr: [],\n  h1: [],\n  h2: [],\n  h3: [],\n  h4: [],\n  h5: [],\n  h6: [],\n  i: [],\n  img: ['src', 'srcset', 'alt', 'title', 'width', 'height'],\n  li: [],\n  ol: [],\n  p: [],\n  pre: [],\n  s: [],\n  small: [],\n  span: [],\n  sub: [],\n  sup: [],\n  strong: [],\n  u: [],\n  ul: []\n}\n// js-docs-end allow-list\n\nconst uriAttributes = new Set([\n  'background',\n  'cite',\n  'href',\n  'itemtype',\n  'longdesc',\n  'poster',\n  'src',\n  'xlink:href'\n])\n\n/**\n * A pattern that recognizes URLs that are safe wrt. XSS in URL navigation\n * contexts.\n *\n * Shout-out to Angular https://github.com/angular/angular/blob/15.2.8/packages/core/src/sanitization/url_sanitizer.ts#L38\n */\n// eslint-disable-next-line unicorn/better-regex\nconst SAFE_URL_PATTERN = /^(?!javascript:)(?:[a-z0-9+.-]+:|[^&:/?#]*(?:[/?#]|$))/i\n\nconst allowedAttribute = (attribute, allowedAttributeList) => {\n  const attributeName = attribute.nodeName.toLowerCase()\n\n  if (allowedAttributeList.includes(attributeName)) {\n    if (uriAttributes.has(attributeName)) {\n      return Boolean(SAFE_URL_PATTERN.test(attribute.nodeValue))\n    }\n\n    return true\n  }\n\n  // Check if a regular expression validates the attribute.\n  return allowedAttributeList.filter(attributeRegex => attributeRegex instanceof RegExp)\n    .some(regex => regex.test(attributeName))\n}\n\nexport function sanitizeHtml(unsafeHtml, allowList, sanitizeFunction) {\n  if (!unsafeHtml.length) {\n    return unsafeHtml\n  }\n\n  if (sanitizeFunction && typeof sanitizeFunction === 'function') {\n    return sanitizeFunction(unsafeHtml)\n  }\n\n  const domParser = new window.DOMParser()\n  const createdDocument = domParser.parseFromString(unsafeHtml, 'text/html')\n  const elements = [].concat(...createdDocument.body.querySelectorAll('*'))\n\n  for (const element of elements) {\n    const elementName = element.nodeName.toLowerCase()\n\n    if (!Object.keys(allowList).includes(elementName)) {\n      element.remove()\n\n      continue\n    }\n\n    const attributeList = [].concat(...element.attributes)\n    const allowedAttributes = [].concat(allowList['*'] || [], allowList[elementName] || [])\n\n    for (const attribute of attributeList) {\n      if (!allowedAttribute(attribute, allowedAttributes)) {\n        element.removeAttribute(attribute.nodeName)\n      }\n    }\n  }\n\n  return createdDocument.body.innerHTML\n}\n"],
        names: [],
        mappings: "AAAA,CAAC,CAAC;AACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5E,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzE,CAAC;AACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjhrE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAA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,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC;;AAEF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC;;AAEF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzlC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAErD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAErB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC;;AAEJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzlD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC;;AAEF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC;",
        file: undefined
      },
      _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
      hash: "54defd9a3b4b237cd30f45dbefe66f4cab8ce2fe"
    };
    var coverage = global[gcv] || (global[gcv] = {});
    if (!coverage[path] || coverage[path].hash !== hash) {
      coverage[path] = coverageData;
    }
    var actualCoverage = coverage[path];
    {
      // @ts-ignore
      cov_21brbc1pq7 = function () {
        return actualCoverage;
      };
    }
    return actualCoverage;
  }
  cov_21brbc1pq7(); /**
                    * --------------------------------------------------------------------------
                    * CoreUI util/sanitizer.js
                    * Licensed under MIT (https://github.com/coreui/coreui/blob/main/LICENSE)
                    *
                    * This is a modified version of the Bootstrap's util/sanitizer.js
                    * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
                    * --------------------------------------------------------------------------
                    */ // js-docs-start allow-list
  const ARIA_ATTRIBUTE_PATTERN = (cov_21brbc1pq7().s[0]++, /^aria-[\w-]*$/i);
  const DefaultAllowlist = (cov_21brbc1pq7().s[1]++, {
    // Global attributes allowed on any supplied element below.
    '*': ['class', 'dir', 'id', 'lang', 'role', ARIA_ATTRIBUTE_PATTERN],
    a: ['target', 'href', 'title', 'rel'],
    area: [],
    b: [],
    br: [],
    col: [],
    code: [],
    dd: [],
    div: [],
    dl: [],
    dt: [],
    em: [],
    hr: [],
    h1: [],
    h2: [],
    h3: [],
    h4: [],
    h5: [],
    h6: [],
    i: [],
    img: ['src', 'srcset', 'alt', 'title', 'width', 'height'],
    li: [],
    ol: [],
    p: [],
    pre: [],
    s: [],
    small: [],
    span: [],
    sub: [],
    sup: [],
    strong: [],
    u: [],
    ul: []
  }); // js-docs-end allow-list
  const uriAttributes = (cov_21brbc1pq7().s[2]++, new Set(['background', 'cite', 'href', 'itemtype', 'longdesc', 'poster', 'src', 'xlink:href'])); /**
                                                                                                                                                   * A pattern that recognizes URLs that are safe wrt. XSS in URL navigation
                                                                                                                                                   * contexts.
                                                                                                                                                   *
                                                                                                                                                   * Shout-out to Angular https://github.com/angular/angular/blob/15.2.8/packages/core/src/sanitization/url_sanitizer.ts#L38
                                                                                                                                                   */ // eslint-disable-next-line unicorn/better-regex
  const SAFE_URL_PATTERN = (cov_21brbc1pq7().s[3]++, /^(?!javascript:)(?:[a-z0-9+.-]+:|[^&:/?#]*(?:[/?#]|$))/i);
  cov_21brbc1pq7().s[4]++;
  const allowedAttribute = (attribute, allowedAttributeList) => {
    cov_21brbc1pq7().f[0]++;
    const attributeName = (cov_21brbc1pq7().s[5]++, attribute.nodeName.toLowerCase());
    cov_21brbc1pq7().s[6]++;
    if (allowedAttributeList.includes(attributeName)) {
      cov_21brbc1pq7().b[0][0]++;
      cov_21brbc1pq7().s[7]++;
      if (uriAttributes.has(attributeName)) {
        cov_21brbc1pq7().b[1][0]++;
        cov_21brbc1pq7().s[8]++;
        return Boolean(SAFE_URL_PATTERN.test(attribute.nodeValue));
      } else {
        cov_21brbc1pq7().b[1][1]++;
      }
      cov_21brbc1pq7().s[9]++;
      return true;
    } else {
      cov_21brbc1pq7().b[0][1]++;
    } // Check if a regular expression validates the attribute.
    cov_21brbc1pq7().s[10]++;
    return allowedAttributeList.filter(attributeRegex => {
      cov_21brbc1pq7().f[1]++;
      cov_21brbc1pq7().s[11]++;
      return attributeRegex instanceof RegExp;
    }).some(regex => {
      cov_21brbc1pq7().f[2]++;
      cov_21brbc1pq7().s[12]++;
      return regex.test(attributeName);
    });
  };
  function sanitizeHtml(unsafeHtml, allowList, sanitizeFunction) {
    cov_21brbc1pq7().f[3]++;
    cov_21brbc1pq7().s[13]++;
    if (!unsafeHtml.length) {
      cov_21brbc1pq7().b[2][0]++;
      cov_21brbc1pq7().s[14]++;
      return unsafeHtml;
    } else {
      cov_21brbc1pq7().b[2][1]++;
    }
    cov_21brbc1pq7().s[15]++;
    if ((cov_21brbc1pq7().b[4][0]++, sanitizeFunction) && (cov_21brbc1pq7().b[4][1]++, typeof sanitizeFunction === 'function')) {
      cov_21brbc1pq7().b[3][0]++;
      cov_21brbc1pq7().s[16]++;
      return sanitizeFunction(unsafeHtml);
    } else {
      cov_21brbc1pq7().b[3][1]++;
    }
    const domParser = (cov_21brbc1pq7().s[17]++, new window.DOMParser());
    const createdDocument = (cov_21brbc1pq7().s[18]++, domParser.parseFromString(unsafeHtml, 'text/html'));
    const elements = (cov_21brbc1pq7().s[19]++, [].concat(...createdDocument.body.querySelectorAll('*')));
    cov_21brbc1pq7().s[20]++;
    for (const element of elements) {
      const elementName = (cov_21brbc1pq7().s[21]++, element.nodeName.toLowerCase());
      cov_21brbc1pq7().s[22]++;
      if (!Object.keys(allowList).includes(elementName)) {
        cov_21brbc1pq7().b[5][0]++;
        cov_21brbc1pq7().s[23]++;
        element.remove();
        cov_21brbc1pq7().s[24]++;
        continue;
      } else {
        cov_21brbc1pq7().b[5][1]++;
      }
      const attributeList = (cov_21brbc1pq7().s[25]++, [].concat(...element.attributes));
      const allowedAttributes = (cov_21brbc1pq7().s[26]++, [].concat((cov_21brbc1pq7().b[6][0]++, allowList['*']) || (cov_21brbc1pq7().b[6][1]++, []), (cov_21brbc1pq7().b[7][0]++, allowList[elementName]) || (cov_21brbc1pq7().b[7][1]++, [])));
      cov_21brbc1pq7().s[27]++;
      for (const attribute of attributeList) {
        cov_21brbc1pq7().s[28]++;
        if (!allowedAttribute(attribute, allowedAttributes)) {
          cov_21brbc1pq7().b[8][0]++;
          cov_21brbc1pq7().s[29]++;
          element.removeAttribute(attribute.nodeName);
        } else {
          cov_21brbc1pq7().b[8][1]++;
        }
      }
    }
    cov_21brbc1pq7().s[30]++;
    return createdDocument.body.innerHTML;
  }

  function cov_1g0r1a9ft7() {
    var path = "/Users/lukaszholeczek/Projekty/CoreUI/mrholek/coreui-pro/js/src/dom/selector-engine.js";
    var hash = "aa23b46a7063e47dc9502193bbb29b7c51a391c9";
    var global = new Function("return this")();
    var gcv = "__coverage__";
    var coverageData = {
      path: "/Users/lukaszholeczek/Projekty/CoreUI/mrholek/coreui-pro/js/src/dom/selector-engine.js",
      statementMap: {
        "0": {
          start: {
            line: 13,
            column: 20
          },
          end: {
            line: 36,
            column: 1
          }
        },
        "1": {
          start: {
            line: 14,
            column: 17
          },
          end: {
            line: 14,
            column: 59
          }
        },
        "2": {
          start: {
            line: 16,
            column: 2
          },
          end: {
            line: 33,
            column: 3
          }
        },
        "3": {
          start: {
            line: 17,
            column: 24
          },
          end: {
            line: 17,
            column: 52
          }
        },
        "4": {
          start: {
            line: 23,
            column: 4
          },
          end: {
            line: 25,
            column: 5
          }
        },
        "5": {
          start: {
            line: 24,
            column: 6
          },
          end: {
            line: 24,
            column: 17
          }
        },
        "6": {
          start: {
            line: 28,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        "7": {
          start: {
            line: 29,
            column: 6
          },
          end: {
            line: 29,
            column: 55
          }
        },
        "8": {
          start: {
            line: 32,
            column: 4
          },
          end: {
            line: 32,
            column: 83
          }
        },
        "9": {
          start: {
            line: 35,
            column: 2
          },
          end: {
            line: 35,
            column: 87
          }
        },
        "10": {
          start: {
            line: 35,
            column: 51
          },
          end: {
            line: 35,
            column: 69
          }
        },
        "11": {
          start: {
            line: 38,
            column: 23
          },
          end: {
            line: 127,
            column: 1
          }
        },
        "12": {
          start: {
            line: 40,
            column: 4
          },
          end: {
            line: 40,
            column: 83
          }
        },
        "13": {
          start: {
            line: 44,
            column: 4
          },
          end: {
            line: 44,
            column: 66
          }
        },
        "14": {
          start: {
            line: 48,
            column: 4
          },
          end: {
            line: 48,
            column: 82
          }
        },
        "15": {
          start: {
            line: 48,
            column: 58
          },
          end: {
            line: 48,
            column: 81
          }
        },
        "16": {
          start: {
            line: 52,
            column: 20
          },
          end: {
            line: 52,
            column: 22
          }
        },
        "17": {
          start: {
            line: 53,
            column: 19
          },
          end: {
            line: 53,
            column: 55
          }
        },
        "18": {
          start: {
            line: 55,
            column: 4
          },
          end: {
            line: 58,
            column: 5
          }
        },
        "19": {
          start: {
            line: 56,
            column: 6
          },
          end: {
            line: 56,
            column: 28
          }
        },
        "20": {
          start: {
            line: 57,
            column: 6
          },
          end: {
            line: 57,
            column: 54
          }
        },
        "21": {
          start: {
            line: 60,
            column: 4
          },
          end: {
            line: 60,
            column: 18
          }
        },
        "22": {
          start: {
            line: 64,
            column: 19
          },
          end: {
            line: 64,
            column: 49
          }
        },
        "23": {
          start: {
            line: 66,
            column: 4
          },
          end: {
            line: 72,
            column: 5
          }
        },
        "24": {
          start: {
            line: 67,
            column: 6
          },
          end: {
            line: 69,
            column: 7
          }
        },
        "25": {
          start: {
            line: 68,
            column: 8
          },
          end: {
            line: 68,
            column: 25
          }
        },
        "26": {
          start: {
            line: 71,
            column: 6
          },
          end: {
            line: 71,
            column: 48
          }
        },
        "27": {
          start: {
            line: 74,
            column: 4
          },
          end: {
            line: 74,
            column: 13
          }
        },
        "28": {
          start: {
            line: 78,
            column: 15
          },
          end: {
            line: 78,
            column: 41
          }
        },
        "29": {
          start: {
            line: 80,
            column: 4
          },
          end: {
            line: 86,
            column: 5
          }
        },
        "30": {
          start: {
            line: 81,
            column: 6
          },
          end: {
            line: 83,
            column: 7
          }
        },
        "31": {
          start: {
            line: 82,
            column: 8
          },
          end: {
            line: 82,
            column: 21
          }
        },
        "32": {
          start: {
            line: 85,
            column: 6
          },
          end: {
            line: 85,
            column: 36
          }
        },
        "33": {
          start: {
            line: 88,
            column: 4
          },
          end: {
            line: 88,
            column: 13
          }
        },
        "34": {
          start: {
            line: 92,
            column: 23
          },
          end: {
            line: 101,
            column: 67
          }
        },
        "35": {
          start: {
            line: 101,
            column: 22
          },
          end: {
            line: 101,
            column: 56
          }
        },
        "36": {
          start: {
            line: 103,
            column: 4
          },
          end: {
            line: 103,
            column: 88
          }
        },
        "37": {
          start: {
            line: 103,
            column: 55
          },
          end: {
            line: 103,
            column: 87
          }
        },
        "38": {
          start: {
            line: 107,
            column: 21
          },
          end: {
            line: 107,
            column: 41
          }
        },
        "39": {
          start: {
            line: 109,
            column: 4
          },
          end: {
            line: 111,
            column: 5
          }
        },
        "40": {
          start: {
            line: 110,
            column: 6
          },
          end: {
            line: 110,
            column: 63
          }
        },
        "41": {
          start: {
            line: 113,
            column: 4
          },
          end: {
            line: 113,
            column: 15
          }
        },
        "42": {
          start: {
            line: 117,
            column: 21
          },
          end: {
            line: 117,
            column: 41
          }
        },
        "43": {
          start: {
            line: 119,
            column: 4
          },
          end: {
            line: 119,
            column: 61
          }
        },
        "44": {
          start: {
            line: 123,
            column: 21
          },
          end: {
            line: 123,
            column: 41
          }
        },
        "45": {
          start: {
            line: 125,
            column: 4
          },
          end: {
            line: 125,
            column: 56
          }
        }
      },
      fnMap: {
        "0": {
          name: "(anonymous_0)",
          decl: {
            start: {
              line: 13,
              column: 20
            },
            end: {
              line: 13,
              column: 21
            }
          },
          loc: {
            start: {
              line: 13,
              column: 31
            },
            end: {
              line: 36,
              column: 1
            }
          },
          line: 13
        },
        "1": {
          name: "(anonymous_1)",
          decl: {
            start: {
              line: 35,
              column: 44
            },
            end: {
              line: 35,
              column: 45
            }
          },
          loc: {
            start: {
              line: 35,
              column: 51
            },
            end: {
              line: 35,
              column: 69
            }
          },
          line: 35
        },
        "2": {
          name: "(anonymous_2)",
          decl: {
            start: {
              line: 39,
              column: 2
            },
            end: {
              line: 39,
              column: 3
            }
          },
          loc: {
            start: {
              line: 39,
              column: 53
            },
            end: {
              line: 41,
              column: 3
            }
          },
          line: 39
        },
        "3": {
          name: "(anonymous_3)",
          decl: {
            start: {
              line: 43,
              column: 2
            },
            end: {
              line: 43,
              column: 3
            }
          },
          loc: {
            start: {
              line: 43,
              column: 56
            },
            end: {
              line: 45,
              column: 3
            }
          },
          line: 43
        },
        "4": {
          name: "(anonymous_4)",
          decl: {
            start: {
              line: 47,
              column: 2
            },
            end: {
              line: 47,
              column: 3
            }
          },
          loc: {
            start: {
              line: 47,
              column: 30
            },
            end: {
              line: 49,
              column: 3
            }
          },
          line: 47
        },
        "5": {
          name: "(anonymous_5)",
          decl: {
            start: {
              line: 48,
              column: 49
            },
            end: {
              line: 48,
              column: 50
            }
          },
          loc: {
            start: {
              line: 48,
              column: 58
            },
            end: {
              line: 48,
              column: 81
            }
          },
          line: 48
        },
        "6": {
          name: "(anonymous_6)",
          decl: {
            start: {
              line: 51,
              column: 2
            },
            end: {
              line: 51,
              column: 3
            }
          },
          loc: {
            start: {
              line: 51,
              column: 29
            },
            end: {
              line: 61,
              column: 3
            }
          },
          line: 51
        },
        "7": {
          name: "(anonymous_7)",
          decl: {
            start: {
              line: 63,
              column: 2
            },
            end: {
              line: 63,
              column: 3
            }
          },
          loc: {
            start: {
              line: 63,
              column: 26
            },
            end: {
              line: 75,
              column: 3
            }
          },
          line: 63
        },
        "8": {
          name: "(anonymous_8)",
          decl: {
            start: {
              line: 77,
              column: 2
            },
            end: {
              line: 77,
              column: 3
            }
          },
          loc: {
            start: {
              line: 77,
              column: 26
            },
            end: {
              line: 89,
              column: 3
            }
          },
          line: 77
        },
        "9": {
          name: "(anonymous_9)",
          decl: {
            start: {
              line: 91,
              column: 2
            },
            end: {
              line: 91,
              column: 3
            }
          },
          loc: {
            start: {
              line: 91,
              column: 29
            },
            end: {
              line: 104,
              column: 3
            }
          },
          line: 91
        },
        "10": {
          name: "(anonymous_10)",
          decl: {
            start: {
              line: 101,
              column: 10
            },
            end: {
              line: 101,
              column: 11
            }
          },
          loc: {
            start: {
              line: 101,
              column: 22
            },
            end: {
              line: 101,
              column: 56
            }
          },
          line: 101
        },
        "11": {
          name: "(anonymous_11)",
          decl: {
            start: {
              line: 103,
              column: 49
            },
            end: {
              line: 103,
              column: 50
            }
          },
          loc: {
            start: {
              line: 103,
              column: 55
            },
            end: {
              line: 103,
              column: 87
            }
          },
          line: 103
        },
        "12": {
          name: "(anonymous_12)",
          decl: {
            start: {
              line: 106,
              column: 2
            },
            end: {
              line: 106,
              column: 3
            }
          },
          loc: {
            start: {
              line: 106,
              column: 34
            },
            end: {
              line: 114,
              column: 3
            }
          },
          line: 106
        },
        "13": {
          name: "(anonymous_13)",
          decl: {
            start: {
              line: 116,
              column: 2
            },
            end: {
              line: 116,
              column: 3
            }
          },
          loc: {
            start: {
              line: 116,
              column: 34
            },
            end: {
              line: 120,
              column: 3
            }
          },
          line: 116
        },
        "14": {
          name: "(anonymous_14)",
          decl: {
            start: {
              line: 122,
              column: 2
            },
            end: {
              line: 122,
              column: 3
            }
          },
          loc: {
            start: {
              line: 122,
              column: 43
            },
            end: {
              line: 126,
              column: 3
            }
          },
          line: 122
        }
      },
      branchMap: {
        "0": {
          loc: {
            start: {
              line: 16,
              column: 2
            },
            end: {
              line: 33,
              column: 3
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 16,
              column: 2
            },
            end: {
              line: 33,
              column: 3
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 16
        },
        "1": {
          loc: {
            start: {
              line: 16,
              column: 6
            },
            end: {
              line: 16,
              column: 35
            }
          },
          type: "binary-expr",
          locations: [{
            start: {
              line: 16,
              column: 6
            },
            end: {
              line: 16,
              column: 15
            }
          }, {
            start: {
              line: 16,
              column: 19
            },
            end: {
              line: 16,
              column: 35
            }
          }],
          line: 16
        },
        "2": {
          loc: {
            start: {
              line: 23,
              column: 4
            },
            end: {
              line: 25,
              column: 5
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 23,
              column: 4
            },
            end: {
              line: 25,
              column: 5
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 23
        },
        "3": {
          loc: {
            start: {
              line: 23,
              column: 8
            },
            end: {
              line: 23,
              column: 90
            }
          },
          type: "binary-expr",
          locations: [{
            start: {
              line: 23,
              column: 8
            },
            end: {
              line: 23,
              column: 22
            }
          }, {
            start: {
              line: 23,
              column: 27
            },
            end: {
              line: 23,
              column: 55
            }
          }, {
            start: {
              line: 23,
              column: 59
            },
            end: {
              line: 23,
              column: 89
            }
          }],
          line: 23
        },
        "4": {
          loc: {
            start: {
              line: 28,
              column: 4
            },
            end: {
              line: 30,
              column: 5
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 28,
              column: 4
            },
            end: {
              line: 30,
              column: 5
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 28
        },
        "5": {
          loc: {
            start: {
              line: 28,
              column: 8
            },
            end: {
              line: 28,
              column: 69
            }
          },
          type: "binary-expr",
          locations: [{
            start: {
              line: 28,
              column: 8
            },
            end: {
              line: 28,
              column: 35
            }
          }, {
            start: {
              line: 28,
              column: 39
            },
            end: {
              line: 28,
              column: 69
            }
          }],
          line: 28
        },
        "6": {
          loc: {
            start: {
              line: 32,
              column: 15
            },
            end: {
              line: 32,
              column: 83
            }
          },
          type: "cond-expr",
          locations: [{
            start: {
              line: 32,
              column: 56
            },
            end: {
              line: 32,
              column: 76
            }
          }, {
            start: {
              line: 32,
              column: 79
            },
            end: {
              line: 32,
              column: 83
            }
          }],
          line: 32
        },
        "7": {
          loc: {
            start: {
              line: 32,
              column: 15
            },
            end: {
              line: 32,
              column: 53
            }
          },
          type: "binary-expr",
          locations: [{
            start: {
              line: 32,
              column: 15
            },
            end: {
              line: 32,
              column: 28
            }
          }, {
            start: {
              line: 32,
              column: 32
            },
            end: {
              line: 32,
              column: 53
            }
          }],
          line: 32
        },
        "8": {
          loc: {
            start: {
              line: 35,
              column: 9
            },
            end: {
              line: 35,
              column: 87
            }
          },
          type: "cond-expr",
          locations: [{
            start: {
              line: 35,
              column: 20
            },
            end: {
              line: 35,
              column: 80
            }
          }, {
            start: {
              line: 35,
              column: 83
            },
            end: {
              line: 35,
              column: 87
            }
          }],
          line: 35
        },
        "9": {
          loc: {
            start: {
              line: 39,
              column: 17
            },
            end: {
              line: 39,
              column: 51
            }
          },
          type: "default-arg",
          locations: [{
            start: {
              line: 39,
              column: 27
            },
            end: {
              line: 39,
              column: 51
            }
          }],
          line: 39
        },
        "10": {
          loc: {
            start: {
              line: 43,
              column: 20
            },
            end: {
              line: 43,
              column: 54
            }
          },
          type: "default-arg",
          locations: [{
            start: {
              line: 43,
              column: 30
            },
            end: {
              line: 43,
              column: 54
            }
          }],
          line: 43
        },
        "11": {
          loc: {
            start: {
              line: 67,
              column: 6
            },
            end: {
              line: 69,
              column: 7
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 67,
              column: 6
            },
            end: {
              line: 69,
              column: 7
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 67
        },
        "12": {
          loc: {
            start: {
              line: 81,
              column: 6
            },
            end: {
              line: 83,
              column: 7
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 81,
              column: 6
            },
            end: {
              line: 83,
              column: 7
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 81
        },
        "13": {
          loc: {
            start: {
              line: 103,
              column: 55
            },
            end: {
              line: 103,
              column: 87
            }
          },
          type: "binary-expr",
          locations: [{
            start: {
              line: 103,
              column: 55
            },
            end: {
              line: 103,
              column: 70
            }
          }, {
            start: {
              line: 103,
              column: 74
            },
            end: {
              line: 103,
              column: 87
            }
          }],
          line: 103
        },
        "14": {
          loc: {
            start: {
              line: 109,
              column: 4
            },
            end: {
              line: 111,
              column: 5
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 109,
              column: 4
            },
            end: {
              line: 111,
              column: 5
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 109
        },
        "15": {
          loc: {
            start: {
              line: 110,
              column: 13
            },
            end: {
              line: 110,
              column: 63
            }
          },
          type: "cond-expr",
          locations: [{
            start: {
              line: 110,
              column: 48
            },
            end: {
              line: 110,
              column: 56
            }
          }, {
            start: {
              line: 110,
              column: 59
            },
            end: {
              line: 110,
              column: 63
            }
          }],
          line: 110
        },
        "16": {
          loc: {
            start: {
              line: 119,
              column: 11
            },
            end: {
              line: 119,
              column: 61
            }
          },
          type: "cond-expr",
          locations: [{
            start: {
              line: 119,
              column: 22
            },
            end: {
              line: 119,
              column: 54
            }
          }, {
            start: {
              line: 119,
              column: 57
            },
            end: {
              line: 119,
              column: 61
            }
          }],
          line: 119
        },
        "17": {
          loc: {
            start: {
              line: 125,
              column: 11
            },
            end: {
              line: 125,
              column: 56
            }
          },
          type: "cond-expr",
          locations: [{
            start: {
              line: 125,
              column: 22
            },
            end: {
              line: 125,
              column: 51
            }
          }, {
            start: {
              line: 125,
              column: 54
            },
            end: {
              line: 125,
              column: 56
            }
          }],
          line: 125
        }
      },
      s: {
        "0": 0,
        "1": 0,
        "2": 0,
        "3": 0,
        "4": 0,
        "5": 0,
        "6": 0,
        "7": 0,
        "8": 0,
        "9": 0,
        "10": 0,
        "11": 0,
        "12": 0,
        "13": 0,
        "14": 0,
        "15": 0,
        "16": 0,
        "17": 0,
        "18": 0,
        "19": 0,
        "20": 0,
        "21": 0,
        "22": 0,
        "23": 0,
        "24": 0,
        "25": 0,
        "26": 0,
        "27": 0,
        "28": 0,
        "29": 0,
        "30": 0,
        "31": 0,
        "32": 0,
        "33": 0,
        "34": 0,
        "35": 0,
        "36": 0,
        "37": 0,
        "38": 0,
        "39": 0,
        "40": 0,
        "41": 0,
        "42": 0,
        "43": 0,
        "44": 0,
        "45": 0
      },
      f: {
        "0": 0,
        "1": 0,
        "2": 0,
        "3": 0,
        "4": 0,
        "5": 0,
        "6": 0,
        "7": 0,
        "8": 0,
        "9": 0,
        "10": 0,
        "11": 0,
        "12": 0,
        "13": 0,
        "14": 0
      },
      b: {
        "0": [0, 0],
        "1": [0, 0],
        "2": [0, 0],
        "3": [0, 0, 0],
        "4": [0, 0],
        "5": [0, 0],
        "6": [0, 0],
        "7": [0, 0],
        "8": [0, 0],
        "9": [0],
        "10": [0],
        "11": [0, 0],
        "12": [0, 0],
        "13": [0, 0],
        "14": [0, 0],
        "15": [0, 0],
        "16": [0, 0],
        "17": [0, 0]
      },
      inputSourceMap: {
        version: 3,
        sources: ["/Users/lukaszholeczek/Projekty/CoreUI/mrholek/coreui-pro/js/src/dom/selector-engine.js"],
        sourcesContent: ["/**\n * --------------------------------------------------------------------------\n * CoreUI dom/selector-engine.js\n * Licensed under MIT (https://github.com/coreui/coreui/blob/main/LICENSE)\n *\n * This is a modified version of the Bootstrap's dom/selector-engine.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport { isDisabled, isVisible, parseSelector } from '../util/index.js'\n\nconst getSelector = element => {\n  let selector = element.getAttribute('data-coreui-target')\n\n  if (!selector || selector === '#') {\n    let hrefAttribute = element.getAttribute('href')\n\n    // The only valid content that could double as a selector are IDs or classes,\n    // so everything starting with `#` or `.`. If a \"real\" URL is used as the selector,\n    // `document.querySelector` will rightfully complain it is invalid.\n    // See https://github.com/twbs/bootstrap/issues/32273\n    if (!hrefAttribute || (!hrefAttribute.includes('#') && !hrefAttribute.startsWith('.'))) {\n      return null\n    }\n\n    // Just in case some CMS puts out a full URL with the anchor appended\n    if (hrefAttribute.includes('#') && !hrefAttribute.startsWith('#')) {\n      hrefAttribute = `#${hrefAttribute.split('#')[1]}`\n    }\n\n    selector = hrefAttribute && hrefAttribute !== '#' ? hrefAttribute.trim() : null\n  }\n\n  return selector ? selector.split(',').map(sel => parseSelector(sel)).join(',') : null\n}\n\nconst SelectorEngine = {\n  find(selector, element = document.documentElement) {\n    return [].concat(...Element.prototype.querySelectorAll.call(element, selector))\n  },\n\n  findOne(selector, element = document.documentElement) {\n    return Element.prototype.querySelector.call(element, selector)\n  },\n\n  children(element, selector) {\n    return [].concat(...element.children).filter(child => child.matches(selector))\n  },\n\n  parents(element, selector) {\n    const parents = []\n    let ancestor = element.parentNode.closest(selector)\n\n    while (ancestor) {\n      parents.push(ancestor)\n      ancestor = ancestor.parentNode.closest(selector)\n    }\n\n    return parents\n  },\n\n  prev(element, selector) {\n    let previous = element.previousElementSibling\n\n    while (previous) {\n      if (previous.matches(selector)) {\n        return [previous]\n      }\n\n      previous = previous.previousElementSibling\n    }\n\n    return []\n  },\n  // TODO: this is now unused; remove later along with prev()\n  next(element, selector) {\n    let next = element.nextElementSibling\n\n    while (next) {\n      if (next.matches(selector)) {\n        return [next]\n      }\n\n      next = next.nextElementSibling\n    }\n\n    return []\n  },\n\n  focusableChildren(element) {\n    const focusables = [\n      'a',\n      'button',\n      'input',\n      'textarea',\n      'select',\n      'details',\n      '[tabindex]',\n      '[contenteditable=\"true\"]'\n    ].map(selector => `${selector}:not([tabindex^=\"-\"])`).join(',')\n\n    return this.find(focusables, element).filter(el => !isDisabled(el) && isVisible(el))\n  },\n\n  getSelectorFromElement(element) {\n    const selector = getSelector(element)\n\n    if (selector) {\n      return SelectorEngine.findOne(selector) ? selector : null\n    }\n\n    return null\n  },\n\n  getElementFromSelector(element) {\n    const selector = getSelector(element)\n\n    return selector ? SelectorEngine.findOne(selector) : null\n  },\n\n  getMultipleElementsFromSelector(element) {\n    const selector = getSelector(element)\n\n    return selector ? SelectorEngine.find(selector) : []\n  }\n}\n\nexport default SelectorEngine\n"],
        names: [],
        mappings: "AAAA,CAAC,CAAC;AACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5E,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzE,CAAC;AACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACttrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAEnD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxhB,CAAC,CAAC,CAAC,CAAC;;AAEJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtD,CAAC,CAAC,CAAC,CAAC;;AAEJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClF,CAAC,CAAC;;AAEF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtF;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClF,CAAC,CAAC,CAAC;;AAEH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjjF,CAAC,CAAC,CAAC;;AAEH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAEtD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrD,CAAC,CAAC,CAAC,CAAC;;AAEJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC;;AAEH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAEhD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAEN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC,CAAC;;AAEJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACZ,CAAC,CAAC,CAAC;AACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAExC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAEN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC,CAAC;;AAEJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACZ,CAAC,CAAC,CAAC;;AAEH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAElE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvF,CAAC,CAAC,CAAC;;AAEH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAExC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9D,CAAC,CAAC,CAAC,CAAC;;AAEJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC;;AAEH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAExC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5D,CAAC,CAAC,CAAC;;AAEH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAExC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvD,CAAC,CAAC;AACF;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;",
        file: undefined
      },
      _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
      hash: "aa23b46a7063e47dc9502193bbb29b7c51a391c9"
    };
    var coverage = global[gcv] || (global[gcv] = {});
    if (!coverage[path] || coverage[path].hash !== hash) {
      coverage[path] = coverageData;
    }
    var actualCoverage = coverage[path];
    {
      // @ts-ignore
      cov_1g0r1a9ft7 = function () {
        return actualCoverage;
      };
    }
    return actualCoverage;
  }
  cov_1g0r1a9ft7(); /**
                    * --------------------------------------------------------------------------
                    * CoreUI dom/selector-engine.js
                    * Licensed under MIT (https://github.com/coreui/coreui/blob/main/LICENSE)
                    *
                    * This is a modified version of the Bootstrap's dom/selector-engine.js
                    * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
                    * --------------------------------------------------------------------------
                    */
  cov_1g0r1a9ft7().s[0]++;
  const getSelector = element => {
    cov_1g0r1a9ft7().f[0]++;
    let selector = (cov_1g0r1a9ft7().s[1]++, element.getAttribute('data-coreui-target'));
    cov_1g0r1a9ft7().s[2]++;
    if ((cov_1g0r1a9ft7().b[1][0]++, !selector) || (cov_1g0r1a9ft7().b[1][1]++, selector === '#')) {
      cov_1g0r1a9ft7().b[0][0]++;
      let hrefAttribute = (cov_1g0r1a9ft7().s[3]++, element.getAttribute('href')); // The only valid content that could double as a selector are IDs or classes,
      // so everything starting with `#` or `.`. If a "real" URL is used as the selector,
      // `document.querySelector` will rightfully complain it is invalid.
      // See https://github.com/twbs/bootstrap/issues/32273
      cov_1g0r1a9ft7().s[4]++;
      if ((cov_1g0r1a9ft7().b[3][0]++, !hrefAttribute) || (cov_1g0r1a9ft7().b[3][1]++, !hrefAttribute.includes('#')) && (cov_1g0r1a9ft7().b[3][2]++, !hrefAttribute.startsWith('.'))) {
        cov_1g0r1a9ft7().b[2][0]++;
        cov_1g0r1a9ft7().s[5]++;
        return null;
      } else {
        cov_1g0r1a9ft7().b[2][1]++;
      } // Just in case some CMS puts out a full URL with the anchor appended
      cov_1g0r1a9ft7().s[6]++;
      if ((cov_1g0r1a9ft7().b[5][0]++, hrefAttribute.includes('#')) && (cov_1g0r1a9ft7().b[5][1]++, !hrefAttribute.startsWith('#'))) {
        cov_1g0r1a9ft7().b[4][0]++;
        cov_1g0r1a9ft7().s[7]++;
        hrefAttribute = `#${hrefAttribute.split('#')[1]}`;
      } else {
        cov_1g0r1a9ft7().b[4][1]++;
      }
      cov_1g0r1a9ft7().s[8]++;
      selector = (cov_1g0r1a9ft7().b[7][0]++, hrefAttribute) && (cov_1g0r1a9ft7().b[7][1]++, hrefAttribute !== '#') ? (cov_1g0r1a9ft7().b[6][0]++, hrefAttribute.trim()) : (cov_1g0r1a9ft7().b[6][1]++, null);
    } else {
      cov_1g0r1a9ft7().b[0][1]++;
    }
    cov_1g0r1a9ft7().s[9]++;
    return selector ? (cov_1g0r1a9ft7().b[8][0]++, selector.split(',').map(sel => {
      cov_1g0r1a9ft7().f[1]++;
      cov_1g0r1a9ft7().s[10]++;
      return parseSelector(sel);
    }).join(',')) : (cov_1g0r1a9ft7().b[8][1]++, null);
  };
  const SelectorEngine = (cov_1g0r1a9ft7().s[11]++, {
    find(selector, element = (cov_1g0r1a9ft7().b[9][0]++, document.documentElement)) {
      cov_1g0r1a9ft7().f[2]++;
      cov_1g0r1a9ft7().s[12]++;
      return [].concat(...Element.prototype.querySelectorAll.call(element, selector));
    },
    findOne(selector, element = (cov_1g0r1a9ft7().b[10][0]++, document.documentElement)) {
      cov_1g0r1a9ft7().f[3]++;
      cov_1g0r1a9ft7().s[13]++;
      return Element.prototype.querySelector.call(element, selector);
    },
    children(element, selector) {
      cov_1g0r1a9ft7().f[4]++;
      cov_1g0r1a9ft7().s[14]++;
      return [].concat(...element.children).filter(child => {
        cov_1g0r1a9ft7().f[5]++;
        cov_1g0r1a9ft7().s[15]++;
        return child.matches(selector);
      });
    },
    parents(element, selector) {
      cov_1g0r1a9ft7().f[6]++;
      const parents = (cov_1g0r1a9ft7().s[16]++, []);
      let ancestor = (cov_1g0r1a9ft7().s[17]++, element.parentNode.closest(selector));
      cov_1g0r1a9ft7().s[18]++;
      while (ancestor) {
        cov_1g0r1a9ft7().s[19]++;
        parents.push(ancestor);
        cov_1g0r1a9ft7().s[20]++;
        ancestor = ancestor.parentNode.closest(selector);
      }
      cov_1g0r1a9ft7().s[21]++;
      return parents;
    },
    prev(element, selector) {
      cov_1g0r1a9ft7().f[7]++;
      let previous = (cov_1g0r1a9ft7().s[22]++, element.previousElementSibling);
      cov_1g0r1a9ft7().s[23]++;
      while (previous) {
        cov_1g0r1a9ft7().s[24]++;
        if (previous.matches(selector)) {
          cov_1g0r1a9ft7().b[11][0]++;
          cov_1g0r1a9ft7().s[25]++;
          return [previous];
        } else {
          cov_1g0r1a9ft7().b[11][1]++;
        }
        cov_1g0r1a9ft7().s[26]++;
        previous = previous.previousElementSibling;
      }
      cov_1g0r1a9ft7().s[27]++;
      return [];
    },
    // TODO: this is now unused; remove later along with prev()
    next(element, selector) {
      cov_1g0r1a9ft7().f[8]++;
      let next = (cov_1g0r1a9ft7().s[28]++, element.nextElementSibling);
      cov_1g0r1a9ft7().s[29]++;
      while (next) {
        cov_1g0r1a9ft7().s[30]++;
        if (next.matches(selector)) {
          cov_1g0r1a9ft7().b[12][0]++;
          cov_1g0r1a9ft7().s[31]++;
          return [next];
        } else {
          cov_1g0r1a9ft7().b[12][1]++;
        }
        cov_1g0r1a9ft7().s[32]++;
        next = next.nextElementSibling;
      }
      cov_1g0r1a9ft7().s[33]++;
      return [];
    },
    focusableChildren(element) {
      cov_1g0r1a9ft7().f[9]++;
      const focusables = (cov_1g0r1a9ft7().s[34]++, ['a', 'button', 'input', 'textarea', 'select', 'details', '[tabindex]', '[contenteditable="true"]'].map(selector => {
        cov_1g0r1a9ft7().f[10]++;
        cov_1g0r1a9ft7().s[35]++;
        return `${selector}:not([tabindex^="-"])`;
      }).join(','));
      cov_1g0r1a9ft7().s[36]++;
      return this.find(focusables, element).filter(el => {
        cov_1g0r1a9ft7().f[11]++;
        cov_1g0r1a9ft7().s[37]++;
        return (cov_1g0r1a9ft7().b[13][0]++, !isDisabled(el)) && (cov_1g0r1a9ft7().b[13][1]++, isVisible(el));
      });
    },
    getSelectorFromElement(element) {
      cov_1g0r1a9ft7().f[12]++;
      const selector = (cov_1g0r1a9ft7().s[38]++, getSelector(element));
      cov_1g0r1a9ft7().s[39]++;
      if (selector) {
        cov_1g0r1a9ft7().b[14][0]++;
        cov_1g0r1a9ft7().s[40]++;
        return SelectorEngine.findOne(selector) ? (cov_1g0r1a9ft7().b[15][0]++, selector) : (cov_1g0r1a9ft7().b[15][1]++, null);
      } else {
        cov_1g0r1a9ft7().b[14][1]++;
      }
      cov_1g0r1a9ft7().s[41]++;
      return null;
    },
    getElementFromSelector(element) {
      cov_1g0r1a9ft7().f[13]++;
      const selector = (cov_1g0r1a9ft7().s[42]++, getSelector(element));
      cov_1g0r1a9ft7().s[43]++;
      return selector ? (cov_1g0r1a9ft7().b[16][0]++, SelectorEngine.findOne(selector)) : (cov_1g0r1a9ft7().b[16][1]++, null);
    },
    getMultipleElementsFromSelector(element) {
      cov_1g0r1a9ft7().f[14]++;
      const selector = (cov_1g0r1a9ft7().s[44]++, getSelector(element));
      cov_1g0r1a9ft7().s[45]++;
      return selector ? (cov_1g0r1a9ft7().b[17][0]++, SelectorEngine.find(selector)) : (cov_1g0r1a9ft7().b[17][1]++, []);
    }
  });

  function cov_1f9d5k6bp2() {
    var path = "/Users/lukaszholeczek/Projekty/CoreUI/mrholek/coreui-pro/js/src/util/template-factory.js";
    var hash = "d9e4a41cfccceeb408a3468c6a3ae1fc43398434";
    var global = new Function("return this")();
    var gcv = "__coverage__";
    var coverageData = {
      path: "/Users/lukaszholeczek/Projekty/CoreUI/mrholek/coreui-pro/js/src/util/template-factory.js",
      statementMap: {
        "0": {
          start: {
            line: 20,
            column: 13
          },
          end: {
            line: 20,
            column: 30
          }
        },
        "1": {
          start: {
            line: 22,
            column: 16
          },
          end: {
            line: 30,
            column: 1
          }
        },
        "2": {
          start: {
            line: 32,
            column: 20
          },
          end: {
            line: 40,
            column: 1
          }
        },
        "3": {
          start: {
            line: 42,
            column: 27
          },
          end: {
            line: 45,
            column: 1
          }
        },
        "4": {
          start: {
            line: 53,
            column: 4
          },
          end: {
            line: 53,
            column: 11
          }
        },
        "5": {
          start: {
            line: 54,
            column: 4
          },
          end: {
            line: 54,
            column: 42
          }
        },
        "6": {
          start: {
            line: 59,
            column: 4
          },
          end: {
            line: 59,
            column: 18
          }
        },
        "7": {
          start: {
            line: 63,
            column: 4
          },
          end: {
            line: 63,
            column: 22
          }
        },
        "8": {
          start: {
            line: 67,
            column: 4
          },
          end: {
            line: 67,
            column: 15
          }
        },
        "9": {
          start: {
            line: 72,
            column: 4
          },
          end: {
            line: 74,
            column: 22
          }
        },
        "10": {
          start: {
            line: 73,
            column: 21
          },
          end: {
            line: 73,
            column: 58
          }
        },
        "11": {
          start: {
            line: 78,
            column: 4
          },
          end: {
            line: 78,
            column: 39
          }
        },
        "12": {
          start: {
            line: 82,
            column: 4
          },
          end: {
            line: 82,
            column: 31
          }
        },
        "13": {
          start: {
            line: 83,
            column: 4
          },
          end: {
            line: 83,
            column: 66
          }
        },
        "14": {
          start: {
            line: 84,
            column: 4
          },
          end: {
            line: 84,
            column: 15
          }
        },
        "15": {
          start: {
            line: 88,
            column: 28
          },
          end: {
            line: 88,
            column: 57
          }
        },
        "16": {
          start: {
            line: 89,
            column: 4
          },
          end: {
            line: 89,
            column: 74
          }
        },
        "17": {
          start: {
            line: 91,
            column: 4
          },
          end: {
            line: 93,
            column: 5
          }
        },
        "18": {
          start: {
            line: 92,
            column: 6
          },
          end: {
            line: 92,
            column: 55
          }
        },
        "19": {
          start: {
            line: 95,
            column: 21
          },
          end: {
            line: 95,
            column: 48
          }
        },
        "20": {
          start: {
            line: 96,
            column: 23
          },
          end: {
            line: 96,
            column: 77
          }
        },
        "21": {
          start: {
            line: 98,
            column: 4
          },
          end: {
            line: 100,
            column: 5
          }
        },
        "22": {
          start: {
            line: 99,
            column: 6
          },
          end: {
            line: 99,
            column: 54
          }
        },
        "23": {
          start: {
            line: 102,
            column: 4
          },
          end: {
            line: 102,
            column: 19
          }
        },
        "24": {
          start: {
            line: 107,
            column: 4
          },
          end: {
            line: 107,
            column: 34
          }
        },
        "25": {
          start: {
            line: 108,
            column: 4
          },
          end: {
            line: 108,
            column: 38
          }
        },
        "26": {
          start: {
            line: 112,
            column: 4
          },
          end: {
            line: 114,
            column: 5
          }
        },
        "27": {
          start: {
            line: 113,
            column: 6
          },
          end: {
            line: 113,
            column: 78
          }
        },
        "28": {
          start: {
            line: 118,
            column: 28
          },
          end: {
            line: 118,
            column: 70
          }
        },
        "29": {
          start: {
            line: 120,
            column: 4
          },
          end: {
            line: 122,
            column: 5
          }
        },
        "30": {
          start: {
            line: 121,
            column: 6
          },
          end: {
            line: 121,
            column: 12
          }
        },
        "31": {
          start: {
            line: 124,
            column: 4
          },
          end: {
            line: 124,
            column: 52
          }
        },
        "32": {
          start: {
            line: 126,
            column: 4
          },
          end: {
            line: 129,
            column: 5
          }
        },
        "33": {
          start: {
            line: 127,
            column: 6
          },
          end: {
            line: 127,
            column: 30
          }
        },
        "34": {
          start: {
            line: 128,
            column: 6
          },
          end: {
            line: 128,
            column: 12
          }
        },
        "35": {
          start: {
            line: 131,
            column: 4
          },
          end: {
            line: 134,
            column: 5
          }
        },
        "36": {
          start: {
            line: 132,
            column: 6
          },
          end: {
            line: 132,
            column: 70
          }
        },
        "37": {
          start: {
            line: 133,
            column: 6
          },
          end: {
            line: 133,
            column: 12
          }
        },
        "38": {
          start: {
            line: 136,
            column: 4
          },
          end: {
            line: 139,
            column: 5
          }
        },
        "39": {
          start: {
            line: 137,
            column: 6
          },
          end: {
            line: 137,
            column: 62
          }
        },
        "40": {
          start: {
            line: 138,
            column: 6
          },
          end: {
            line: 138,
            column: 12
          }
        },
        "41": {
          start: {
            line: 141,
            column: 4
          },
          end: {
            line: 141,
            column: 41
          }
        },
        "42": {
          start: {
            line: 145,
            column: 4
          },
          end: {
            line: 145,
            column: 107
          }
        },
        "43": {
          start: {
            line: 149,
            column: 4
          },
          end: {
            line: 149,
            column: 42
          }
        },
        "44": {
          start: {
            line: 153,
            column: 4
          },
          end: {
            line: 157,
            column: 5
          }
        },
        "45": {
          start: {
            line: 154,
            column: 6
          },
          end: {
            line: 154,
            column: 36
          }
        },
        "46": {
          start: {
            line: 155,
            column: 6
          },
          end: {
            line: 155,
            column: 37
          }
        },
        "47": {
          start: {
            line: 156,
            column: 6
          },
          end: {
            line: 156,
            column: 12
          }
        },
        "48": {
          start: {
            line: 159,
            column: 4
          },
          end: {
            line: 159,
            column: 53
          }
        }
      },
      fnMap: {
        "0": {
          name: "(anonymous_0)",
          decl: {
            start: {
              line: 52,
              column: 2
            },
            end: {
              line: 52,
              column: 3
            }
          },
          loc: {
            start: {
              line: 52,
              column: 22
            },
            end: {
              line: 55,
              column: 3
            }
          },
          line: 52
        },
        "1": {
          name: "(anonymous_1)",
          decl: {
            start: {
              line: 58,
              column: 2
            },
            end: {
              line: 58,
              column: 3
            }
          },
          loc: {
            start: {
              line: 58,
              column: 23
            },
            end: {
              line: 60,
              column: 3
            }
          },
          line: 58
        },
        "2": {
          name: "(anonymous_2)",
          decl: {
            start: {
              line: 62,
              column: 2
            },
            end: {
              line: 62,
              column: 3
            }
          },
          loc: {
            start: {
              line: 62,
              column: 27
            },
            end: {
              line: 64,
              column: 3
            }
          },
          line: 62
        },
        "3": {
          name: "(anonymous_3)",
          decl: {
            start: {
              line: 66,
              column: 2
            },
            end: {
              line: 66,
              column: 3
            }
          },
          loc: {
            start: {
              line: 66,
              column: 20
            },
            end: {
              line: 68,
              column: 3
            }
          },
          line: 66
        },
        "4": {
          name: "(anonymous_4)",
          decl: {
            start: {
              line: 71,
              column: 2
            },
            end: {
              line: 71,
              column: 3
            }
          },
          loc: {
            start: {
              line: 71,
              column: 15
            },
            end: {
              line: 75,
              column: 3
            }
          },
          line: 71
        },
        "5": {
          name: "(anonymous_5)",
          decl: {
            start: {
              line: 73,
              column: 11
            },
            end: {
              line: 73,
              column: 12
            }
          },
          loc: {
            start: {
              line: 73,
              column: 21
            },
            end: {
              line: 73,
              column: 58
            }
          },
          line: 73
        },
        "6": {
          name: "(anonymous_6)",
          decl: {
            start: {
              line: 77,
              column: 2
            },
            end: {
              line: 77,
              column: 3
            }
          },
          loc: {
            start: {
              line: 77,
              column: 15
            },
            end: {
              line: 79,
              column: 3
            }
          },
          line: 77
        },
        "7": {
          name: "(anonymous_7)",
          decl: {
            start: {
              line: 81,
              column: 2
            },
            end: {
              line: 81,
              column: 3
            }
          },
          loc: {
            start: {
              line: 81,
              column: 25
            },
            end: {
              line: 85,
              column: 3
            }
          },
          line: 81
        },
        "8": {
          name: "(anonymous_8)",
          decl: {
            start: {
              line: 87,
              column: 2
            },
            end: {
              line: 87,
              column: 3
            }
          },
          loc: {
            start: {
              line: 87,
              column: 11
            },
            end: {
              line: 103,
              column: 3
            }
          },
          line: 87
        },
        "9": {
          name: "(anonymous_9)",
          decl: {
            start: {
              line: 106,
              column: 2
            },
            end: {
              line: 106,
              column: 3
            }
          },
          loc: {
            start: {
              line: 106,
              column: 27
            },
            end: {
              line: 109,
              column: 3
            }
          },
          line: 106
        },
        "10": {
          name: "(anonymous_10)",
          decl: {
            start: {
              line: 111,
              column: 2
            },
            end: {
              line: 111,
              column: 3
            }
          },
          loc: {
            start: {
              line: 111,
              column: 21
            },
            end: {
              line: 115,
              column: 3
            }
          },
          line: 111
        },
        "11": {
          name: "(anonymous_11)",
          decl: {
            start: {
              line: 117,
              column: 2
            },
            end: {
              line: 117,
              column: 3
            }
          },
          loc: {
            start: {
              line: 117,
              column: 43
            },
            end: {
              line: 142,
              column: 3
            }
          },
          line: 117
        },
        "12": {
          name: "(anonymous_12)",
          decl: {
            start: {
              line: 144,
              column: 2
            },
            end: {
              line: 144,
              column: 3
            }
          },
          loc: {
            start: {
              line: 144,
              column: 22
            },
            end: {
              line: 146,
              column: 3
            }
          },
          line: 144
        },
        "13": {
          name: "(anonymous_13)",
          decl: {
            start: {
              line: 148,
              column: 2
            },
            end: {
              line: 148,
              column: 3
            }
          },
          loc: {
            start: {
              line: 148,
              column: 32
            },
            end: {
              line: 150,
              column: 3
            }
          },
          line: 148
        },
        "14": {
          name: "(anonymous_14)",
          decl: {
            start: {
              line: 152,
              column: 2
            },
            end: {
              line: 152,
              column: 3
            }
          },
          loc: {
            start: {
              line: 152,
              column: 50
            },
            end: {
              line: 160,
              column: 3
            }
          },
          line: 152
        }
      },
      branchMap: {
        "0": {
          loc: {
            start: {
              line: 98,
              column: 4
            },
            end: {
              line: 100,
              column: 5
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 98,
              column: 4
            },
            end: {
              line: 100,
              column: 5
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 98
        },
        "1": {
          loc: {
            start: {
              line: 120,
              column: 4
            },
            end: {
              line: 122,
              column: 5
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 120,
              column: 4
            },
            end: {
              line: 122,
              column: 5
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 120
        },
        "2": {
          loc: {
            start: {
              line: 126,
              column: 4
            },
            end: {
              line: 129,
              column: 5
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 126,
              column: 4
            },
            end: {
              line: 129,
              column: 5
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 126
        },
        "3": {
          loc: {
            start: {
              line: 131,
              column: 4
            },
            end: {
              line: 134,
              column: 5
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 131,
              column: 4
            },
            end: {
              line: 134,
              column: 5
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 131
        },
        "4": {
          loc: {
            start: {
              line: 136,
              column: 4
            },
            end: {
              line: 139,
              column: 5
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 136,
              column: 4
            },
            end: {
              line: 139,
              column: 5
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 136
        },
        "5": {
          loc: {
            start: {
              line: 145,
              column: 11
            },
            end: {
              line: 145,
              column: 107
            }
          },
          type: "cond-expr",
          locations: [{
            start: {
              line: 145,
              column: 35
            },
            end: {
              line: 145,
              column: 101
            }
          }, {
            start: {
              line: 145,
              column: 104
            },
            end: {
              line: 145,
              column: 107
            }
          }],
          line: 145
        },
        "6": {
          loc: {
            start: {
              line: 153,
              column: 4
            },
            end: {
              line: 157,
              column: 5
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 153,
              column: 4
            },
            end: {
              line: 157,
              column: 5
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 153
        }
      },
      s: {
        "0": 0,
        "1": 0,
        "2": 0,
        "3": 0,
        "4": 0,
        "5": 0,
        "6": 0,
        "7": 0,
        "8": 0,
        "9": 0,
        "10": 0,
        "11": 0,
        "12": 0,
        "13": 0,
        "14": 0,
        "15": 0,
        "16": 0,
        "17": 0,
        "18": 0,
        "19": 0,
        "20": 0,
        "21": 0,
        "22": 0,
        "23": 0,
        "24": 0,
        "25": 0,
        "26": 0,
        "27": 0,
        "28": 0,
        "29": 0,
        "30": 0,
        "31": 0,
        "32": 0,
        "33": 0,
        "34": 0,
        "35": 0,
        "36": 0,
        "37": 0,
        "38": 0,
        "39": 0,
        "40": 0,
        "41": 0,
        "42": 0,
        "43": 0,
        "44": 0,
        "45": 0,
        "46": 0,
        "47": 0,
        "48": 0
      },
      f: {
        "0": 0,
        "1": 0,
        "2": 0,
        "3": 0,
        "4": 0,
        "5": 0,
        "6": 0,
        "7": 0,
        "8": 0,
        "9": 0,
        "10": 0,
        "11": 0,
        "12": 0,
        "13": 0,
        "14": 0
      },
      b: {
        "0": [0, 0],
        "1": [0, 0],
        "2": [0, 0],
        "3": [0, 0],
        "4": [0, 0],
        "5": [0, 0],
        "6": [0, 0]
      },
      inputSourceMap: {
        version: 3,
        sources: ["/Users/lukaszholeczek/Projekty/CoreUI/mrholek/coreui-pro/js/src/util/template-factory.js"],
        sourcesContent: ["/**\n * --------------------------------------------------------------------------\n * CoreUI util/template-factory.js\n * Licensed under MIT (https://github.com/coreui/coreui/blob/main/LICENSE)\n *\n * This is a modified version of the Bootstrap's util/template-factory.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport SelectorEngine from '../dom/selector-engine.js'\nimport Config from './config.js'\nimport { DefaultAllowlist, sanitizeHtml } from './sanitizer.js'\nimport { execute, getElement, isElement } from './index.js'\n\n/**\n * Constants\n */\n\nconst NAME = 'TemplateFactory'\n\nconst Default = {\n  allowList: DefaultAllowlist,\n  content: {}, // { selector : text ,  selector2 : text2 , }\n  extraClass: '',\n  html: false,\n  sanitize: true,\n  sanitizeFn: null,\n  template: '<div></div>'\n}\n\nconst DefaultType = {\n  allowList: 'object',\n  content: 'object',\n  extraClass: '(string|function)',\n  html: 'boolean',\n  sanitize: 'boolean',\n  sanitizeFn: '(null|function)',\n  template: 'string'\n}\n\nconst DefaultContentType = {\n  entry: '(string|element|function|null)',\n  selector: '(string|element)'\n}\n\n/**\n * Class definition\n */\n\nclass TemplateFactory extends Config {\n  constructor(config) {\n    super()\n    this._config = this._getConfig(config)\n  }\n\n  // Getters\n  static get Default() {\n    return Default\n  }\n\n  static get DefaultType() {\n    return DefaultType\n  }\n\n  static get NAME() {\n    return NAME\n  }\n\n  // Public\n  getContent() {\n    return Object.values(this._config.content)\n      .map(config => this._resolvePossibleFunction(config))\n      .filter(Boolean)\n  }\n\n  hasContent() {\n    return this.getContent().length > 0\n  }\n\n  changeContent(content) {\n    this._checkContent(content)\n    this._config.content = { ...this._config.content, ...content }\n    return this\n  }\n\n  toHtml() {\n    const templateWrapper = document.createElement('div')\n    templateWrapper.innerHTML = this._maybeSanitize(this._config.template)\n\n    for (const [selector, text] of Object.entries(this._config.content)) {\n      this._setContent(templateWrapper, text, selector)\n    }\n\n    const template = templateWrapper.children[0]\n    const extraClass = this._resolvePossibleFunction(this._config.extraClass)\n\n    if (extraClass) {\n      template.classList.add(...extraClass.split(' '))\n    }\n\n    return template\n  }\n\n  // Private\n  _typeCheckConfig(config) {\n    super._typeCheckConfig(config)\n    this._checkContent(config.content)\n  }\n\n  _checkContent(arg) {\n    for (const [selector, content] of Object.entries(arg)) {\n      super._typeCheckConfig({ selector, entry: content }, DefaultContentType)\n    }\n  }\n\n  _setContent(template, content, selector) {\n    const templateElement = SelectorEngine.findOne(selector, template)\n\n    if (!templateElement) {\n      return\n    }\n\n    content = this._resolvePossibleFunction(content)\n\n    if (!content) {\n      templateElement.remove()\n      return\n    }\n\n    if (isElement(content)) {\n      this._putElementInTemplate(getElement(content), templateElement)\n      return\n    }\n\n    if (this._config.html) {\n      templateElement.innerHTML = this._maybeSanitize(content)\n      return\n    }\n\n    templateElement.textContent = content\n  }\n\n  _maybeSanitize(arg) {\n    return this._config.sanitize ? sanitizeHtml(arg, this._config.allowList, this._config.sanitizeFn) : arg\n  }\n\n  _resolvePossibleFunction(arg) {\n    return execute(arg, [undefined, this])\n  }\n\n  _putElementInTemplate(element, templateElement) {\n    if (this._config.html) {\n      templateElement.innerHTML = ''\n      templateElement.append(element)\n      return\n    }\n\n    templateElement.textContent = element.textContent\n  }\n}\n\nexport default TemplateFactory\n"],
        names: [],
        mappings: "AAAA,CAAC,CAAC;AACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5E,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzE,CAAC;AACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CA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,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC;;AAEF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC;;AAEF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAEzE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrD,CAAC,CAAC,CAAC,CAAC;;AAEJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC;;AAEF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,CAAC,CAAC;;AAEF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrrE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC,CAAC;;AAEJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAEnD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC,CAAC;;AAEJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC,CAAC;;AAEJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC,CAAC;;AAEJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxC,CAAC,CAAC;;AAEF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACthC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzC,CAAC,CAAC;;AAEF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC,CAAC;;AAEJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpD,CAAC,CAAC;AACF;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;",
        file: undefined
      },
      _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
      hash: "d9e4a41cfccceeb408a3468c6a3ae1fc43398434"
    };
    var coverage = global[gcv] || (global[gcv] = {});
    if (!coverage[path] || coverage[path].hash !== hash) {
      coverage[path] = coverageData;
    }
    var actualCoverage = coverage[path];
    {
      // @ts-ignore
      cov_1f9d5k6bp2 = function () {
        return actualCoverage;
      };
    }
    return actualCoverage;
  }
  cov_1f9d5k6bp2(); /**
                    * --------------------------------------------------------------------------
                    * CoreUI util/template-factory.js
                    * Licensed under MIT (https://github.com/coreui/coreui/blob/main/LICENSE)
                    *
                    * This is a modified version of the Bootstrap's util/template-factory.js
                    * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
                    * --------------------------------------------------------------------------
                    */
  const NAME$2 = (cov_1f9d5k6bp2().s[0]++, 'TemplateFactory');
  const Default$2 = (cov_1f9d5k6bp2().s[1]++, {
    allowList: DefaultAllowlist,
    content: {},
    // { selector : text ,  selector2 : text2 , }
    extraClass: '',
    html: false,
    sanitize: true,
    sanitizeFn: null,
    template: '<div></div>'
  });
  const DefaultType$2 = (cov_1f9d5k6bp2().s[2]++, {
    allowList: 'object',
    content: 'object',
    extraClass: '(string|function)',
    html: 'boolean',
    sanitize: 'boolean',
    sanitizeFn: '(null|function)',
    template: 'string'
  });
  const DefaultContentType = (cov_1f9d5k6bp2().s[3]++, {
    entry: '(string|element|function|null)',
    selector: '(string|element)'
  }); /**
      * Class definition
      */
  class TemplateFactory extends Config {
    constructor(config) {
      cov_1f9d5k6bp2().f[0]++;
      cov_1f9d5k6bp2().s[4]++;
      super();
      cov_1f9d5k6bp2().s[5]++;
      this._config = this._getConfig(config);
    } // Getters
    static get Default() {
      cov_1f9d5k6bp2().f[1]++;
      cov_1f9d5k6bp2().s[6]++;
      return Default$2;
    }
    static get DefaultType() {
      cov_1f9d5k6bp2().f[2]++;
      cov_1f9d5k6bp2().s[7]++;
      return DefaultType$2;
    }
    static get NAME() {
      cov_1f9d5k6bp2().f[3]++;
      cov_1f9d5k6bp2().s[8]++;
      return NAME$2;
    } // Public
    getContent() {
      cov_1f9d5k6bp2().f[4]++;
      cov_1f9d5k6bp2().s[9]++;
      return Object.values(this._config.content).map(config => {
        cov_1f9d5k6bp2().f[5]++;
        cov_1f9d5k6bp2().s[10]++;
        return this._resolvePossibleFunction(config);
      }).filter(Boolean);
    }
    hasContent() {
      cov_1f9d5k6bp2().f[6]++;
      cov_1f9d5k6bp2().s[11]++;
      return this.getContent().length > 0;
    }
    changeContent(content) {
      cov_1f9d5k6bp2().f[7]++;
      cov_1f9d5k6bp2().s[12]++;
      this._checkContent(content);
      cov_1f9d5k6bp2().s[13]++;
      this._config.content = {
        ...this._config.content,
        ...content
      };
      cov_1f9d5k6bp2().s[14]++;
      return this;
    }
    toHtml() {
      cov_1f9d5k6bp2().f[8]++;
      const templateWrapper = (cov_1f9d5k6bp2().s[15]++, document.createElement('div'));
      cov_1f9d5k6bp2().s[16]++;
      templateWrapper.innerHTML = this._maybeSanitize(this._config.template);
      cov_1f9d5k6bp2().s[17]++;
      for (const [selector, text] of Object.entries(this._config.content)) {
        cov_1f9d5k6bp2().s[18]++;
        this._setContent(templateWrapper, text, selector);
      }
      const template = (cov_1f9d5k6bp2().s[19]++, templateWrapper.children[0]);
      const extraClass = (cov_1f9d5k6bp2().s[20]++, this._resolvePossibleFunction(this._config.extraClass));
      cov_1f9d5k6bp2().s[21]++;
      if (extraClass) {
        cov_1f9d5k6bp2().b[0][0]++;
        cov_1f9d5k6bp2().s[22]++;
        template.classList.add(...extraClass.split(' '));
      } else {
        cov_1f9d5k6bp2().b[0][1]++;
      }
      cov_1f9d5k6bp2().s[23]++;
      return template;
    } // Private
    _typeCheckConfig(config) {
      cov_1f9d5k6bp2().f[9]++;
      cov_1f9d5k6bp2().s[24]++;
      super._typeCheckConfig(config);
      cov_1f9d5k6bp2().s[25]++;
      this._checkContent(config.content);
    }
    _checkContent(arg) {
      cov_1f9d5k6bp2().f[10]++;
      cov_1f9d5k6bp2().s[26]++;
      for (const [selector, content] of Object.entries(arg)) {
        cov_1f9d5k6bp2().s[27]++;
        super._typeCheckConfig({
          selector,
          entry: content
        }, DefaultContentType);
      }
    }
    _setContent(template, content, selector) {
      cov_1f9d5k6bp2().f[11]++;
      const templateElement = (cov_1f9d5k6bp2().s[28]++, SelectorEngine.findOne(selector, template));
      cov_1f9d5k6bp2().s[29]++;
      if (!templateElement) {
        cov_1f9d5k6bp2().b[1][0]++;
        cov_1f9d5k6bp2().s[30]++;
        return;
      } else {
        cov_1f9d5k6bp2().b[1][1]++;
      }
      cov_1f9d5k6bp2().s[31]++;
      content = this._resolvePossibleFunction(content);
      cov_1f9d5k6bp2().s[32]++;
      if (!content) {
        cov_1f9d5k6bp2().b[2][0]++;
        cov_1f9d5k6bp2().s[33]++;
        templateElement.remove();
        cov_1f9d5k6bp2().s[34]++;
        return;
      } else {
        cov_1f9d5k6bp2().b[2][1]++;
      }
      cov_1f9d5k6bp2().s[35]++;
      if (isElement$1(content)) {
        cov_1f9d5k6bp2().b[3][0]++;
        cov_1f9d5k6bp2().s[36]++;
        this._putElementInTemplate(getElement(content), templateElement);
        cov_1f9d5k6bp2().s[37]++;
        return;
      } else {
        cov_1f9d5k6bp2().b[3][1]++;
      }
      cov_1f9d5k6bp2().s[38]++;
      if (this._config.html) {
        cov_1f9d5k6bp2().b[4][0]++;
        cov_1f9d5k6bp2().s[39]++;
        templateElement.innerHTML = this._maybeSanitize(content);
        cov_1f9d5k6bp2().s[40]++;
        return;
      } else {
        cov_1f9d5k6bp2().b[4][1]++;
      }
      cov_1f9d5k6bp2().s[41]++;
      templateElement.textContent = content;
    }
    _maybeSanitize(arg) {
      cov_1f9d5k6bp2().f[12]++;
      cov_1f9d5k6bp2().s[42]++;
      return this._config.sanitize ? (cov_1f9d5k6bp2().b[5][0]++, sanitizeHtml(arg, this._config.allowList, this._config.sanitizeFn)) : (cov_1f9d5k6bp2().b[5][1]++, arg);
    }
    _resolvePossibleFunction(arg) {
      cov_1f9d5k6bp2().f[13]++;
      cov_1f9d5k6bp2().s[43]++;
      return execute(arg, [undefined, this]);
    }
    _putElementInTemplate(element, templateElement) {
      cov_1f9d5k6bp2().f[14]++;
      cov_1f9d5k6bp2().s[44]++;
      if (this._config.html) {
        cov_1f9d5k6bp2().b[6][0]++;
        cov_1f9d5k6bp2().s[45]++;
        templateElement.innerHTML = '';
        cov_1f9d5k6bp2().s[46]++;
        templateElement.append(element);
        cov_1f9d5k6bp2().s[47]++;
        return;
      } else {
        cov_1f9d5k6bp2().b[6][1]++;
      }
      cov_1f9d5k6bp2().s[48]++;
      templateElement.textContent = element.textContent;
    }
  }

  function cov_kjx38yrlb() {
    var path = "/Users/lukaszholeczek/Projekty/CoreUI/mrholek/coreui-pro/js/src/tooltip.js";
    var hash = "6e70b2ef282f6cf29656e210a0ac7bac910a8ce8";
    var global = new Function("return this")();
    var gcv = "__coverage__";
    var coverageData = {
      path: "/Users/lukaszholeczek/Projekty/CoreUI/mrholek/coreui-pro/js/src/tooltip.js",
      statementMap: {
        "0": {
          start: {
            line: 25,
            column: 13
          },
          end: {
            line: 25,
            column: 22
          }
        },
        "1": {
          start: {
            line: 26,
            column: 30
          },
          end: {
            line: 26,
            column: 78
          }
        },
        "2": {
          start: {
            line: 28,
            column: 24
          },
          end: {
            line: 28,
            column: 30
          }
        },
        "3": {
          start: {
            line: 29,
            column: 25
          },
          end: {
            line: 29,
            column: 32
          }
        },
        "4": {
          start: {
            line: 30,
            column: 24
          },
          end: {
            line: 30,
            column: 30
          }
        },
        "5": {
          start: {
            line: 32,
            column: 31
          },
          end: {
            line: 32,
            column: 47
          }
        },
        "6": {
          start: {
            line: 33,
            column: 23
          },
          end: {
            line: 33,
            column: 45
          }
        },
        "7": {
          start: {
            line: 35,
            column: 25
          },
          end: {
            line: 35,
            column: 44
          }
        },
        "8": {
          start: {
            line: 37,
            column: 22
          },
          end: {
            line: 37,
            column: 29
          }
        },
        "9": {
          start: {
            line: 38,
            column: 22
          },
          end: {
            line: 38,
            column: 29
          }
        },
        "10": {
          start: {
            line: 39,
            column: 22
          },
          end: {
            line: 39,
            column: 29
          }
        },
        "11": {
          start: {
            line: 40,
            column: 23
          },
          end: {
            line: 40,
            column: 31
          }
        },
        "12": {
          start: {
            line: 42,
            column: 19
          },
          end: {
            line: 42,
            column: 25
          }
        },
        "13": {
          start: {
            line: 43,
            column: 21
          },
          end: {
            line: 43,
            column: 29
          }
        },
        "14": {
          start: {
            line: 44,
            column: 19
          },
          end: {
            line: 44,
            column: 25
          }
        },
        "15": {
          start: {
            line: 45,
            column: 20
          },
          end: {
            line: 45,
            column: 27
          }
        },
        "16": {
          start: {
            line: 46,
            column: 23
          },
          end: {
            line: 46,
            column: 33
          }
        },
        "17": {
          start: {
            line: 47,
            column: 20
          },
          end: {
            line: 47,
            column: 27
          }
        },
        "18": {
          start: {
            line: 48,
            column: 22
          },
          end: {
            line: 48,
            column: 31
          }
        },
        "19": {
          start: {
            line: 49,
            column: 23
          },
          end: {
            line: 49,
            column: 33
          }
        },
        "20": {
          start: {
            line: 50,
            column: 25
          },
          end: {
            line: 50,
            column: 37
          }
        },
        "21": {
          start: {
            line: 51,
            column: 25
          },
          end: {
            line: 51,
            column: 37
          }
        },
        "22": {
          start: {
            line: 53,
            column: 22
          },
          end: {
            line: 59,
            column: 1
          }
        },
        "23": {
          start: {
            line: 61,
            column: 16
          },
          end: {
            line: 82,
            column: 1
          }
        },
        "24": {
          start: {
            line: 84,
            column: 20
          },
          end: {
            line: 102,
            column: 1
          }
        },
        "25": {
          start: {
            line: 110,
            column: 4
          },
          end: {
            line: 112,
            column: 5
          }
        },
        "26": {
          start: {
            line: 111,
            column: 6
          },
          end: {
            line: 111,
            column: 89
          }
        },
        "27": {
          start: {
            line: 114,
            column: 4
          },
          end: {
            line: 114,
            column: 26
          }
        },
        "28": {
          start: {
            line: 117,
            column: 4
          },
          end: {
            line: 117,
            column: 26
          }
        },
        "29": {
          start: {
            line: 118,
            column: 4
          },
          end: {
            line: 118,
            column: 21
          }
        },
        "30": {
          start: {
            line: 119,
            column: 4
          },
          end: {
            line: 119,
            column: 26
          }
        },
        "31": {
          start: {
            line: 120,
            column: 4
          },
          end: {
            line: 120,
            column: 28
          }
        },
        "32": {
          start: {
            line: 121,
            column: 4
          },
          end: {
            line: 121,
            column: 23
          }
        },
        "33": {
          start: {
            line: 122,
            column: 4
          },
          end: {
            line: 122,
            column: 32
          }
        },
        "34": {
          start: {
            line: 123,
            column: 4
          },
          end: {
            line: 123,
            column: 27
          }
        },
        "35": {
          start: {
            line: 126,
            column: 4
          },
          end: {
            line: 126,
            column: 19
          }
        },
        "36": {
          start: {
            line: 128,
            column: 4
          },
          end: {
            line: 128,
            column: 24
          }
        },
        "37": {
          start: {
            line: 130,
            column: 4
          },
          end: {
            line: 132,
            column: 5
          }
        },
        "38": {
          start: {
            line: 131,
            column: 6
          },
          end: {
            line: 131,
            column: 22
          }
        },
        "39": {
          start: {
            line: 137,
            column: 4
          },
          end: {
            line: 137,
            column: 18
          }
        },
        "40": {
          start: {
            line: 141,
            column: 4
          },
          end: {
            line: 141,
            column: 22
          }
        },
        "41": {
          start: {
            line: 145,
            column: 4
          },
          end: {
            line: 145,
            column: 15
          }
        },
        "42": {
          start: {
            line: 150,
            column: 4
          },
          end: {
            line: 150,
            column: 26
          }
        },
        "43": {
          start: {
            line: 154,
            column: 4
          },
          end: {
            line: 154,
            column: 27
          }
        },
        "44": {
          start: {
            line: 158,
            column: 4
          },
          end: {
            line: 158,
            column: 38
          }
        },
        "45": {
          start: {
            line: 162,
            column: 4
          },
          end: {
            line: 164,
            column: 5
          }
        },
        "46": {
          start: {
            line: 163,
            column: 6
          },
          end: {
            line: 163,
            column: 12
          }
        },
        "47": {
          start: {
            line: 166,
            column: 4
          },
          end: {
            line: 166,
            column: 58
          }
        },
        "48": {
          start: {
            line: 167,
            column: 4
          },
          end: {
            line: 170,
            column: 5
          }
        },
        "49": {
          start: {
            line: 168,
            column: 6
          },
          end: {
            line: 168,
            column: 19
          }
        },
        "50": {
          start: {
            line: 169,
            column: 6
          },
          end: {
            line: 169,
            column: 12
          }
        },
        "51": {
          start: {
            line: 172,
            column: 4
          },
          end: {
            line: 172,
            column: 17
          }
        },
        "52": {
          start: {
            line: 176,
            column: 4
          },
          end: {
            line: 176,
            column: 31
          }
        },
        "53": {
          start: {
            line: 178,
            column: 4
          },
          end: {
            line: 178,
            column: 101
          }
        },
        "54": {
          start: {
            line: 180,
            column: 4
          },
          end: {
            line: 182,
            column: 5
          }
        },
        "55": {
          start: {
            line: 181,
            column: 6
          },
          end: {
            line: 181,
            column: 99
          }
        },
        "56": {
          start: {
            line: 184,
            column: 4
          },
          end: {
            line: 184,
            column: 25
          }
        },
        "57": {
          start: {
            line: 185,
            column: 4
          },
          end: {
            line: 185,
            column: 19
          }
        },
        "58": {
          start: {
            line: 189,
            column: 4
          },
          end: {
            line: 191,
            column: 5
          }
        },
        "59": {
          start: {
            line: 190,
            column: 6
          },
          end: {
            line: 190,
            column: 60
          }
        },
        "60": {
          start: {
            line: 193,
            column: 4
          },
          end: {
            line: 195,
            column: 5
          }
        },
        "61": {
          start: {
            line: 194,
            column: 6
          },
          end: {
            line: 194,
            column: 12
          }
        },
        "62": {
          start: {
            line: 197,
            column: 22
          },
          end: {
            line: 197,
            column: 97
          }
        },
        "63": {
          start: {
            line: 198,
            column: 23
          },
          end: {
            line: 198,
            column: 52
          }
        },
        "64": {
          start: {
            line: 199,
            column: 23
          },
          end: {
            line: 199,
            column: 106
          }
        },
        "65": {
          start: {
            line: 201,
            column: 4
          },
          end: {
            line: 203,
            column: 5
          }
        },
        "66": {
          start: {
            line: 202,
            column: 6
          },
          end: {
            line: 202,
            column: 12
          }
        },
        "67": {
          start: {
            line: 206,
            column: 4
          },
          end: {
            line: 206,
            column: 25
          }
        },
        "68": {
          start: {
            line: 208,
            column: 16
          },
          end: {
            line: 208,
            column: 37
          }
        },
        "69": {
          start: {
            line: 210,
            column: 4
          },
          end: {
            line: 210,
            column: 74
          }
        },
        "70": {
          start: {
            line: 212,
            column: 26
          },
          end: {
            line: 212,
            column: 38
          }
        },
        "71": {
          start: {
            line: 214,
            column: 4
          },
          end: {
            line: 217,
            column: 5
          }
        },
        "72": {
          start: {
            line: 215,
            column: 6
          },
          end: {
            line: 215,
            column: 27
          }
        },
        "73": {
          start: {
            line: 216,
            column: 6
          },
          end: {
            line: 216,
            column: 85
          }
        },
        "74": {
          start: {
            line: 219,
            column: 4
          },
          end: {
            line: 219,
            column: 42
          }
        },
        "75": {
          start: {
            line: 221,
            column: 4
          },
          end: {
            line: 221,
            column: 38
          }
        },
        "76": {
          start: {
            line: 227,
            column: 4
          },
          end: {
            line: 231,
            column: 5
          }
        },
        "77": {
          start: {
            line: 228,
            column: 6
          },
          end: {
            line: 230,
            column: 7
          }
        },
        "78": {
          start: {
            line: 229,
            column: 8
          },
          end: {
            line: 229,
            column: 51
          }
        },
        "79": {
          start: {
            line: 233,
            column: 21
          },
          end: {
            line: 241,
            column: 5
          }
        },
        "80": {
          start: {
            line: 234,
            column: 6
          },
          end: {
            line: 234,
            column: 82
          }
        },
        "81": {
          start: {
            line: 236,
            column: 6
          },
          end: {
            line: 238,
            column: 7
          }
        },
        "82": {
          start: {
            line: 237,
            column: 8
          },
          end: {
            line: 237,
            column: 21
          }
        },
        "83": {
          start: {
            line: 240,
            column: 6
          },
          end: {
            line: 240,
            column: 29
          }
        },
        "84": {
          start: {
            line: 243,
            column: 4
          },
          end: {
            line: 243,
            column: 63
          }
        },
        "85": {
          start: {
            line: 247,
            column: 4
          },
          end: {
            line: 249,
            column: 5
          }
        },
        "86": {
          start: {
            line: 248,
            column: 6
          },
          end: {
            line: 248,
            column: 12
          }
        },
        "87": {
          start: {
            line: 251,
            column: 22
          },
          end: {
            line: 251,
            column: 97
          }
        },
        "88": {
          start: {
            line: 252,
            column: 4
          },
          end: {
            line: 254,
            column: 5
          }
        },
        "89": {
          start: {
            line: 253,
            column: 6
          },
          end: {
            line: 253,
            column: 12
          }
        },
        "90": {
          start: {
            line: 256,
            column: 16
          },
          end: {
            line: 256,
            column: 37
          }
        },
        "91": {
          start: {
            line: 257,
            column: 4
          },
          end: {
            line: 257,
            column: 41
          }
        },
        "92": {
          start: {
            line: 261,
            column: 4
          },
          end: {
            line: 265,
            column: 5
          }
        },
        "93": {
          start: {
            line: 262,
            column: 6
          },
          end: {
            line: 264,
            column: 7
          }
        },
        "94": {
          start: {
            line: 263,
            column: 8
          },
          end: {
            line: 263,
            column: 52
          }
        },
        "95": {
          start: {
            line: 267,
            column: 4
          },
          end: {
            line: 267,
            column: 46
          }
        },
        "96": {
          start: {
            line: 268,
            column: 4
          },
          end: {
            line: 268,
            column: 46
          }
        },
        "97": {
          start: {
            line: 269,
            column: 4
          },
          end: {
            line: 269,
            column: 46
          }
        },
        "98": {
          start: {
            line: 270,
            column: 4
          },
          end: {
            line: 270,
            column: 26
          }
        },
        "99": {
          start: {
            line: 272,
            column: 21
          },
          end: {
            line: 283,
            column: 5
          }
        },
        "100": {
          start: {
            line: 273,
            column: 6
          },
          end: {
            line: 275,
            column: 7
          }
        },
        "101": {
          start: {
            line: 274,
            column: 8
          },
          end: {
            line: 274,
            column: 14
          }
        },
        "102": {
          start: {
            line: 277,
            column: 6
          },
          end: {
            line: 279,
            column: 7
          }
        },
        "103": {
          start: {
            line: 278,
            column: 8
          },
          end: {
            line: 278,
            column: 29
          }
        },
        "104": {
          start: {
            line: 281,
            column: 6
          },
          end: {
            line: 281,
            column: 55
          }
        },
        "105": {
          start: {
            line: 282,
            column: 6
          },
          end: {
            line: 282,
            column: 83
          }
        },
        "106": {
          start: {
            line: 285,
            column: 4
          },
          end: {
            line: 285,
            column: 63
          }
        },
        "107": {
          start: {
            line: 289,
            column: 4
          },
          end: {
            line: 291,
            column: 5
          }
        },
        "108": {
          start: {
            line: 290,
            column: 6
          },
          end: {
            line: 290,
            column: 27
          }
        },
        "109": {
          start: {
            line: 296,
            column: 4
          },
          end: {
            line: 296,
            column: 36
          }
        },
        "110": {
          start: {
            line: 300,
            column: 4
          },
          end: {
            line: 302,
            column: 5
          }
        },
        "111": {
          start: {
            line: 301,
            column: 6
          },
          end: {
            line: 301,
            column: 90
          }
        },
        "112": {
          start: {
            line: 304,
            column: 4
          },
          end: {
            line: 304,
            column: 19
          }
        },
        "113": {
          start: {
            line: 308,
            column: 16
          },
          end: {
            line: 308,
            column: 58
          }
        },
        "114": {
          start: {
            line: 311,
            column: 4
          },
          end: {
            line: 313,
            column: 5
          }
        },
        "115": {
          start: {
            line: 312,
            column: 6
          },
          end: {
            line: 312,
            column: 17
          }
        },
        "116": {
          start: {
            line: 315,
            column: 4
          },
          end: {
            line: 315,
            column: 58
          }
        },
        "117": {
          start: {
            line: 317,
            column: 4
          },
          end: {
            line: 317,
            column: 57
          }
        },
        "118": {
          start: {
            line: 319,
            column: 18
          },
          end: {
            line: 319,
            column: 58
          }
        },
        "119": {
          start: {
            line: 321,
            column: 4
          },
          end: {
            line: 321,
            column: 33
          }
        },
        "120": {
          start: {
            line: 323,
            column: 4
          },
          end: {
            line: 325,
            column: 5
          }
        },
        "121": {
          start: {
            line: 324,
            column: 6
          },
          end: {
            line: 324,
            column: 40
          }
        },
        "122": {
          start: {
            line: 327,
            column: 4
          },
          end: {
            line: 327,
            column: 14
          }
        },
        "123": {
          start: {
            line: 331,
            column: 4
          },
          end: {
            line: 331,
            column: 30
          }
        },
        "124": {
          start: {
            line: 332,
            column: 4
          },
          end: {
            line: 335,
            column: 5
          }
        },
        "125": {
          start: {
            line: 333,
            column: 6
          },
          end: {
            line: 333,
            column: 27
          }
        },
        "126": {
          start: {
            line: 334,
            column: 6
          },
          end: {
            line: 334,
            column: 17
          }
        },
        "127": {
          start: {
            line: 339,
            column: 4
          },
          end: {
            line: 349,
            column: 5
          }
        },
        "128": {
          start: {
            line: 340,
            column: 6
          },
          end: {
            line: 340,
            column: 50
          }
        },
        "129": {
          start: {
            line: 342,
            column: 6
          },
          end: {
            line: 348,
            column: 8
          }
        },
        "130": {
          start: {
            line: 351,
            column: 4
          },
          end: {
            line: 351,
            column: 32
          }
        },
        "131": {
          start: {
            line: 355,
            column: 4
          },
          end: {
            line: 357,
            column: 5
          }
        },
        "132": {
          start: {
            line: 361,
            column: 4
          },
          end: {
            line: 361,
            column: 120
          }
        },
        "133": {
          start: {
            line: 366,
            column: 4
          },
          end: {
            line: 366,
            column: 96
          }
        },
        "134": {
          start: {
            line: 370,
            column: 4
          },
          end: {
            line: 370,
            column: 95
          }
        },
        "135": {
          start: {
            line: 374,
            column: 4
          },
          end: {
            line: 374,
            column: 67
          }
        },
        "136": {
          start: {
            line: 378,
            column: 22
          },
          end: {
            line: 378,
            column: 81
          }
        },
        "137": {
          start: {
            line: 379,
            column: 23
          },
          end: {
            line: 379,
            column: 61
          }
        },
        "138": {
          start: {
            line: 380,
            column: 4
          },
          end: {
            line: 380,
            column: 85
          }
        },
        "139": {
          start: {
            line: 384,
            column: 23
          },
          end: {
            line: 384,
            column: 35
          }
        },
        "140": {
          start: {
            line: 386,
            column: 4
          },
          end: {
            line: 388,
            column: 5
          }
        },
        "141": {
          start: {
            line: 387,
            column: 6
          },
          end: {
            line: 387,
            column: 71
          }
        },
        "142": {
          start: {
            line: 387,
            column: 44
          },
          end: {
            line: 387,
            column: 70
          }
        },
        "143": {
          start: {
            line: 390,
            column: 4
          },
          end: {
            line: 392,
            column: 5
          }
        },
        "144": {
          start: {
            line: 391,
            column: 6
          },
          end: {
            line: 391,
            column: 60
          }
        },
        "145": {
          start: {
            line: 391,
            column: 27
          },
          end: {
            line: 391,
            column: 60
          }
        },
        "146": {
          start: {
            line: 394,
            column: 4
          },
          end: {
            line: 394,
            column: 17
          }
        },
        "147": {
          start: {
            line: 398,
            column: 4
          },
          end: {
            line: 398,
            column: 55
          }
        },
        "148": {
          start: {
            line: 402,
            column: 34
          },
          end: {
            line: 440,
            column: 5
          }
        },
        "149": {
          start: {
            line: 436,
            column: 12
          },
          end: {
            line: 436,
            column: 93
          }
        },
        "150": {
          start: {
            line: 442,
            column: 4
          },
          end: {
            line: 445,
            column: 5
          }
        },
        "151": {
          start: {
            line: 449,
            column: 21
          },
          end: {
            line: 449,
            column: 52
          }
        },
        "152": {
          start: {
            line: 451,
            column: 4
          },
          end: {
            line: 478,
            column: 5
          }
        },
        "153": {
          start: {
            line: 452,
            column: 6
          },
          end: {
            line: 477,
            column: 7
          }
        },
        "154": {
          start: {
            line: 453,
            column: 8
          },
          end: {
            line: 456,
            column: 10
          }
        },
        "155": {
          start: {
            line: 454,
            column: 26
          },
          end: {
            line: 454,
            column: 66
          }
        },
        "156": {
          start: {
            line: 455,
            column: 10
          },
          end: {
            line: 455,
            column: 26
          }
        },
        "157": {
          start: {
            line: 457,
            column: 13
          },
          end: {
            line: 477,
            column: 7
          }
        },
        "158": {
          start: {
            line: 458,
            column: 24
          },
          end: {
            line: 460,
            column: 51
          }
        },
        "159": {
          start: {
            line: 461,
            column: 25
          },
          end: {
            line: 463,
            column: 52
          }
        },
        "160": {
          start: {
            line: 465,
            column: 8
          },
          end: {
            line: 469,
            column: 10
          }
        },
        "161": {
          start: {
            line: 466,
            column: 26
          },
          end: {
            line: 466,
            column: 66
          }
        },
        "162": {
          start: {
            line: 467,
            column: 10
          },
          end: {
            line: 467,
            column: 97
          }
        },
        "163": {
          start: {
            line: 468,
            column: 10
          },
          end: {
            line: 468,
            column: 26
          }
        },
        "164": {
          start: {
            line: 470,
            column: 8
          },
          end: {
            line: 476,
            column: 10
          }
        },
        "165": {
          start: {
            line: 471,
            column: 26
          },
          end: {
            line: 471,
            column: 66
          }
        },
        "166": {
          start: {
            line: 472,
            column: 10
          },
          end: {
            line: 473,
            column: 58
          }
        },
        "167": {
          start: {
            line: 475,
            column: 10
          },
          end: {
            line: 475,
            column: 26
          }
        },
        "168": {
          start: {
            line: 480,
            column: 4
          },
          end: {
            line: 484,
            column: 5
          }
        },
        "169": {
          start: {
            line: 481,
            column: 6
          },
          end: {
            line: 483,
            column: 7
          }
        },
        "170": {
          start: {
            line: 482,
            column: 8
          },
          end: {
            line: 482,
            column: 19
          }
        },
        "171": {
          start: {
            line: 486,
            column: 4
          },
          end: {
            line: 486,
            column: 100
          }
        },
        "172": {
          start: {
            line: 490,
            column: 18
          },
          end: {
            line: 490,
            column: 53
          }
        },
        "173": {
          start: {
            line: 492,
            column: 4
          },
          end: {
            line: 494,
            column: 5
          }
        },
        "174": {
          start: {
            line: 493,
            column: 6
          },
          end: {
            line: 493,
            column: 12
          }
        },
        "175": {
          start: {
            line: 496,
            column: 4
          },
          end: {
            line: 498,
            column: 5
          }
        },
        "176": {
          start: {
            line: 497,
            column: 6
          },
          end: {
            line: 497,
            column: 53
          }
        },
        "177": {
          start: {
            line: 500,
            column: 4
          },
          end: {
            line: 500,
            column: 67
          }
        },
        "178": {
          start: {
            line: 501,
            column: 4
          },
          end: {
            line: 501,
            column: 42
          }
        },
        "179": {
          start: {
            line: 505,
            column: 4
          },
          end: {
            line: 508,
            column: 5
          }
        },
        "180": {
          start: {
            line: 506,
            column: 6
          },
          end: {
            line: 506,
            column: 28
          }
        },
        "181": {
          start: {
            line: 507,
            column: 6
          },
          end: {
            line: 507,
            column: 12
          }
        },
        "182": {
          start: {
            line: 510,
            column: 4
          },
          end: {
            line: 510,
            column: 26
          }
        },
        "183": {
          start: {
            line: 512,
            column: 4
          },
          end: {
            line: 516,
            column: 31
          }
        },
        "184": {
          start: {
            line: 513,
            column: 6
          },
          end: {
            line: 515,
            column: 7
          }
        },
        "185": {
          start: {
            line: 514,
            column: 8
          },
          end: {
            line: 514,
            column: 19
          }
        },
        "186": {
          start: {
            line: 520,
            column: 4
          },
          end: {
            line: 522,
            column: 5
          }
        },
        "187": {
          start: {
            line: 521,
            column: 6
          },
          end: {
            line: 521,
            column: 12
          }
        },
        "188": {
          start: {
            line: 524,
            column: 4
          },
          end: {
            line: 524,
            column: 27
          }
        },
        "189": {
          start: {
            line: 526,
            column: 4
          },
          end: {
            line: 530,
            column: 31
          }
        },
        "190": {
          start: {
            line: 527,
            column: 6
          },
          end: {
            line: 529,
            column: 7
          }
        },
        "191": {
          start: {
            line: 528,
            column: 8
          },
          end: {
            line: 528,
            column: 19
          }
        },
        "192": {
          start: {
            line: 534,
            column: 4
          },
          end: {
            line: 534,
            column: 31
          }
        },
        "193": {
          start: {
            line: 535,
            column: 4
          },
          end: {
            line: 535,
            column: 48
          }
        },
        "194": {
          start: {
            line: 539,
            column: 4
          },
          end: {
            line: 539,
            column: 60
          }
        },
        "195": {
          start: {
            line: 543,
            column: 27
          },
          end: {
            line: 543,
            column: 71
          }
        },
        "196": {
          start: {
            line: 545,
            column: 4
          },
          end: {
            line: 549,
            column: 5
          }
        },
        "197": {
          start: {
            line: 546,
            column: 6
          },
          end: {
            line: 548,
            column: 7
          }
        },
        "198": {
          start: {
            line: 547,
            column: 8
          },
          end: {
            line: 547,
            column: 44
          }
        },
        "199": {
          start: {
            line: 551,
            column: 4
          },
          end: {
            line: 554,
            column: 5
          }
        },
        "200": {
          start: {
            line: 555,
            column: 4
          },
          end: {
            line: 555,
            column: 41
          }
        },
        "201": {
          start: {
            line: 556,
            column: 4
          },
          end: {
            line: 556,
            column: 43
          }
        },
        "202": {
          start: {
            line: 557,
            column: 4
          },
          end: {
            line: 557,
            column: 33
          }
        },
        "203": {
          start: {
            line: 558,
            column: 4
          },
          end: {
            line: 558,
            column: 17
          }
        },
        "204": {
          start: {
            line: 562,
            column: 4
          },
          end: {
            line: 562,
            column: 96
          }
        },
        "205": {
          start: {
            line: 564,
            column: 4
          },
          end: {
            line: 569,
            column: 5
          }
        },
        "206": {
          start: {
            line: 565,
            column: 6
          },
          end: {
            line: 568,
            column: 7
          }
        },
        "207": {
          start: {
            line: 571,
            column: 4
          },
          end: {
            line: 573,
            column: 5
          }
        },
        "208": {
          start: {
            line: 572,
            column: 6
          },
          end: {
            line: 572,
            column: 44
          }
        },
        "209": {
          start: {
            line: 575,
            column: 4
          },
          end: {
            line: 577,
            column: 5
          }
        },
        "210": {
          start: {
            line: 576,
            column: 6
          },
          end: {
            line: 576,
            column: 48
          }
        },
        "211": {
          start: {
            line: 579,
            column: 4
          },
          end: {
            line: 579,
            column: 17
          }
        },
        "212": {
          start: {
            line: 583,
            column: 19
          },
          end: {
            line: 583,
            column: 21
          }
        },
        "213": {
          start: {
            line: 585,
            column: 4
          },
          end: {
            line: 589,
            column: 5
          }
        },
        "214": {
          start: {
            line: 586,
            column: 6
          },
          end: {
            line: 588,
            column: 7
          }
        },
        "215": {
          start: {
            line: 587,
            column: 8
          },
          end: {
            line: 587,
            column: 27
          }
        },
        "216": {
          start: {
            line: 591,
            column: 4
          },
          end: {
            line: 591,
            column: 27
          }
        },
        "217": {
          start: {
            line: 592,
            column: 4
          },
          end: {
            line: 592,
            column: 29
          }
        },
        "218": {
          start: {
            line: 597,
            column: 4
          },
          end: {
            line: 597,
            column: 17
          }
        },
        "219": {
          start: {
            line: 601,
            column: 4
          },
          end: {
            line: 604,
            column: 5
          }
        },
        "220": {
          start: {
            line: 602,
            column: 6
          },
          end: {
            line: 602,
            column: 28
          }
        },
        "221": {
          start: {
            line: 603,
            column: 6
          },
          end: {
            line: 603,
            column: 25
          }
        },
        "222": {
          start: {
            line: 606,
            column: 4
          },
          end: {
            line: 609,
            column: 5
          }
        },
        "223": {
          start: {
            line: 607,
            column: 6
          },
          end: {
            line: 607,
            column: 23
          }
        },
        "224": {
          start: {
            line: 608,
            column: 6
          },
          end: {
            line: 608,
            column: 21
          }
        },
        "225": {
          start: {
            line: 614,
            column: 4
          },
          end: {
            line: 626,
            column: 6
          }
        },
        "226": {
          start: {
            line: 615,
            column: 19
          },
          end: {
            line: 615,
            column: 60
          }
        },
        "227": {
          start: {
            line: 617,
            column: 6
          },
          end: {
            line: 619,
            column: 7
          }
        },
        "228": {
          start: {
            line: 618,
            column: 8
          },
          end: {
            line: 618,
            column: 14
          }
        },
        "229": {
          start: {
            line: 621,
            column: 6
          },
          end: {
            line: 623,
            column: 7
          }
        },
        "230": {
          start: {
            line: 622,
            column: 8
          },
          end: {
            line: 622,
            column: 58
          }
        },
        "231": {
          start: {
            line: 625,
            column: 6
          },
          end: {
            line: 625,
            column: 20
          }
        },
        "232": {
          start: {
            line: 634,
            column: 0
          },
          end: {
            line: 634,
            column: 27
          }
        }
      },
      fnMap: {
        "0": {
          name: "(anonymous_0)",
          decl: {
            start: {
              line: 109,
              column: 2
            },
            end: {
              line: 109,
              column: 3
            }
          },
          loc: {
            start: {
              line: 109,
              column: 31
            },
            end: {
              line: 133,
              column: 3
            }
          },
          line: 109
        },
        "1": {
          name: "(anonymous_1)",
          decl: {
            start: {
              line: 136,
              column: 2
            },
            end: {
              line: 136,
              column: 3
            }
          },
          loc: {
            start: {
              line: 136,
              column: 23
            },
            end: {
              line: 138,
              column: 3
            }
          },
          line: 136
        },
        "2": {
          name: "(anonymous_2)",
          decl: {
            start: {
              line: 140,
              column: 2
            },
            end: {
              line: 140,
              column: 3
            }
          },
          loc: {
            start: {
              line: 140,
              column: 27
            },
            end: {
              line: 142,
              column: 3
            }
          },
          line: 140
        },
        "3": {
          name: "(anonymous_3)",
          decl: {
            start: {
              line: 144,
              column: 2
            },
            end: {
              line: 144,
              column: 3
            }
          },
          loc: {
            start: {
              line: 144,
              column: 20
            },
            end: {
              line: 146,
              column: 3
            }
          },
          line: 144
        },
        "4": {
          name: "(anonymous_4)",
          decl: {
            start: {
              line: 149,
              column: 2
            },
            end: {
              line: 149,
              column: 3
            }
          },
          loc: {
            start: {
              line: 149,
              column: 11
            },
            end: {
              line: 151,
              column: 3
            }
          },
          line: 149
        },
        "5": {
          name: "(anonymous_5)",
          decl: {
            start: {
              line: 153,
              column: 2
            },
            end: {
              line: 153,
              column: 3
            }
          },
          loc: {
            start: {
              line: 153,
              column: 12
            },
            end: {
              line: 155,
              column: 3
            }
          },
          line: 153
        },
        "6": {
          name: "(anonymous_6)",
          decl: {
            start: {
              line: 157,
              column: 2
            },
            end: {
              line: 157,
              column: 3
            }
          },
          loc: {
            start: {
              line: 157,
              column: 18
            },
            end: {
              line: 159,
              column: 3
            }
          },
          line: 157
        },
        "7": {
          name: "(anonymous_7)",
          decl: {
            start: {
              line: 161,
              column: 2
            },
            end: {
              line: 161,
              column: 3
            }
          },
          loc: {
            start: {
              line: 161,
              column: 11
            },
            end: {
              line: 173,
              column: 3
            }
          },
          line: 161
        },
        "8": {
          name: "(anonymous_8)",
          decl: {
            start: {
              line: 175,
              column: 2
            },
            end: {
              line: 175,
              column: 3
            }
          },
          loc: {
            start: {
              line: 175,
              column: 12
            },
            end: {
              line: 186,
              column: 3
            }
          },
          line: 175
        },
        "9": {
          name: "(anonymous_9)",
          decl: {
            start: {
              line: 188,
              column: 2
            },
            end: {
              line: 188,
              column: 3
            }
          },
          loc: {
            start: {
              line: 188,
              column: 9
            },
            end: {
              line: 244,
              column: 3
            }
          },
          line: 188
        },
        "10": {
          name: "(anonymous_10)",
          decl: {
            start: {
              line: 233,
              column: 21
            },
            end: {
              line: 233,
              column: 22
            }
          },
          loc: {
            start: {
              line: 233,
              column: 27
            },
            end: {
              line: 241,
              column: 5
            }
          },
          line: 233
        },
        "11": {
          name: "(anonymous_11)",
          decl: {
            start: {
              line: 246,
              column: 2
            },
            end: {
              line: 246,
              column: 3
            }
          },
          loc: {
            start: {
              line: 246,
              column: 9
            },
            end: {
              line: 286,
              column: 3
            }
          },
          line: 246
        },
        "12": {
          name: "(anonymous_12)",
          decl: {
            start: {
              line: 272,
              column: 21
            },
            end: {
              line: 272,
              column: 22
            }
          },
          loc: {
            start: {
              line: 272,
              column: 27
            },
            end: {
              line: 283,
              column: 5
            }
          },
          line: 272
        },
        "13": {
          name: "(anonymous_13)",
          decl: {
            start: {
              line: 288,
              column: 2
            },
            end: {
              line: 288,
              column: 3
            }
          },
          loc: {
            start: {
              line: 288,
              column: 11
            },
            end: {
              line: 292,
              column: 3
            }
          },
          line: 288
        },
        "14": {
          name: "(anonymous_14)",
          decl: {
            start: {
              line: 295,
              column: 2
            },
            end: {
              line: 295,
              column: 3
            }
          },
          loc: {
            start: {
              line: 295,
              column: 19
            },
            end: {
              line: 297,
              column: 3
            }
          },
          line: 295
        },
        "15": {
          name: "(anonymous_15)",
          decl: {
            start: {
              line: 299,
              column: 2
            },
            end: {
              line: 299,
              column: 3
            }
          },
          loc: {
            start: {
              line: 299,
              column: 19
            },
            end: {
              line: 305,
              column: 3
            }
          },
          line: 299
        },
        "16": {
          name: "(anonymous_16)",
          decl: {
            start: {
              line: 307,
              column: 2
            },
            end: {
              line: 307,
              column: 3
            }
          },
          loc: {
            start: {
              line: 307,
              column: 29
            },
            end: {
              line: 328,
              column: 3
            }
          },
          line: 307
        },
        "17": {
          name: "(anonymous_17)",
          decl: {
            start: {
              line: 330,
              column: 2
            },
            end: {
              line: 330,
              column: 3
            }
          },
          loc: {
            start: {
              line: 330,
              column: 22
            },
            end: {
              line: 336,
              column: 3
            }
          },
          line: 330
        },
        "18": {
          name: "(anonymous_18)",
          decl: {
            start: {
              line: 338,
              column: 2
            },
            end: {
              line: 338,
              column: 3
            }
          },
          loc: {
            start: {
              line: 338,
              column: 31
            },
            end: {
              line: 352,
              column: 3
            }
          },
          line: 338
        },
        "19": {
          name: "(anonymous_19)",
          decl: {
            start: {
              line: 354,
              column: 2
            },
            end: {
              line: 354,
              column: 3
            }
          },
          loc: {
            start: {
              line: 354,
              column: 27
            },
            end: {
              line: 358,
              column: 3
            }
          },
          line: 354
        },
        "20": {
          name: "(anonymous_20)",
          decl: {
            start: {
              line: 360,
              column: 2
            },
            end: {
              line: 360,
              column: 3
            }
          },
          loc: {
            start: {
              line: 360,
              column: 14
            },
            end: {
              line: 362,
              column: 3
            }
          },
          line: 360
        },
        "21": {
          name: "(anonymous_21)",
          decl: {
            start: {
              line: 365,
              column: 2
            },
            end: {
              line: 365,
              column: 3
            }
          },
          loc: {
            start: {
              line: 365,
              column: 38
            },
            end: {
              line: 367,
              column: 3
            }
          },
          line: 365
        },
        "22": {
          name: "(anonymous_22)",
          decl: {
            start: {
              line: 369,
              column: 2
            },
            end: {
              line: 369,
              column: 3
            }
          },
          loc: {
            start: {
              line: 369,
              column: 16
            },
            end: {
              line: 371,
              column: 3
            }
          },
          line: 369
        },
        "23": {
          name: "(anonymous_23)",
          decl: {
            start: {
              line: 373,
              column: 2
            },
            end: {
              line: 373,
              column: 3
            }
          },
          loc: {
            start: {
              line: 373,
              column: 13
            },
            end: {
              line: 375,
              column: 3
            }
          },
          line: 373
        },
        "24": {
          name: "(anonymous_24)",
          decl: {
            start: {
              line: 377,
              column: 2
            },
            end: {
              line: 377,
              column: 3
            }
          },
          loc: {
            start: {
              line: 377,
              column: 21
            },
            end: {
              line: 381,
              column: 3
            }
          },
          line: 377
        },
        "25": {
          name: "(anonymous_25)",
          decl: {
            start: {
              line: 383,
              column: 2
            },
            end: {
              line: 383,
              column: 3
            }
          },
          loc: {
            start: {
              line: 383,
              column: 15
            },
            end: {
              line: 395,
              column: 3
            }
          },
          line: 383
        },
        "26": {
          name: "(anonymous_26)",
          decl: {
            start: {
              line: 387,
              column: 35
            },
            end: {
              line: 387,
              column: 36
            }
          },
          loc: {
            start: {
              line: 387,
              column: 44
            },
            end: {
              line: 387,
              column: 70
            }
          },
          line: 387
        },
        "27": {
          name: "(anonymous_27)",
          decl: {
            start: {
              line: 391,
              column: 13
            },
            end: {
              line: 391,
              column: 14
            }
          },
          loc: {
            start: {
              line: 391,
              column: 27
            },
            end: {
              line: 391,
              column: 60
            }
          },
          line: 391
        },
        "28": {
          name: "(anonymous_28)",
          decl: {
            start: {
              line: 397,
              column: 2
            },
            end: {
              line: 397,
              column: 3
            }
          },
          loc: {
            start: {
              line: 397,
              column: 32
            },
            end: {
              line: 399,
              column: 3
            }
          },
          line: 397
        },
        "29": {
          name: "(anonymous_29)",
          decl: {
            start: {
              line: 401,
              column: 2
            },
            end: {
              line: 401,
              column: 3
            }
          },
          loc: {
            start: {
              line: 401,
              column: 31
            },
            end: {
              line: 446,
              column: 3
            }
          },
          line: 401
        },
        "30": {
          name: "(anonymous_30)",
          decl: {
            start: {
              line: 433,
              column: 14
            },
            end: {
              line: 433,
              column: 15
            }
          },
          loc: {
            start: {
              line: 433,
              column: 22
            },
            end: {
              line: 437,
              column: 11
            }
          },
          line: 433
        },
        "31": {
          name: "(anonymous_31)",
          decl: {
            start: {
              line: 448,
              column: 2
            },
            end: {
              line: 448,
              column: 3
            }
          },
          loc: {
            start: {
              line: 448,
              column: 18
            },
            end: {
              line: 487,
              column: 3
            }
          },
          line: 448
        },
        "32": {
          name: "(anonymous_32)",
          decl: {
            start: {
              line: 453,
              column: 103
            },
            end: {
              line: 453,
              column: 104
            }
          },
          loc: {
            start: {
              line: 453,
              column: 112
            },
            end: {
              line: 456,
              column: 9
            }
          },
          line: 453
        },
        "33": {
          name: "(anonymous_33)",
          decl: {
            start: {
              line: 465,
              column: 71
            },
            end: {
              line: 465,
              column: 72
            }
          },
          loc: {
            start: {
              line: 465,
              column: 80
            },
            end: {
              line: 469,
              column: 9
            }
          },
          line: 465
        },
        "34": {
          name: "(anonymous_34)",
          decl: {
            start: {
              line: 470,
              column: 72
            },
            end: {
              line: 470,
              column: 73
            }
          },
          loc: {
            start: {
              line: 470,
              column: 81
            },
            end: {
              line: 476,
              column: 9
            }
          },
          line: 470
        },
        "35": {
          name: "(anonymous_35)",
          decl: {
            start: {
              line: 480,
              column: 29
            },
            end: {
              line: 480,
              column: 30
            }
          },
          loc: {
            start: {
              line: 480,
              column: 35
            },
            end: {
              line: 484,
              column: 5
            }
          },
          line: 480
        },
        "36": {
          name: "(anonymous_36)",
          decl: {
            start: {
              line: 489,
              column: 2
            },
            end: {
              line: 489,
              column: 3
            }
          },
          loc: {
            start: {
              line: 489,
              column: 14
            },
            end: {
              line: 502,
              column: 3
            }
          },
          line: 489
        },
        "37": {
          name: "(anonymous_37)",
          decl: {
            start: {
              line: 504,
              column: 2
            },
            end: {
              line: 504,
              column: 3
            }
          },
          loc: {
            start: {
              line: 504,
              column: 11
            },
            end: {
              line: 517,
              column: 3
            }
          },
          line: 504
        },
        "38": {
          name: "(anonymous_38)",
          decl: {
            start: {
              line: 512,
              column: 21
            },
            end: {
              line: 512,
              column: 22
            }
          },
          loc: {
            start: {
              line: 512,
              column: 27
            },
            end: {
              line: 516,
              column: 5
            }
          },
          line: 512
        },
        "39": {
          name: "(anonymous_39)",
          decl: {
            start: {
              line: 519,
              column: 2
            },
            end: {
              line: 519,
              column: 3
            }
          },
          loc: {
            start: {
              line: 519,
              column: 11
            },
            end: {
              line: 531,
              column: 3
            }
          },
          line: 519
        },
        "40": {
          name: "(anonymous_40)",
          decl: {
            start: {
              line: 526,
              column: 21
            },
            end: {
              line: 526,
              column: 22
            }
          },
          loc: {
            start: {
              line: 526,
              column: 27
            },
            end: {
              line: 530,
              column: 5
            }
          },
          line: 526
        },
        "41": {
          name: "(anonymous_41)",
          decl: {
            start: {
              line: 533,
              column: 2
            },
            end: {
              line: 533,
              column: 3
            }
          },
          loc: {
            start: {
              line: 533,
              column: 32
            },
            end: {
              line: 536,
              column: 3
            }
          },
          line: 533
        },
        "42": {
          name: "(anonymous_42)",
          decl: {
            start: {
              line: 538,
              column: 2
            },
            end: {
              line: 538,
              column: 3
            }
          },
          loc: {
            start: {
              line: 538,
              column: 25
            },
            end: {
              line: 540,
              column: 3
            }
          },
          line: 538
        },
        "43": {
          name: "(anonymous_43)",
          decl: {
            start: {
              line: 542,
              column: 2
            },
            end: {
              line: 542,
              column: 3
            }
          },
          loc: {
            start: {
              line: 542,
              column: 21
            },
            end: {
              line: 559,
              column: 3
            }
          },
          line: 542
        },
        "44": {
          name: "(anonymous_44)",
          decl: {
            start: {
              line: 561,
              column: 2
            },
            end: {
              line: 561,
              column: 3
            }
          },
          loc: {
            start: {
              line: 561,
              column: 28
            },
            end: {
              line: 580,
              column: 3
            }
          },
          line: 561
        },
        "45": {
          name: "(anonymous_45)",
          decl: {
            start: {
              line: 582,
              column: 2
            },
            end: {
              line: 582,
              column: 3
            }
          },
          loc: {
            start: {
              line: 582,
              column: 23
            },
            end: {
              line: 598,
              column: 3
            }
          },
          line: 582
        },
        "46": {
          name: "(anonymous_46)",
          decl: {
            start: {
              line: 600,
              column: 2
            },
            end: {
              line: 600,
              column: 3
            }
          },
          loc: {
            start: {
              line: 600,
              column: 19
            },
            end: {
              line: 610,
              column: 3
            }
          },
          line: 600
        },
        "47": {
          name: "(anonymous_47)",
          decl: {
            start: {
              line: 613,
              column: 2
            },
            end: {
              line: 613,
              column: 3
            }
          },
          loc: {
            start: {
              line: 613,
              column: 33
            },
            end: {
              line: 627,
              column: 3
            }
          },
          line: 613
        },
        "48": {
          name: "(anonymous_48)",
          decl: {
            start: {
              line: 614,
              column: 21
            },
            end: {
              line: 614,
              column: 22
            }
          },
          loc: {
            start: {
              line: 614,
              column: 33
            },
            end: {
              line: 626,
              column: 5
            }
          },
          line: 614
        }
      },
      branchMap: {
        "0": {
          loc: {
            start: {
              line: 56,
              column: 9
            },
            end: {
              line: 56,
              column: 35
            }
          },
          type: "cond-expr",
          locations: [{
            start: {
              line: 56,
              column: 19
            },
            end: {
              line: 56,
              column: 25
            }
          }, {
            start: {
              line: 56,
              column: 28
            },
            end: {
              line: 56,
              column: 35
            }
          }],
          line: 56
        },
        "1": {
          loc: {
            start: {
              line: 58,
              column: 8
            },
            end: {
              line: 58,
              column: 34
            }
          },
          type: "cond-expr",
          locations: [{
            start: {
              line: 58,
              column: 18
            },
            end: {
              line: 58,
              column: 25
            }
          }, {
            start: {
              line: 58,
              column: 28
            },
            end: {
              line: 58,
              column: 34
            }
          }],
          line: 58
        },
        "2": {
          loc: {
            start: {
              line: 110,
              column: 4
            },
            end: {
              line: 112,
              column: 5
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 110,
              column: 4
            },
            end: {
              line: 112,
              column: 5
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 110
        },
        "3": {
          loc: {
            start: {
              line: 130,
              column: 4
            },
            end: {
              line: 132,
              column: 5
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 130,
              column: 4
            },
            end: {
              line: 132,
              column: 5
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 130
        },
        "4": {
          loc: {
            start: {
              line: 162,
              column: 4
            },
            end: {
              line: 164,
              column: 5
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 162,
              column: 4
            },
            end: {
              line: 164,
              column: 5
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 162
        },
        "5": {
          loc: {
            start: {
              line: 167,
              column: 4
            },
            end: {
              line: 170,
              column: 5
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 167,
              column: 4
            },
            end: {
              line: 170,
              column: 5
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 167
        },
        "6": {
          loc: {
            start: {
              line: 180,
              column: 4
            },
            end: {
              line: 182,
              column: 5
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 180,
              column: 4
            },
            end: {
              line: 182,
              column: 5
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 180
        },
        "7": {
          loc: {
            start: {
              line: 189,
              column: 4
            },
            end: {
              line: 191,
              column: 5
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 189,
              column: 4
            },
            end: {
              line: 191,
              column: 5
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 189
        },
        "8": {
          loc: {
            start: {
              line: 193,
              column: 4
            },
            end: {
              line: 195,
              column: 5
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 193,
              column: 4
            },
            end: {
              line: 195,
              column: 5
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 193
        },
        "9": {
          loc: {
            start: {
              line: 193,
              column: 10
            },
            end: {
              line: 193,
              column: 50
            }
          },
          type: "binary-expr",
          locations: [{
            start: {
              line: 193,
              column: 10
            },
            end: {
              line: 193,
              column: 31
            }
          }, {
            start: {
              line: 193,
              column: 35
            },
            end: {
              line: 193,
              column: 50
            }
          }],
          line: 193
        },
        "10": {
          loc: {
            start: {
              line: 199,
              column: 24
            },
            end: {
              line: 199,
              column: 81
            }
          },
          type: "binary-expr",
          locations: [{
            start: {
              line: 199,
              column: 24
            },
            end: {
              line: 199,
              column: 34
            }
          }, {
            start: {
              line: 199,
              column: 38
            },
            end: {
              line: 199,
              column: 81
            }
          }],
          line: 199
        },
        "11": {
          loc: {
            start: {
              line: 201,
              column: 4
            },
            end: {
              line: 203,
              column: 5
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 201,
              column: 4
            },
            end: {
              line: 203,
              column: 5
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 201
        },
        "12": {
          loc: {
            start: {
              line: 201,
              column: 8
            },
            end: {
              line: 201,
              column: 49
            }
          },
          type: "binary-expr",
          locations: [{
            start: {
              line: 201,
              column: 8
            },
            end: {
              line: 201,
              column: 34
            }
          }, {
            start: {
              line: 201,
              column: 38
            },
            end: {
              line: 201,
              column: 49
            }
          }],
          line: 201
        },
        "13": {
          loc: {
            start: {
              line: 214,
              column: 4
            },
            end: {
              line: 217,
              column: 5
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 214,
              column: 4
            },
            end: {
              line: 217,
              column: 5
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 214
        },
        "14": {
          loc: {
            start: {
              line: 227,
              column: 4
            },
            end: {
              line: 231,
              column: 5
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 227,
              column: 4
            },
            end: {
              line: 231,
              column: 5
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 227
        },
        "15": {
          loc: {
            start: {
              line: 236,
              column: 6
            },
            end: {
              line: 238,
              column: 7
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 236,
              column: 6
            },
            end: {
              line: 238,
              column: 7
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 236
        },
        "16": {
          loc: {
            start: {
              line: 247,
              column: 4
            },
            end: {
              line: 249,
              column: 5
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 247,
              column: 4
            },
            end: {
              line: 249,
              column: 5
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 247
        },
        "17": {
          loc: {
            start: {
              line: 252,
              column: 4
            },
            end: {
              line: 254,
              column: 5
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 252,
              column: 4
            },
            end: {
              line: 254,
              column: 5
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 252
        },
        "18": {
          loc: {
            start: {
              line: 261,
              column: 4
            },
            end: {
              line: 265,
              column: 5
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 261,
              column: 4
            },
            end: {
              line: 265,
              column: 5
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 261
        },
        "19": {
          loc: {
            start: {
              line: 273,
              column: 6
            },
            end: {
              line: 275,
              column: 7
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 273,
              column: 6
            },
            end: {
              line: 275,
              column: 7
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 273
        },
        "20": {
          loc: {
            start: {
              line: 277,
              column: 6
            },
            end: {
              line: 279,
              column: 7
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 277,
              column: 6
            },
            end: {
              line: 279,
              column: 7
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 277
        },
        "21": {
          loc: {
            start: {
              line: 289,
              column: 4
            },
            end: {
              line: 291,
              column: 5
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 289,
              column: 4
            },
            end: {
              line: 291,
              column: 5
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 289
        },
        "22": {
          loc: {
            start: {
              line: 300,
              column: 4
            },
            end: {
              line: 302,
              column: 5
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 300,
              column: 4
            },
            end: {
              line: 302,
              column: 5
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 300
        },
        "23": {
          loc: {
            start: {
              line: 301,
              column: 40
            },
            end: {
              line: 301,
              column: 89
            }
          },
          type: "binary-expr",
          locations: [{
            start: {
              line: 301,
              column: 40
            },
            end: {
              line: 301,
              column: 56
            }
          }, {
            start: {
              line: 301,
              column: 60
            },
            end: {
              line: 301,
              column: 89
            }
          }],
          line: 301
        },
        "24": {
          loc: {
            start: {
              line: 311,
              column: 4
            },
            end: {
              line: 313,
              column: 5
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 311,
              column: 4
            },
            end: {
              line: 313,
              column: 5
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 311
        },
        "25": {
          loc: {
            start: {
              line: 323,
              column: 4
            },
            end: {
              line: 325,
              column: 5
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 323,
              column: 4
            },
            end: {
              line: 325,
              column: 5
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 323
        },
        "26": {
          loc: {
            start: {
              line: 332,
              column: 4
            },
            end: {
              line: 335,
              column: 5
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 332,
              column: 4
            },
            end: {
              line: 335,
              column: 5
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 332
        },
        "27": {
          loc: {
            start: {
              line: 339,
              column: 4
            },
            end: {
              line: 349,
              column: 5
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 339,
              column: 4
            },
            end: {
              line: 349,
              column: 5
            }
          }, {
            start: {
              line: 341,
              column: 11
            },
            end: {
              line: 349,
              column: 5
            }
          }],
          line: 339
        },
        "28": {
          loc: {
            start: {
              line: 361,
              column: 11
            },
            end: {
              line: 361,
              column: 120
            }
          },
          type: "binary-expr",
          locations: [{
            start: {
              line: 361,
              column: 11
            },
            end: {
              line: 361,
              column: 60
            }
          }, {
            start: {
              line: 361,
              column: 64
            },
            end: {
              line: 361,
              column: 120
            }
          }],
          line: 361
        },
        "29": {
          loc: {
            start: {
              line: 370,
              column: 11
            },
            end: {
              line: 370,
              column: 95
            }
          },
          type: "binary-expr",
          locations: [{
            start: {
              line: 370,
              column: 11
            },
            end: {
              line: 370,
              column: 33
            }
          }, {
            start: {
              line: 370,
              column: 38
            },
            end: {
              line: 370,
              column: 46
            }
          }, {
            start: {
              line: 370,
              column: 50
            },
            end: {
              line: 370,
              column: 94
            }
          }],
          line: 370
        },
        "30": {
          loc: {
            start: {
              line: 374,
              column: 11
            },
            end: {
              line: 374,
              column: 67
            }
          },
          type: "binary-expr",
          locations: [{
            start: {
              line: 374,
              column: 11
            },
            end: {
              line: 374,
              column: 19
            }
          }, {
            start: {
              line: 374,
              column: 23
            },
            end: {
              line: 374,
              column: 67
            }
          }],
          line: 374
        },
        "31": {
          loc: {
            start: {
              line: 386,
              column: 4
            },
            end: {
              line: 388,
              column: 5
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 386,
              column: 4
            },
            end: {
              line: 388,
              column: 5
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 386
        },
        "32": {
          loc: {
            start: {
              line: 390,
              column: 4
            },
            end: {
              line: 392,
              column: 5
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 390,
              column: 4
            },
            end: {
              line: 392,
              column: 5
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 390
        },
        "33": {
          loc: {
            start: {
              line: 452,
              column: 6
            },
            end: {
              line: 477,
              column: 7
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 452,
              column: 6
            },
            end: {
              line: 477,
              column: 7
            }
          }, {
            start: {
              line: 457,
              column: 13
            },
            end: {
              line: 477,
              column: 7
            }
          }],
          line: 452
        },
        "34": {
          loc: {
            start: {
              line: 457,
              column: 13
            },
            end: {
              line: 477,
              column: 7
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 457,
              column: 13
            },
            end: {
              line: 477,
              column: 7
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 457
        },
        "35": {
          loc: {
            start: {
              line: 458,
              column: 24
            },
            end: {
              line: 460,
              column: 51
            }
          },
          type: "cond-expr",
          locations: [{
            start: {
              line: 459,
              column: 10
            },
            end: {
              line: 459,
              column: 54
            }
          }, {
            start: {
              line: 460,
              column: 10
            },
            end: {
              line: 460,
              column: 51
            }
          }],
          line: 458
        },
        "36": {
          loc: {
            start: {
              line: 461,
              column: 25
            },
            end: {
              line: 463,
              column: 52
            }
          },
          type: "cond-expr",
          locations: [{
            start: {
              line: 462,
              column: 10
            },
            end: {
              line: 462,
              column: 54
            }
          }, {
            start: {
              line: 463,
              column: 10
            },
            end: {
              line: 463,
              column: 52
            }
          }],
          line: 461
        },
        "37": {
          loc: {
            start: {
              line: 467,
              column: 33
            },
            end: {
              line: 467,
              column: 89
            }
          },
          type: "cond-expr",
          locations: [{
            start: {
              line: 467,
              column: 60
            },
            end: {
              line: 467,
              column: 73
            }
          }, {
            start: {
              line: 467,
              column: 76
            },
            end: {
              line: 467,
              column: 89
            }
          }],
          line: 467
        },
        "38": {
          loc: {
            start: {
              line: 472,
              column: 33
            },
            end: {
              line: 472,
              column: 90
            }
          },
          type: "cond-expr",
          locations: [{
            start: {
              line: 472,
              column: 61
            },
            end: {
              line: 472,
              column: 74
            }
          }, {
            start: {
              line: 472,
              column: 77
            },
            end: {
              line: 472,
              column: 90
            }
          }],
          line: 472
        },
        "39": {
          loc: {
            start: {
              line: 481,
              column: 6
            },
            end: {
              line: 483,
              column: 7
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 481,
              column: 6
            },
            end: {
              line: 483,
              column: 7
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 481
        },
        "40": {
          loc: {
            start: {
              line: 492,
              column: 4
            },
            end: {
              line: 494,
              column: 5
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 492,
              column: 4
            },
            end: {
              line: 494,
              column: 5
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 492
        },
        "41": {
          loc: {
            start: {
              line: 496,
              column: 4
            },
            end: {
              line: 498,
              column: 5
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 496,
              column: 4
            },
            end: {
              line: 498,
              column: 5
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 496
        },
        "42": {
          loc: {
            start: {
              line: 496,
              column: 8
            },
            end: {
              line: 496,
              column: 86
            }
          },
          type: "binary-expr",
          locations: [{
            start: {
              line: 496,
              column: 8
            },
            end: {
              line: 496,
              column: 49
            }
          }, {
            start: {
              line: 496,
              column: 53
            },
            end: {
              line: 496,
              column: 86
            }
          }],
          line: 496
        },
        "43": {
          loc: {
            start: {
              line: 505,
              column: 4
            },
            end: {
              line: 508,
              column: 5
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 505,
              column: 4
            },
            end: {
              line: 508,
              column: 5
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 505
        },
        "44": {
          loc: {
            start: {
              line: 505,
              column: 8
            },
            end: {
              line: 505,
              column: 42
            }
          },
          type: "binary-expr",
          locations: [{
            start: {
              line: 505,
              column: 8
            },
            end: {
              line: 505,
              column: 23
            }
          }, {
            start: {
              line: 505,
              column: 27
            },
            end: {
              line: 505,
              column: 42
            }
          }],
          line: 505
        },
        "45": {
          loc: {
            start: {
              line: 513,
              column: 6
            },
            end: {
              line: 515,
              column: 7
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 513,
              column: 6
            },
            end: {
              line: 515,
              column: 7
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 513
        },
        "46": {
          loc: {
            start: {
              line: 520,
              column: 4
            },
            end: {
              line: 522,
              column: 5
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 520,
              column: 4
            },
            end: {
              line: 522,
              column: 5
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 520
        },
        "47": {
          loc: {
            start: {
              line: 527,
              column: 6
            },
            end: {
              line: 529,
              column: 7
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 527,
              column: 6
            },
            end: {
              line: 529,
              column: 7
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 527
        },
        "48": {
          loc: {
            start: {
              line: 546,
              column: 6
            },
            end: {
              line: 548,
              column: 7
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 546,
              column: 6
            },
            end: {
              line: 548,
              column: 7
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 546
        },
        "49": {
          loc: {
            start: {
              line: 553,
              column: 10
            },
            end: {
              line: 553,
              column: 60
            }
          },
          type: "cond-expr",
          locations: [{
            start: {
              line: 553,
              column: 49
            },
            end: {
              line: 553,
              column: 55
            }
          }, {
            start: {
              line: 553,
              column: 58
            },
            end: {
              line: 553,
              column: 60
            }
          }],
          line: 553
        },
        "50": {
          loc: {
            start: {
              line: 553,
              column: 10
            },
            end: {
              line: 553,
              column: 46
            }
          },
          type: "binary-expr",
          locations: [{
            start: {
              line: 553,
              column: 10
            },
            end: {
              line: 553,
              column: 36
            }
          }, {
            start: {
              line: 553,
              column: 40
            },
            end: {
              line: 553,
              column: 46
            }
          }],
          line: 553
        },
        "51": {
          loc: {
            start: {
              line: 562,
              column: 23
            },
            end: {
              line: 562,
              column: 96
            }
          },
          type: "cond-expr",
          locations: [{
            start: {
              line: 562,
              column: 52
            },
            end: {
              line: 562,
              column: 65
            }
          }, {
            start: {
              line: 562,
              column: 68
            },
            end: {
              line: 562,
              column: 96
            }
          }],
          line: 562
        },
        "52": {
          loc: {
            start: {
              line: 564,
              column: 4
            },
            end: {
              line: 569,
              column: 5
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 564,
              column: 4
            },
            end: {
              line: 569,
              column: 5
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 564
        },
        "53": {
          loc: {
            start: {
              line: 571,
              column: 4
            },
            end: {
              line: 573,
              column: 5
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 571,
              column: 4
            },
            end: {
              line: 573,
              column: 5
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 571
        },
        "54": {
          loc: {
            start: {
              line: 575,
              column: 4
            },
            end: {
              line: 577,
              column: 5
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 575,
              column: 4
            },
            end: {
              line: 577,
              column: 5
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 575
        },
        "55": {
          loc: {
            start: {
              line: 586,
              column: 6
            },
            end: {
              line: 588,
              column: 7
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 586,
              column: 6
            },
            end: {
              line: 588,
              column: 7
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 586
        },
        "56": {
          loc: {
            start: {
              line: 601,
              column: 4
            },
            end: {
              line: 604,
              column: 5
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 601,
              column: 4
            },
            end: {
              line: 604,
              column: 5
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 601
        },
        "57": {
          loc: {
            start: {
              line: 606,
              column: 4
            },
            end: {
              line: 609,
              column: 5
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 606,
              column: 4
            },
            end: {
              line: 609,
              column: 5
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 606
        },
        "58": {
          loc: {
            start: {
              line: 617,
              column: 6
            },
            end: {
              line: 619,
              column: 7
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 617,
              column: 6
            },
            end: {
              line: 619,
              column: 7
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 617
        },
        "59": {
          loc: {
            start: {
              line: 621,
              column: 6
            },
            end: {
              line: 623,
              column: 7
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 621,
              column: 6
            },
            end: {
              line: 623,
              column: 7
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 621
        }
      },
      s: {
        "0": 0,
        "1": 0,
        "2": 0,
        "3": 0,
        "4": 0,
        "5": 0,
        "6": 0,
        "7": 0,
        "8": 0,
        "9": 0,
        "10": 0,
        "11": 0,
        "12": 0,
        "13": 0,
        "14": 0,
        "15": 0,
        "16": 0,
        "17": 0,
        "18": 0,
        "19": 0,
        "20": 0,
        "21": 0,
        "22": 0,
        "23": 0,
        "24": 0,
        "25": 0,
        "26": 0,
        "27": 0,
        "28": 0,
        "29": 0,
        "30": 0,
        "31": 0,
        "32": 0,
        "33": 0,
        "34": 0,
        "35": 0,
        "36": 0,
        "37": 0,
        "38": 0,
        "39": 0,
        "40": 0,
        "41": 0,
        "42": 0,
        "43": 0,
        "44": 0,
        "45": 0,
        "46": 0,
        "47": 0,
        "48": 0,
        "49": 0,
        "50": 0,
        "51": 0,
        "52": 0,
        "53": 0,
        "54": 0,
        "55": 0,
        "56": 0,
        "57": 0,
        "58": 0,
        "59": 0,
        "60": 0,
        "61": 0,
        "62": 0,
        "63": 0,
        "64": 0,
        "65": 0,
        "66": 0,
        "67": 0,
        "68": 0,
        "69": 0,
        "70": 0,
        "71": 0,
        "72": 0,
        "73": 0,
        "74": 0,
        "75": 0,
        "76": 0,
        "77": 0,
        "78": 0,
        "79": 0,
        "80": 0,
        "81": 0,
        "82": 0,
        "83": 0,
        "84": 0,
        "85": 0,
        "86": 0,
        "87": 0,
        "88": 0,
        "89": 0,
        "90": 0,
        "91": 0,
        "92": 0,
        "93": 0,
        "94": 0,
        "95": 0,
        "96": 0,
        "97": 0,
        "98": 0,
        "99": 0,
        "100": 0,
        "101": 0,
        "102": 0,
        "103": 0,
        "104": 0,
        "105": 0,
        "106": 0,
        "107": 0,
        "108": 0,
        "109": 0,
        "110": 0,
        "111": 0,
        "112": 0,
        "113": 0,
        "114": 0,
        "115": 0,
        "116": 0,
        "117": 0,
        "118": 0,
        "119": 0,
        "120": 0,
        "121": 0,
        "122": 0,
        "123": 0,
        "124": 0,
        "125": 0,
        "126": 0,
        "127": 0,
        "128": 0,
        "129": 0,
        "130": 0,
        "131": 0,
        "132": 0,
        "133": 0,
        "134": 0,
        "135": 0,
        "136": 0,
        "137": 0,
        "138": 0,
        "139": 0,
        "140": 0,
        "141": 0,
        "142": 0,
        "143": 0,
        "144": 0,
        "145": 0,
        "146": 0,
        "147": 0,
        "148": 0,
        "149": 0,
        "150": 0,
        "151": 0,
        "152": 0,
        "153": 0,
        "154": 0,
        "155": 0,
        "156": 0,
        "157": 0,
        "158": 0,
        "159": 0,
        "160": 0,
        "161": 0,
        "162": 0,
        "163": 0,
        "164": 0,
        "165": 0,
        "166": 0,
        "167": 0,
        "168": 0,
        "169": 0,
        "170": 0,
        "171": 0,
        "172": 0,
        "173": 0,
        "174": 0,
        "175": 0,
        "176": 0,
        "177": 0,
        "178": 0,
        "179": 0,
        "180": 0,
        "181": 0,
        "182": 0,
        "183": 0,
        "184": 0,
        "185": 0,
        "186": 0,
        "187": 0,
        "188": 0,
        "189": 0,
        "190": 0,
        "191": 0,
        "192": 0,
        "193": 0,
        "194": 0,
        "195": 0,
        "196": 0,
        "197": 0,
        "198": 0,
        "199": 0,
        "200": 0,
        "201": 0,
        "202": 0,
        "203": 0,
        "204": 0,
        "205": 0,
        "206": 0,
        "207": 0,
        "208": 0,
        "209": 0,
        "210": 0,
        "211": 0,
        "212": 0,
        "213": 0,
        "214": 0,
        "215": 0,
        "216": 0,
        "217": 0,
        "218": 0,
        "219": 0,
        "220": 0,
        "221": 0,
        "222": 0,
        "223": 0,
        "224": 0,
        "225": 0,
        "226": 0,
        "227": 0,
        "228": 0,
        "229": 0,
        "230": 0,
        "231": 0,
        "232": 0
      },
      f: {
        "0": 0,
        "1": 0,
        "2": 0,
        "3": 0,
        "4": 0,
        "5": 0,
        "6": 0,
        "7": 0,
        "8": 0,
        "9": 0,
        "10": 0,
        "11": 0,
        "12": 0,
        "13": 0,
        "14": 0,
        "15": 0,
        "16": 0,
        "17": 0,
        "18": 0,
        "19": 0,
        "20": 0,
        "21": 0,
        "22": 0,
        "23": 0,
        "24": 0,
        "25": 0,
        "26": 0,
        "27": 0,
        "28": 0,
        "29": 0,
        "30": 0,
        "31": 0,
        "32": 0,
        "33": 0,
        "34": 0,
        "35": 0,
        "36": 0,
        "37": 0,
        "38": 0,
        "39": 0,
        "40": 0,
        "41": 0,
        "42": 0,
        "43": 0,
        "44": 0,
        "45": 0,
        "46": 0,
        "47": 0,
        "48": 0
      },
      b: {
        "0": [0, 0],
        "1": [0, 0],
        "2": [0, 0],
        "3": [0, 0],
        "4": [0, 0],
        "5": [0, 0],
        "6": [0, 0],
        "7": [0, 0],
        "8": [0, 0],
        "9": [0, 0],
        "10": [0, 0],
        "11": [0, 0],
        "12": [0, 0],
        "13": [0, 0],
        "14": [0, 0],
        "15": [0, 0],
        "16": [0, 0],
        "17": [0, 0],
        "18": [0, 0],
        "19": [0, 0],
        "20": [0, 0],
        "21": [0, 0],
        "22": [0, 0],
        "23": [0, 0],
        "24": [0, 0],
        "25": [0, 0],
        "26": [0, 0],
        "27": [0, 0],
        "28": [0, 0],
        "29": [0, 0, 0],
        "30": [0, 0],
        "31": [0, 0],
        "32": [0, 0],
        "33": [0, 0],
        "34": [0, 0],
        "35": [0, 0],
        "36": [0, 0],
        "37": [0, 0],
        "38": [0, 0],
        "39": [0, 0],
        "40": [0, 0],
        "41": [0, 0],
        "42": [0, 0],
        "43": [0, 0],
        "44": [0, 0],
        "45": [0, 0],
        "46": [0, 0],
        "47": [0, 0],
        "48": [0, 0],
        "49": [0, 0],
        "50": [0, 0],
        "51": [0, 0],
        "52": [0, 0],
        "53": [0, 0],
        "54": [0, 0],
        "55": [0, 0],
        "56": [0, 0],
        "57": [0, 0],
        "58": [0, 0],
        "59": [0, 0]
      },
      inputSourceMap: {
        version: 3,
        sources: ["/Users/lukaszholeczek/Projekty/CoreUI/mrholek/coreui-pro/js/src/tooltip.js"],
        sourcesContent: ["/**\n * --------------------------------------------------------------------------\n * CoreUI tooltip.js\n * Licensed under MIT (https://github.com/coreui/coreui/blob/main/LICENSE)\n *\n * This component is a modified version of the Bootstrap's tooltip.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport * as Popper from '@popperjs/core'\nimport BaseComponent from './base-component.js'\nimport EventHandler from './dom/event-handler.js'\nimport Manipulator from './dom/manipulator.js'\nimport {\n  defineJQueryPlugin, execute, findShadowRoot, getElement, getUID, isRTL, noop\n} from './util/index.js'\nimport { DefaultAllowlist } from './util/sanitizer.js'\nimport TemplateFactory from './util/template-factory.js'\n\n/**\n * Constants\n */\n\nconst NAME = 'tooltip'\nconst DISALLOWED_ATTRIBUTES = new Set(['sanitize', 'allowList', 'sanitizeFn'])\n\nconst CLASS_NAME_FADE = 'fade'\nconst CLASS_NAME_MODAL = 'modal'\nconst CLASS_NAME_SHOW = 'show'\n\nconst SELECTOR_TOOLTIP_INNER = '.tooltip-inner'\nconst SELECTOR_MODAL = `.${CLASS_NAME_MODAL}`\n\nconst EVENT_MODAL_HIDE = 'hide.coreui.modal'\n\nconst TRIGGER_HOVER = 'hover'\nconst TRIGGER_FOCUS = 'focus'\nconst TRIGGER_CLICK = 'click'\nconst TRIGGER_MANUAL = 'manual'\n\nconst EVENT_HIDE = 'hide'\nconst EVENT_HIDDEN = 'hidden'\nconst EVENT_SHOW = 'show'\nconst EVENT_SHOWN = 'shown'\nconst EVENT_INSERTED = 'inserted'\nconst EVENT_CLICK = 'click'\nconst EVENT_FOCUSIN = 'focusin'\nconst EVENT_FOCUSOUT = 'focusout'\nconst EVENT_MOUSEENTER = 'mouseenter'\nconst EVENT_MOUSELEAVE = 'mouseleave'\n\nconst AttachmentMap = {\n  AUTO: 'auto',\n  TOP: 'top',\n  RIGHT: isRTL() ? 'left' : 'right',\n  BOTTOM: 'bottom',\n  LEFT: isRTL() ? 'right' : 'left'\n}\n\nconst Default = {\n  allowList: DefaultAllowlist,\n  animation: true,\n  boundary: 'clippingParents',\n  container: false,\n  customClass: '',\n  delay: 0,\n  fallbackPlacements: ['top', 'right', 'bottom', 'left'],\n  html: false,\n  offset: [0, 6],\n  placement: 'top',\n  popperConfig: null,\n  sanitize: true,\n  sanitizeFn: null,\n  selector: false,\n  template: '<div class=\"tooltip\" role=\"tooltip\">' +\n            '<div class=\"tooltip-arrow\"></div>' +\n            '<div class=\"tooltip-inner\"></div>' +\n            '</div>',\n  title: '',\n  trigger: 'hover focus'\n}\n\nconst DefaultType = {\n  allowList: 'object',\n  animation: 'boolean',\n  boundary: '(string|element)',\n  container: '(string|element|boolean)',\n  customClass: '(string|function)',\n  delay: '(number|object)',\n  fallbackPlacements: 'array',\n  html: 'boolean',\n  offset: '(array|string|function)',\n  placement: '(string|function)',\n  popperConfig: '(null|object|function)',\n  sanitize: 'boolean',\n  sanitizeFn: '(null|function)',\n  selector: '(string|boolean)',\n  template: 'string',\n  title: '(string|element|function)',\n  trigger: 'string'\n}\n\n/**\n * Class definition\n */\n\nclass Tooltip extends BaseComponent {\n  constructor(element, config) {\n    if (typeof Popper === 'undefined') {\n      throw new TypeError('Bootstrap\\'s tooltips require Popper (https://popper.js.org)')\n    }\n\n    super(element, config)\n\n    // Private\n    this._isEnabled = true\n    this._timeout = 0\n    this._isHovered = null\n    this._activeTrigger = {}\n    this._popper = null\n    this._templateFactory = null\n    this._newContent = null\n\n    // Protected\n    this.tip = null\n\n    this._setListeners()\n\n    if (!this._config.selector) {\n      this._fixTitle()\n    }\n  }\n\n  // Getters\n  static get Default() {\n    return Default\n  }\n\n  static get DefaultType() {\n    return DefaultType\n  }\n\n  static get NAME() {\n    return NAME\n  }\n\n  // Public\n  enable() {\n    this._isEnabled = true\n  }\n\n  disable() {\n    this._isEnabled = false\n  }\n\n  toggleEnabled() {\n    this._isEnabled = !this._isEnabled\n  }\n\n  toggle() {\n    if (!this._isEnabled) {\n      return\n    }\n\n    this._activeTrigger.click = !this._activeTrigger.click\n    if (this._isShown()) {\n      this._leave()\n      return\n    }\n\n    this._enter()\n  }\n\n  dispose() {\n    clearTimeout(this._timeout)\n\n    EventHandler.off(this._element.closest(SELECTOR_MODAL), EVENT_MODAL_HIDE, this._hideModalHandler)\n\n    if (this._element.getAttribute('data-coreui-original-title')) {\n      this._element.setAttribute('title', this._element.getAttribute('data-coreui-original-title'))\n    }\n\n    this._disposePopper()\n    super.dispose()\n  }\n\n  show() {\n    if (this._element.style.display === 'none') {\n      throw new Error('Please use show on visible elements')\n    }\n\n    if (!(this._isWithContent() && this._isEnabled)) {\n      return\n    }\n\n    const showEvent = EventHandler.trigger(this._element, this.constructor.eventName(EVENT_SHOW))\n    const shadowRoot = findShadowRoot(this._element)\n    const isInTheDom = (shadowRoot || this._element.ownerDocument.documentElement).contains(this._element)\n\n    if (showEvent.defaultPrevented || !isInTheDom) {\n      return\n    }\n\n    // TODO: v6 remove this or make it optional\n    this._disposePopper()\n\n    const tip = this._getTipElement()\n\n    this._element.setAttribute('aria-describedby', tip.getAttribute('id'))\n\n    const { container } = this._config\n\n    if (!this._element.ownerDocument.documentElement.contains(this.tip)) {\n      container.append(tip)\n      EventHandler.trigger(this._element, this.constructor.eventName(EVENT_INSERTED))\n    }\n\n    this._popper = this._createPopper(tip)\n\n    tip.classList.add(CLASS_NAME_SHOW)\n\n    // If this is a touch-enabled device we add extra\n    // empty mouseover listeners to the body's immediate children;\n    // only needed because of broken event delegation on iOS\n    // https://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html\n    if ('ontouchstart' in document.documentElement) {\n      for (const element of [].concat(...document.body.children)) {\n        EventHandler.on(element, 'mouseover', noop)\n      }\n    }\n\n    const complete = () => {\n      EventHandler.trigger(this._element, this.constructor.eventName(EVENT_SHOWN))\n\n      if (this._isHovered === false) {\n        this._leave()\n      }\n\n      this._isHovered = false\n    }\n\n    this._queueCallback(complete, this.tip, this._isAnimated())\n  }\n\n  hide() {\n    if (!this._isShown()) {\n      return\n    }\n\n    const hideEvent = EventHandler.trigger(this._element, this.constructor.eventName(EVENT_HIDE))\n    if (hideEvent.defaultPrevented) {\n      return\n    }\n\n    const tip = this._getTipElement()\n    tip.classList.remove(CLASS_NAME_SHOW)\n\n    // If this is a touch-enabled device we remove the extra\n    // empty mouseover listeners we added for iOS support\n    if ('ontouchstart' in document.documentElement) {\n      for (const element of [].concat(...document.body.children)) {\n        EventHandler.off(element, 'mouseover', noop)\n      }\n    }\n\n    this._activeTrigger[TRIGGER_CLICK] = false\n    this._activeTrigger[TRIGGER_FOCUS] = false\n    this._activeTrigger[TRIGGER_HOVER] = false\n    this._isHovered = null // it is a trick to support manual triggering\n\n    const complete = () => {\n      if (this._isWithActiveTrigger()) {\n        return\n      }\n\n      if (!this._isHovered) {\n        this._disposePopper()\n      }\n\n      this._element.removeAttribute('aria-describedby')\n      EventHandler.trigger(this._element, this.constructor.eventName(EVENT_HIDDEN))\n    }\n\n    this._queueCallback(complete, this.tip, this._isAnimated())\n  }\n\n  update() {\n    if (this._popper) {\n      this._popper.update()\n    }\n  }\n\n  // Protected\n  _isWithContent() {\n    return Boolean(this._getTitle())\n  }\n\n  _getTipElement() {\n    if (!this.tip) {\n      this.tip = this._createTipElement(this._newContent || this._getContentForTemplate())\n    }\n\n    return this.tip\n  }\n\n  _createTipElement(content) {\n    const tip = this._getTemplateFactory(content).toHtml()\n\n    // TODO: remove this check in v6\n    if (!tip) {\n      return null\n    }\n\n    tip.classList.remove(CLASS_NAME_FADE, CLASS_NAME_SHOW)\n    // TODO: v6 the following can be achieved with CSS only\n    tip.classList.add(`bs-${this.constructor.NAME}-auto`)\n\n    const tipId = getUID(this.constructor.NAME).toString()\n\n    tip.setAttribute('id', tipId)\n\n    if (this._isAnimated()) {\n      tip.classList.add(CLASS_NAME_FADE)\n    }\n\n    return tip\n  }\n\n  setContent(content) {\n    this._newContent = content\n    if (this._isShown()) {\n      this._disposePopper()\n      this.show()\n    }\n  }\n\n  _getTemplateFactory(content) {\n    if (this._templateFactory) {\n      this._templateFactory.changeContent(content)\n    } else {\n      this._templateFactory = new TemplateFactory({\n        ...this._config,\n        // the `content` var has to be after `this._config`\n        // to override config.content in case of popover\n        content,\n        extraClass: this._resolvePossibleFunction(this._config.customClass)\n      })\n    }\n\n    return this._templateFactory\n  }\n\n  _getContentForTemplate() {\n    return {\n      [SELECTOR_TOOLTIP_INNER]: this._getTitle()\n    }\n  }\n\n  _getTitle() {\n    return this._resolvePossibleFunction(this._config.title) || this._element.getAttribute('data-coreui-original-title')\n  }\n\n  // Private\n  _initializeOnDelegatedTarget(event) {\n    return this.constructor.getOrCreateInstance(event.delegateTarget, this._getDelegateConfig())\n  }\n\n  _isAnimated() {\n    return this._config.animation || (this.tip && this.tip.classList.contains(CLASS_NAME_FADE))\n  }\n\n  _isShown() {\n    return this.tip && this.tip.classList.contains(CLASS_NAME_SHOW)\n  }\n\n  _createPopper(tip) {\n    const placement = execute(this._config.placement, [this, tip, this._element])\n    const attachment = AttachmentMap[placement.toUpperCase()]\n    return Popper.createPopper(this._element, tip, this._getPopperConfig(attachment))\n  }\n\n  _getOffset() {\n    const { offset } = this._config\n\n    if (typeof offset === 'string') {\n      return offset.split(',').map(value => Number.parseInt(value, 10))\n    }\n\n    if (typeof offset === 'function') {\n      return popperData => offset(popperData, this._element)\n    }\n\n    return offset\n  }\n\n  _resolvePossibleFunction(arg) {\n    return execute(arg, [this._element, this._element])\n  }\n\n  _getPopperConfig(attachment) {\n    const defaultBsPopperConfig = {\n      placement: attachment,\n      modifiers: [\n        {\n          name: 'flip',\n          options: {\n            fallbackPlacements: this._config.fallbackPlacements\n          }\n        },\n        {\n          name: 'offset',\n          options: {\n            offset: this._getOffset()\n          }\n        },\n        {\n          name: 'preventOverflow',\n          options: {\n            boundary: this._config.boundary\n          }\n        },\n        {\n          name: 'arrow',\n          options: {\n            element: `.${this.constructor.NAME}-arrow`\n          }\n        },\n        {\n          name: 'preSetPlacement',\n          enabled: true,\n          phase: 'beforeMain',\n          fn: data => {\n            // Pre-set Popper's placement attribute in order to read the arrow sizes properly.\n            // Otherwise, Popper mixes up the width and height dimensions since the initial arrow style is for top placement\n            this._getTipElement().setAttribute('data-popper-placement', data.state.placement)\n          }\n        }\n      ]\n    }\n\n    return {\n      ...defaultBsPopperConfig,\n      ...execute(this._config.popperConfig, [undefined, defaultBsPopperConfig])\n    }\n  }\n\n  _setListeners() {\n    const triggers = this._config.trigger.split(' ')\n\n    for (const trigger of triggers) {\n      if (trigger === 'click') {\n        EventHandler.on(this._element, this.constructor.eventName(EVENT_CLICK), this._config.selector, event => {\n          const context = this._initializeOnDelegatedTarget(event)\n          context.toggle()\n        })\n      } else if (trigger !== TRIGGER_MANUAL) {\n        const eventIn = trigger === TRIGGER_HOVER ?\n          this.constructor.eventName(EVENT_MOUSEENTER) :\n          this.constructor.eventName(EVENT_FOCUSIN)\n        const eventOut = trigger === TRIGGER_HOVER ?\n          this.constructor.eventName(EVENT_MOUSELEAVE) :\n          this.constructor.eventName(EVENT_FOCUSOUT)\n\n        EventHandler.on(this._element, eventIn, this._config.selector, event => {\n          const context = this._initializeOnDelegatedTarget(event)\n          context._activeTrigger[event.type === 'focusin' ? TRIGGER_FOCUS : TRIGGER_HOVER] = true\n          context._enter()\n        })\n        EventHandler.on(this._element, eventOut, this._config.selector, event => {\n          const context = this._initializeOnDelegatedTarget(event)\n          context._activeTrigger[event.type === 'focusout' ? TRIGGER_FOCUS : TRIGGER_HOVER] =\n            context._element.contains(event.relatedTarget)\n\n          context._leave()\n        })\n      }\n    }\n\n    this._hideModalHandler = () => {\n      if (this._element) {\n        this.hide()\n      }\n    }\n\n    EventHandler.on(this._element.closest(SELECTOR_MODAL), EVENT_MODAL_HIDE, this._hideModalHandler)\n  }\n\n  _fixTitle() {\n    const title = this._element.getAttribute('title')\n\n    if (!title) {\n      return\n    }\n\n    if (!this._element.getAttribute('aria-label') && !this._element.textContent.trim()) {\n      this._element.setAttribute('aria-label', title)\n    }\n\n    this._element.setAttribute('data-coreui-original-title', title) // DO NOT USE IT. Is only for backwards compatibility\n    this._element.removeAttribute('title')\n  }\n\n  _enter() {\n    if (this._isShown() || this._isHovered) {\n      this._isHovered = true\n      return\n    }\n\n    this._isHovered = true\n\n    this._setTimeout(() => {\n      if (this._isHovered) {\n        this.show()\n      }\n    }, this._config.delay.show)\n  }\n\n  _leave() {\n    if (this._isWithActiveTrigger()) {\n      return\n    }\n\n    this._isHovered = false\n\n    this._setTimeout(() => {\n      if (!this._isHovered) {\n        this.hide()\n      }\n    }, this._config.delay.hide)\n  }\n\n  _setTimeout(handler, timeout) {\n    clearTimeout(this._timeout)\n    this._timeout = setTimeout(handler, timeout)\n  }\n\n  _isWithActiveTrigger() {\n    return Object.values(this._activeTrigger).includes(true)\n  }\n\n  _getConfig(config) {\n    const dataAttributes = Manipulator.getDataAttributes(this._element)\n\n    for (const dataAttribute of Object.keys(dataAttributes)) {\n      if (DISALLOWED_ATTRIBUTES.has(dataAttribute)) {\n        delete dataAttributes[dataAttribute]\n      }\n    }\n\n    config = {\n      ...dataAttributes,\n      ...(typeof config === 'object' && config ? config : {})\n    }\n    config = this._mergeConfigObj(config)\n    config = this._configAfterMerge(config)\n    this._typeCheckConfig(config)\n    return config\n  }\n\n  _configAfterMerge(config) {\n    config.container = config.container === false ? document.body : getElement(config.container)\n\n    if (typeof config.delay === 'number') {\n      config.delay = {\n        show: config.delay,\n        hide: config.delay\n      }\n    }\n\n    if (typeof config.title === 'number') {\n      config.title = config.title.toString()\n    }\n\n    if (typeof config.content === 'number') {\n      config.content = config.content.toString()\n    }\n\n    return config\n  }\n\n  _getDelegateConfig() {\n    const config = {}\n\n    for (const [key, value] of Object.entries(this._config)) {\n      if (this.constructor.Default[key] !== value) {\n        config[key] = value\n      }\n    }\n\n    config.selector = false\n    config.trigger = 'manual'\n\n    // In the future can be replaced with:\n    // const keysWithDifferentValues = Object.entries(this._config).filter(entry => this.constructor.Default[entry[0]] !== this._config[entry[0]])\n    // `Object.fromEntries(keysWithDifferentValues)`\n    return config\n  }\n\n  _disposePopper() {\n    if (this._popper) {\n      this._popper.destroy()\n      this._popper = null\n    }\n\n    if (this.tip) {\n      this.tip.remove()\n      this.tip = null\n    }\n  }\n\n  // Static\n  static jQueryInterface(config) {\n    return this.each(function () {\n      const data = Tooltip.getOrCreateInstance(this, config)\n\n      if (typeof config !== 'string') {\n        return\n      }\n\n      if (typeof data[config] === 'undefined') {\n        throw new TypeError(`No method named \"${config}\"`)\n      }\n\n      data[config]()\n    })\n  }\n}\n\n/**\n * jQuery\n */\n\ndefineJQueryPlugin(Tooltip)\n\nexport default Tooltip\n"],
        names: [],
        mappings: "AAAA,CAAC,CAAC;AACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5E,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzE,CAAC;AACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1E,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5E,CAAC,CAAC;;AAEF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAEvD,CAAC,CAAC;AACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC;;AAEF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAEpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB;;AAEA,CAAC,CAAC;AACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC;;AAEF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxF,CAAC,CAAC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AAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAEpG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClG,CAAC,CAAC,CAAC,CAAC;;AAEJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC;;AAEF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChrhG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnzG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC,CAAC;;AAEJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAExB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAEpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAEzE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAErC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzpF,CAAC,CAAC,CAAC,CAAC;;AAEJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAEzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAErC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjpD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACljF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAEN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5B,CAAC,CAAC,CAAC,CAAC;;AAEJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9D,CAAC,CAAC;;AAEF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC,CAAC;;AAEJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC,CAAC;;AAEJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAExxD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC;;AAEJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAEvE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACbtD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClF,CAAC,CAAC,CAAC,CAAC;;AAEJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9D,CAAC,CAAC;;AAEF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC;;AAEF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC;;AAEF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAA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AC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvvD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1E,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC;;AAEJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC,CAAC;;AAEF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC;;AAEF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACdvH,CAAC,CAAC;;AAEF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACthb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClE,CAAC,CAAC;;AAEF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChpF,CAAC,CAAC;;AAEF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAElC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtE,CAAC,CAAC,CAAC,CAAC;;AAEJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3D,CAAC,CAAC,CAAC,CAAC;;AAEJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC;;AAEF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtD,CAAC,CAAC;;AAEF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtlB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAEnD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACphH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzlD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAEnD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjzD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC;;AAEJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC;;AAEJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnG,CAAC,CAAC;;AAEF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAEpD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChxF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpD,CAAC,CAAC,CAAC,CAAC;;AAEJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzC,CAAC,CAAC;;AAEF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,C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AC,CAAC,CAAC;AAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC;;AAEF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3D,CAAC,CAAC;;AAEF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAEtE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC;;AAEJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5D,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC;;AAEJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3C,CAAC,CAAC,CAAC,CAAC;;AAEJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/C,CAAC,CAAC,CAAC,CAAC;;AAEJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC;;AAEF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAEpnD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC;;AAEJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAE5B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC;;AAEF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB,CAAC,CAAC,CAAC,CAAC;;AAEJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC;;AAEF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAE3D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACbzD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAEN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC;AACF;;AAEA,CAAC,CAAC;AACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACR,CAAC,CAAC;;AAEF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAE1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;",
        file: undefined
      },
      _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
      hash: "6e70b2ef282f6cf29656e210a0ac7bac910a8ce8"
    };
    var coverage = global[gcv] || (global[gcv] = {});
    if (!coverage[path] || coverage[path].hash !== hash) {
      coverage[path] = coverageData;
    }
    var actualCoverage = coverage[path];
    {
      // @ts-ignore
      cov_kjx38yrlb = function () {
        return actualCoverage;
      };
    }
    return actualCoverage;
  }
  cov_kjx38yrlb(); /**
                   * --------------------------------------------------------------------------
                   * CoreUI tooltip.js
                   * Licensed under MIT (https://github.com/coreui/coreui/blob/main/LICENSE)
                   *
                   * This component is a modified version of the Bootstrap's tooltip.js
                   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
                   * --------------------------------------------------------------------------
                   */
  const NAME$1 = (cov_kjx38yrlb().s[0]++, 'tooltip');
  const DISALLOWED_ATTRIBUTES = (cov_kjx38yrlb().s[1]++, new Set(['sanitize', 'allowList', 'sanitizeFn']));
  const CLASS_NAME_FADE = (cov_kjx38yrlb().s[2]++, 'fade');
  const CLASS_NAME_MODAL = (cov_kjx38yrlb().s[3]++, 'modal');
  const CLASS_NAME_SHOW = (cov_kjx38yrlb().s[4]++, 'show');
  const SELECTOR_TOOLTIP_INNER = (cov_kjx38yrlb().s[5]++, '.tooltip-inner');
  const SELECTOR_MODAL = (cov_kjx38yrlb().s[6]++, `.${CLASS_NAME_MODAL}`);
  const EVENT_MODAL_HIDE = (cov_kjx38yrlb().s[7]++, 'hide.coreui.modal');
  const TRIGGER_HOVER = (cov_kjx38yrlb().s[8]++, 'hover');
  const TRIGGER_FOCUS = (cov_kjx38yrlb().s[9]++, 'focus');
  const TRIGGER_CLICK = (cov_kjx38yrlb().s[10]++, 'click');
  const TRIGGER_MANUAL = (cov_kjx38yrlb().s[11]++, 'manual');
  const EVENT_HIDE = (cov_kjx38yrlb().s[12]++, 'hide');
  const EVENT_HIDDEN = (cov_kjx38yrlb().s[13]++, 'hidden');
  const EVENT_SHOW = (cov_kjx38yrlb().s[14]++, 'show');
  const EVENT_SHOWN = (cov_kjx38yrlb().s[15]++, 'shown');
  const EVENT_INSERTED = (cov_kjx38yrlb().s[16]++, 'inserted');
  const EVENT_CLICK = (cov_kjx38yrlb().s[17]++, 'click');
  const EVENT_FOCUSIN = (cov_kjx38yrlb().s[18]++, 'focusin');
  const EVENT_FOCUSOUT = (cov_kjx38yrlb().s[19]++, 'focusout');
  const EVENT_MOUSEENTER = (cov_kjx38yrlb().s[20]++, 'mouseenter');
  const EVENT_MOUSELEAVE = (cov_kjx38yrlb().s[21]++, 'mouseleave');
  const AttachmentMap = (cov_kjx38yrlb().s[22]++, {
    AUTO: 'auto',
    TOP: 'top',
    RIGHT: isRTL() ? (cov_kjx38yrlb().b[0][0]++, 'left') : (cov_kjx38yrlb().b[0][1]++, 'right'),
    BOTTOM: 'bottom',
    LEFT: isRTL() ? (cov_kjx38yrlb().b[1][0]++, 'right') : (cov_kjx38yrlb().b[1][1]++, 'left')
  });
  const Default$1 = (cov_kjx38yrlb().s[23]++, {
    allowList: DefaultAllowlist,
    animation: true,
    boundary: 'clippingParents',
    container: false,
    customClass: '',
    delay: 0,
    fallbackPlacements: ['top', 'right', 'bottom', 'left'],
    html: false,
    offset: [0, 6],
    placement: 'top',
    popperConfig: null,
    sanitize: true,
    sanitizeFn: null,
    selector: false,
    template: '<div class="tooltip" role="tooltip">' + '<div class="tooltip-arrow"></div>' + '<div class="tooltip-inner"></div>' + '</div>',
    title: '',
    trigger: 'hover focus'
  });
  const DefaultType$1 = (cov_kjx38yrlb().s[24]++, {
    allowList: 'object',
    animation: 'boolean',
    boundary: '(string|element)',
    container: '(string|element|boolean)',
    customClass: '(string|function)',
    delay: '(number|object)',
    fallbackPlacements: 'array',
    html: 'boolean',
    offset: '(array|string|function)',
    placement: '(string|function)',
    popperConfig: '(null|object|function)',
    sanitize: 'boolean',
    sanitizeFn: '(null|function)',
    selector: '(string|boolean)',
    template: 'string',
    title: '(string|element|function)',
    trigger: 'string'
  }); /**
      * Class definition
      */
  class Tooltip extends BaseComponent {
    constructor(element, config) {
      cov_kjx38yrlb().f[0]++;
      cov_kjx38yrlb().s[25]++;
      if (typeof Popper === 'undefined') {
        cov_kjx38yrlb().b[2][0]++;
        cov_kjx38yrlb().s[26]++;
        throw new TypeError('Bootstrap\'s tooltips require Popper (https://popper.js.org)');
      } else {
        cov_kjx38yrlb().b[2][1]++;
      }
      cov_kjx38yrlb().s[27]++;
      super(element, config); // Private
      cov_kjx38yrlb().s[28]++;
      this._isEnabled = true;
      cov_kjx38yrlb().s[29]++;
      this._timeout = 0;
      cov_kjx38yrlb().s[30]++;
      this._isHovered = null;
      cov_kjx38yrlb().s[31]++;
      this._activeTrigger = {};
      cov_kjx38yrlb().s[32]++;
      this._popper = null;
      cov_kjx38yrlb().s[33]++;
      this._templateFactory = null;
      cov_kjx38yrlb().s[34]++;
      this._newContent = null; // Protected
      cov_kjx38yrlb().s[35]++;
      this.tip = null;
      cov_kjx38yrlb().s[36]++;
      this._setListeners();
      cov_kjx38yrlb().s[37]++;
      if (!this._config.selector) {
        cov_kjx38yrlb().b[3][0]++;
        cov_kjx38yrlb().s[38]++;
        this._fixTitle();
      } else {
        cov_kjx38yrlb().b[3][1]++;
      }
    } // Getters
    static get Default() {
      cov_kjx38yrlb().f[1]++;
      cov_kjx38yrlb().s[39]++;
      return Default$1;
    }
    static get DefaultType() {
      cov_kjx38yrlb().f[2]++;
      cov_kjx38yrlb().s[40]++;
      return DefaultType$1;
    }
    static get NAME() {
      cov_kjx38yrlb().f[3]++;
      cov_kjx38yrlb().s[41]++;
      return NAME$1;
    } // Public
    enable() {
      cov_kjx38yrlb().f[4]++;
      cov_kjx38yrlb().s[42]++;
      this._isEnabled = true;
    }
    disable() {
      cov_kjx38yrlb().f[5]++;
      cov_kjx38yrlb().s[43]++;
      this._isEnabled = false;
    }
    toggleEnabled() {
      cov_kjx38yrlb().f[6]++;
      cov_kjx38yrlb().s[44]++;
      this._isEnabled = !this._isEnabled;
    }
    toggle() {
      cov_kjx38yrlb().f[7]++;
      cov_kjx38yrlb().s[45]++;
      if (!this._isEnabled) {
        cov_kjx38yrlb().b[4][0]++;
        cov_kjx38yrlb().s[46]++;
        return;
      } else {
        cov_kjx38yrlb().b[4][1]++;
      }
      cov_kjx38yrlb().s[47]++;
      this._activeTrigger.click = !this._activeTrigger.click;
      cov_kjx38yrlb().s[48]++;
      if (this._isShown()) {
        cov_kjx38yrlb().b[5][0]++;
        cov_kjx38yrlb().s[49]++;
        this._leave();
        cov_kjx38yrlb().s[50]++;
        return;
      } else {
        cov_kjx38yrlb().b[5][1]++;
      }
      cov_kjx38yrlb().s[51]++;
      this._enter();
    }
    dispose() {
      cov_kjx38yrlb().f[8]++;
      cov_kjx38yrlb().s[52]++;
      clearTimeout(this._timeout);
      cov_kjx38yrlb().s[53]++;
      EventHandler.off(this._element.closest(SELECTOR_MODAL), EVENT_MODAL_HIDE, this._hideModalHandler);
      cov_kjx38yrlb().s[54]++;
      if (this._element.getAttribute('data-coreui-original-title')) {
        cov_kjx38yrlb().b[6][0]++;
        cov_kjx38yrlb().s[55]++;
        this._element.setAttribute('title', this._element.getAttribute('data-coreui-original-title'));
      } else {
        cov_kjx38yrlb().b[6][1]++;
      }
      cov_kjx38yrlb().s[56]++;
      this._disposePopper();
      cov_kjx38yrlb().s[57]++;
      super.dispose();
    }
    show() {
      cov_kjx38yrlb().f[9]++;
      cov_kjx38yrlb().s[58]++;
      if (this._element.style.display === 'none') {
        cov_kjx38yrlb().b[7][0]++;
        cov_kjx38yrlb().s[59]++;
        throw new Error('Please use show on visible elements');
      } else {
        cov_kjx38yrlb().b[7][1]++;
      }
      cov_kjx38yrlb().s[60]++;
      if (!((cov_kjx38yrlb().b[9][0]++, this._isWithContent()) && (cov_kjx38yrlb().b[9][1]++, this._isEnabled))) {
        cov_kjx38yrlb().b[8][0]++;
        cov_kjx38yrlb().s[61]++;
        return;
      } else {
        cov_kjx38yrlb().b[8][1]++;
      }
      const showEvent = (cov_kjx38yrlb().s[62]++, EventHandler.trigger(this._element, this.constructor.eventName(EVENT_SHOW)));
      const shadowRoot = (cov_kjx38yrlb().s[63]++, findShadowRoot(this._element));
      const isInTheDom = (cov_kjx38yrlb().s[64]++, ((cov_kjx38yrlb().b[10][0]++, shadowRoot) || (cov_kjx38yrlb().b[10][1]++, this._element.ownerDocument.documentElement)).contains(this._element));
      cov_kjx38yrlb().s[65]++;
      if ((cov_kjx38yrlb().b[12][0]++, showEvent.defaultPrevented) || (cov_kjx38yrlb().b[12][1]++, !isInTheDom)) {
        cov_kjx38yrlb().b[11][0]++;
        cov_kjx38yrlb().s[66]++;
        return;
      } else {
        cov_kjx38yrlb().b[11][1]++;
      } // TODO: v6 remove this or make it optional
      cov_kjx38yrlb().s[67]++;
      this._disposePopper();
      const tip = (cov_kjx38yrlb().s[68]++, this._getTipElement());
      cov_kjx38yrlb().s[69]++;
      this._element.setAttribute('aria-describedby', tip.getAttribute('id'));
      const {
        container
      } = (cov_kjx38yrlb().s[70]++, this._config);
      cov_kjx38yrlb().s[71]++;
      if (!this._element.ownerDocument.documentElement.contains(this.tip)) {
        cov_kjx38yrlb().b[13][0]++;
        cov_kjx38yrlb().s[72]++;
        container.append(tip);
        cov_kjx38yrlb().s[73]++;
        EventHandler.trigger(this._element, this.constructor.eventName(EVENT_INSERTED));
      } else {
        cov_kjx38yrlb().b[13][1]++;
      }
      cov_kjx38yrlb().s[74]++;
      this._popper = this._createPopper(tip);
      cov_kjx38yrlb().s[75]++;
      tip.classList.add(CLASS_NAME_SHOW); // If this is a touch-enabled device we add extra
      // empty mouseover listeners to the body's immediate children;
      // only needed because of broken event delegation on iOS
      // https://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html
      cov_kjx38yrlb().s[76]++;
      if ('ontouchstart' in document.documentElement) {
        cov_kjx38yrlb().b[14][0]++;
        cov_kjx38yrlb().s[77]++;
        for (const element of [].concat(...document.body.children)) {
          cov_kjx38yrlb().s[78]++;
          EventHandler.on(element, 'mouseover', noop);
        }
      } else {
        cov_kjx38yrlb().b[14][1]++;
      }
      cov_kjx38yrlb().s[79]++;
      const complete = () => {
        cov_kjx38yrlb().f[10]++;
        cov_kjx38yrlb().s[80]++;
        EventHandler.trigger(this._element, this.constructor.eventName(EVENT_SHOWN));
        cov_kjx38yrlb().s[81]++;
        if (this._isHovered === false) {
          cov_kjx38yrlb().b[15][0]++;
          cov_kjx38yrlb().s[82]++;
          this._leave();
        } else {
          cov_kjx38yrlb().b[15][1]++;
        }
        cov_kjx38yrlb().s[83]++;
        this._isHovered = false;
      };
      cov_kjx38yrlb().s[84]++;
      this._queueCallback(complete, this.tip, this._isAnimated());
    }
    hide() {
      cov_kjx38yrlb().f[11]++;
      cov_kjx38yrlb().s[85]++;
      if (!this._isShown()) {
        cov_kjx38yrlb().b[16][0]++;
        cov_kjx38yrlb().s[86]++;
        return;
      } else {
        cov_kjx38yrlb().b[16][1]++;
      }
      const hideEvent = (cov_kjx38yrlb().s[87]++, EventHandler.trigger(this._element, this.constructor.eventName(EVENT_HIDE)));
      cov_kjx38yrlb().s[88]++;
      if (hideEvent.defaultPrevented) {
        cov_kjx38yrlb().b[17][0]++;
        cov_kjx38yrlb().s[89]++;
        return;
      } else {
        cov_kjx38yrlb().b[17][1]++;
      }
      const tip = (cov_kjx38yrlb().s[90]++, this._getTipElement());
      cov_kjx38yrlb().s[91]++;
      tip.classList.remove(CLASS_NAME_SHOW); // If this is a touch-enabled device we remove the extra
      // empty mouseover listeners we added for iOS support
      cov_kjx38yrlb().s[92]++;
      if ('ontouchstart' in document.documentElement) {
        cov_kjx38yrlb().b[18][0]++;
        cov_kjx38yrlb().s[93]++;
        for (const element of [].concat(...document.body.children)) {
          cov_kjx38yrlb().s[94]++;
          EventHandler.off(element, 'mouseover', noop);
        }
      } else {
        cov_kjx38yrlb().b[18][1]++;
      }
      cov_kjx38yrlb().s[95]++;
      this._activeTrigger[TRIGGER_CLICK] = false;
      cov_kjx38yrlb().s[96]++;
      this._activeTrigger[TRIGGER_FOCUS] = false;
      cov_kjx38yrlb().s[97]++;
      this._activeTrigger[TRIGGER_HOVER] = false;
      cov_kjx38yrlb().s[98]++;
      this._isHovered = null; // it is a trick to support manual triggering
      cov_kjx38yrlb().s[99]++;
      const complete = () => {
        cov_kjx38yrlb().f[12]++;
        cov_kjx38yrlb().s[100]++;
        if (this._isWithActiveTrigger()) {
          cov_kjx38yrlb().b[19][0]++;
          cov_kjx38yrlb().s[101]++;
          return;
        } else {
          cov_kjx38yrlb().b[19][1]++;
        }
        cov_kjx38yrlb().s[102]++;
        if (!this._isHovered) {
          cov_kjx38yrlb().b[20][0]++;
          cov_kjx38yrlb().s[103]++;
          this._disposePopper();
        } else {
          cov_kjx38yrlb().b[20][1]++;
        }
        cov_kjx38yrlb().s[104]++;
        this._element.removeAttribute('aria-describedby');
        cov_kjx38yrlb().s[105]++;
        EventHandler.trigger(this._element, this.constructor.eventName(EVENT_HIDDEN));
      };
      cov_kjx38yrlb().s[106]++;
      this._queueCallback(complete, this.tip, this._isAnimated());
    }
    update() {
      cov_kjx38yrlb().f[13]++;
      cov_kjx38yrlb().s[107]++;
      if (this._popper) {
        cov_kjx38yrlb().b[21][0]++;
        cov_kjx38yrlb().s[108]++;
        this._popper.update();
      } else {
        cov_kjx38yrlb().b[21][1]++;
      }
    } // Protected
    _isWithContent() {
      cov_kjx38yrlb().f[14]++;
      cov_kjx38yrlb().s[109]++;
      return Boolean(this._getTitle());
    }
    _getTipElement() {
      cov_kjx38yrlb().f[15]++;
      cov_kjx38yrlb().s[110]++;
      if (!this.tip) {
        cov_kjx38yrlb().b[22][0]++;
        cov_kjx38yrlb().s[111]++;
        this.tip = this._createTipElement((cov_kjx38yrlb().b[23][0]++, this._newContent) || (cov_kjx38yrlb().b[23][1]++, this._getContentForTemplate()));
      } else {
        cov_kjx38yrlb().b[22][1]++;
      }
      cov_kjx38yrlb().s[112]++;
      return this.tip;
    }
    _createTipElement(content) {
      cov_kjx38yrlb().f[16]++;
      const tip = (cov_kjx38yrlb().s[113]++, this._getTemplateFactory(content).toHtml()); // TODO: remove this check in v6
      cov_kjx38yrlb().s[114]++;
      if (!tip) {
        cov_kjx38yrlb().b[24][0]++;
        cov_kjx38yrlb().s[115]++;
        return null;
      } else {
        cov_kjx38yrlb().b[24][1]++;
      }
      cov_kjx38yrlb().s[116]++;
      tip.classList.remove(CLASS_NAME_FADE, CLASS_NAME_SHOW); // TODO: v6 the following can be achieved with CSS only
      cov_kjx38yrlb().s[117]++;
      tip.classList.add(`bs-${this.constructor.NAME}-auto`);
      const tipId = (cov_kjx38yrlb().s[118]++, getUID(this.constructor.NAME).toString());
      cov_kjx38yrlb().s[119]++;
      tip.setAttribute('id', tipId);
      cov_kjx38yrlb().s[120]++;
      if (this._isAnimated()) {
        cov_kjx38yrlb().b[25][0]++;
        cov_kjx38yrlb().s[121]++;
        tip.classList.add(CLASS_NAME_FADE);
      } else {
        cov_kjx38yrlb().b[25][1]++;
      }
      cov_kjx38yrlb().s[122]++;
      return tip;
    }
    setContent(content) {
      cov_kjx38yrlb().f[17]++;
      cov_kjx38yrlb().s[123]++;
      this._newContent = content;
      cov_kjx38yrlb().s[124]++;
      if (this._isShown()) {
        cov_kjx38yrlb().b[26][0]++;
        cov_kjx38yrlb().s[125]++;
        this._disposePopper();
        cov_kjx38yrlb().s[126]++;
        this.show();
      } else {
        cov_kjx38yrlb().b[26][1]++;
      }
    }
    _getTemplateFactory(content) {
      cov_kjx38yrlb().f[18]++;
      cov_kjx38yrlb().s[127]++;
      if (this._templateFactory) {
        cov_kjx38yrlb().b[27][0]++;
        cov_kjx38yrlb().s[128]++;
        this._templateFactory.changeContent(content);
      } else {
        cov_kjx38yrlb().b[27][1]++;
        cov_kjx38yrlb().s[129]++;
        this._templateFactory = new TemplateFactory({
          ...this._config,
          // the `content` var has to be after `this._config`
          // to override config.content in case of popover
          content,
          extraClass: this._resolvePossibleFunction(this._config.customClass)
        });
      }
      cov_kjx38yrlb().s[130]++;
      return this._templateFactory;
    }
    _getContentForTemplate() {
      cov_kjx38yrlb().f[19]++;
      cov_kjx38yrlb().s[131]++;
      return {
        [SELECTOR_TOOLTIP_INNER]: this._getTitle()
      };
    }
    _getTitle() {
      cov_kjx38yrlb().f[20]++;
      cov_kjx38yrlb().s[132]++;
      return (cov_kjx38yrlb().b[28][0]++, this._resolvePossibleFunction(this._config.title)) || (cov_kjx38yrlb().b[28][1]++, this._element.getAttribute('data-coreui-original-title'));
    } // Private
    _initializeOnDelegatedTarget(event) {
      cov_kjx38yrlb().f[21]++;
      cov_kjx38yrlb().s[133]++;
      return this.constructor.getOrCreateInstance(event.delegateTarget, this._getDelegateConfig());
    }
    _isAnimated() {
      cov_kjx38yrlb().f[22]++;
      cov_kjx38yrlb().s[134]++;
      return (cov_kjx38yrlb().b[29][0]++, this._config.animation) || (cov_kjx38yrlb().b[29][1]++, this.tip) && (cov_kjx38yrlb().b[29][2]++, this.tip.classList.contains(CLASS_NAME_FADE));
    }
    _isShown() {
      cov_kjx38yrlb().f[23]++;
      cov_kjx38yrlb().s[135]++;
      return (cov_kjx38yrlb().b[30][0]++, this.tip) && (cov_kjx38yrlb().b[30][1]++, this.tip.classList.contains(CLASS_NAME_SHOW));
    }
    _createPopper(tip) {
      cov_kjx38yrlb().f[24]++;
      const placement = (cov_kjx38yrlb().s[136]++, execute(this._config.placement, [this, tip, this._element]));
      const attachment = (cov_kjx38yrlb().s[137]++, AttachmentMap[placement.toUpperCase()]);
      cov_kjx38yrlb().s[138]++;
      return createPopper(this._element, tip, this._getPopperConfig(attachment));
    }
    _getOffset() {
      cov_kjx38yrlb().f[25]++;
      const {
        offset
      } = (cov_kjx38yrlb().s[139]++, this._config);
      cov_kjx38yrlb().s[140]++;
      if (typeof offset === 'string') {
        cov_kjx38yrlb().b[31][0]++;
        cov_kjx38yrlb().s[141]++;
        return offset.split(',').map(value => {
          cov_kjx38yrlb().f[26]++;
          cov_kjx38yrlb().s[142]++;
          return Number.parseInt(value, 10);
        });
      } else {
        cov_kjx38yrlb().b[31][1]++;
      }
      cov_kjx38yrlb().s[143]++;
      if (typeof offset === 'function') {
        cov_kjx38yrlb().b[32][0]++;
        cov_kjx38yrlb().s[144]++;
        return popperData => {
          cov_kjx38yrlb().f[27]++;
          cov_kjx38yrlb().s[145]++;
          return offset(popperData, this._element);
        };
      } else {
        cov_kjx38yrlb().b[32][1]++;
      }
      cov_kjx38yrlb().s[146]++;
      return offset;
    }
    _resolvePossibleFunction(arg) {
      cov_kjx38yrlb().f[28]++;
      cov_kjx38yrlb().s[147]++;
      return execute(arg, [this._element, this._element]);
    }
    _getPopperConfig(attachment) {
      cov_kjx38yrlb().f[29]++;
      const defaultBsPopperConfig = (cov_kjx38yrlb().s[148]++, {
        placement: attachment,
        modifiers: [{
          name: 'flip',
          options: {
            fallbackPlacements: this._config.fallbackPlacements
          }
        }, {
          name: 'offset',
          options: {
            offset: this._getOffset()
          }
        }, {
          name: 'preventOverflow',
          options: {
            boundary: this._config.boundary
          }
        }, {
          name: 'arrow',
          options: {
            element: `.${this.constructor.NAME}-arrow`
          }
        }, {
          name: 'preSetPlacement',
          enabled: true,
          phase: 'beforeMain',
          fn: data => {
            cov_kjx38yrlb().f[30]++;
            cov_kjx38yrlb().s[149]++; // Pre-set Popper's placement attribute in order to read the arrow sizes properly.
            // Otherwise, Popper mixes up the width and height dimensions since the initial arrow style is for top placement
            this._getTipElement().setAttribute('data-popper-placement', data.state.placement);
          }
        }]
      });
      cov_kjx38yrlb().s[150]++;
      return {
        ...defaultBsPopperConfig,
        ...execute(this._config.popperConfig, [undefined, defaultBsPopperConfig])
      };
    }
    _setListeners() {
      cov_kjx38yrlb().f[31]++;
      const triggers = (cov_kjx38yrlb().s[151]++, this._config.trigger.split(' '));
      cov_kjx38yrlb().s[152]++;
      for (const trigger of triggers) {
        cov_kjx38yrlb().s[153]++;
        if (trigger === 'click') {
          cov_kjx38yrlb().b[33][0]++;
          cov_kjx38yrlb().s[154]++;
          EventHandler.on(this._element, this.constructor.eventName(EVENT_CLICK), this._config.selector, event => {
            cov_kjx38yrlb().f[32]++;
            const context = (cov_kjx38yrlb().s[155]++, this._initializeOnDelegatedTarget(event));
            cov_kjx38yrlb().s[156]++;
            context.toggle();
          });
        } else {
          cov_kjx38yrlb().b[33][1]++;
          cov_kjx38yrlb().s[157]++;
          if (trigger !== TRIGGER_MANUAL) {
            cov_kjx38yrlb().b[34][0]++;
            const eventIn = (cov_kjx38yrlb().s[158]++, trigger === TRIGGER_HOVER ? (cov_kjx38yrlb().b[35][0]++, this.constructor.eventName(EVENT_MOUSEENTER)) : (cov_kjx38yrlb().b[35][1]++, this.constructor.eventName(EVENT_FOCUSIN)));
            const eventOut = (cov_kjx38yrlb().s[159]++, trigger === TRIGGER_HOVER ? (cov_kjx38yrlb().b[36][0]++, this.constructor.eventName(EVENT_MOUSELEAVE)) : (cov_kjx38yrlb().b[36][1]++, this.constructor.eventName(EVENT_FOCUSOUT)));
            cov_kjx38yrlb().s[160]++;
            EventHandler.on(this._element, eventIn, this._config.selector, event => {
              cov_kjx38yrlb().f[33]++;
              const context = (cov_kjx38yrlb().s[161]++, this._initializeOnDelegatedTarget(event));
              cov_kjx38yrlb().s[162]++;
              context._activeTrigger[event.type === 'focusin' ? (cov_kjx38yrlb().b[37][0]++, TRIGGER_FOCUS) : (cov_kjx38yrlb().b[37][1]++, TRIGGER_HOVER)] = true;
              cov_kjx38yrlb().s[163]++;
              context._enter();
            });
            cov_kjx38yrlb().s[164]++;
            EventHandler.on(this._element, eventOut, this._config.selector, event => {
              cov_kjx38yrlb().f[34]++;
              const context = (cov_kjx38yrlb().s[165]++, this._initializeOnDelegatedTarget(event));
              cov_kjx38yrlb().s[166]++;
              context._activeTrigger[event.type === 'focusout' ? (cov_kjx38yrlb().b[38][0]++, TRIGGER_FOCUS) : (cov_kjx38yrlb().b[38][1]++, TRIGGER_HOVER)] = context._element.contains(event.relatedTarget);
              cov_kjx38yrlb().s[167]++;
              context._leave();
            });
          } else {
            cov_kjx38yrlb().b[34][1]++;
          }
        }
      }
      cov_kjx38yrlb().s[168]++;
      this._hideModalHandler = () => {
        cov_kjx38yrlb().f[35]++;
        cov_kjx38yrlb().s[169]++;
        if (this._element) {
          cov_kjx38yrlb().b[39][0]++;
          cov_kjx38yrlb().s[170]++;
          this.hide();
        } else {
          cov_kjx38yrlb().b[39][1]++;
        }
      };
      cov_kjx38yrlb().s[171]++;
      EventHandler.on(this._element.closest(SELECTOR_MODAL), EVENT_MODAL_HIDE, this._hideModalHandler);
    }
    _fixTitle() {
      cov_kjx38yrlb().f[36]++;
      const title = (cov_kjx38yrlb().s[172]++, this._element.getAttribute('title'));
      cov_kjx38yrlb().s[173]++;
      if (!title) {
        cov_kjx38yrlb().b[40][0]++;
        cov_kjx38yrlb().s[174]++;
        return;
      } else {
        cov_kjx38yrlb().b[40][1]++;
      }
      cov_kjx38yrlb().s[175]++;
      if ((cov_kjx38yrlb().b[42][0]++, !this._element.getAttribute('aria-label')) && (cov_kjx38yrlb().b[42][1]++, !this._element.textContent.trim())) {
        cov_kjx38yrlb().b[41][0]++;
        cov_kjx38yrlb().s[176]++;
        this._element.setAttribute('aria-label', title);
      } else {
        cov_kjx38yrlb().b[41][1]++;
      }
      cov_kjx38yrlb().s[177]++;
      this._element.setAttribute('data-coreui-original-title', title); // DO NOT USE IT. Is only for backwards compatibility
      cov_kjx38yrlb().s[178]++;
      this._element.removeAttribute('title');
    }
    _enter() {
      cov_kjx38yrlb().f[37]++;
      cov_kjx38yrlb().s[179]++;
      if ((cov_kjx38yrlb().b[44][0]++, this._isShown()) || (cov_kjx38yrlb().b[44][1]++, this._isHovered)) {
        cov_kjx38yrlb().b[43][0]++;
        cov_kjx38yrlb().s[180]++;
        this._isHovered = true;
        cov_kjx38yrlb().s[181]++;
        return;
      } else {
        cov_kjx38yrlb().b[43][1]++;
      }
      cov_kjx38yrlb().s[182]++;
      this._isHovered = true;
      cov_kjx38yrlb().s[183]++;
      this._setTimeout(() => {
        cov_kjx38yrlb().f[38]++;
        cov_kjx38yrlb().s[184]++;
        if (this._isHovered) {
          cov_kjx38yrlb().b[45][0]++;
          cov_kjx38yrlb().s[185]++;
          this.show();
        } else {
          cov_kjx38yrlb().b[45][1]++;
        }
      }, this._config.delay.show);
    }
    _leave() {
      cov_kjx38yrlb().f[39]++;
      cov_kjx38yrlb().s[186]++;
      if (this._isWithActiveTrigger()) {
        cov_kjx38yrlb().b[46][0]++;
        cov_kjx38yrlb().s[187]++;
        return;
      } else {
        cov_kjx38yrlb().b[46][1]++;
      }
      cov_kjx38yrlb().s[188]++;
      this._isHovered = false;
      cov_kjx38yrlb().s[189]++;
      this._setTimeout(() => {
        cov_kjx38yrlb().f[40]++;
        cov_kjx38yrlb().s[190]++;
        if (!this._isHovered) {
          cov_kjx38yrlb().b[47][0]++;
          cov_kjx38yrlb().s[191]++;
          this.hide();
        } else {
          cov_kjx38yrlb().b[47][1]++;
        }
      }, this._config.delay.hide);
    }
    _setTimeout(handler, timeout) {
      cov_kjx38yrlb().f[41]++;
      cov_kjx38yrlb().s[192]++;
      clearTimeout(this._timeout);
      cov_kjx38yrlb().s[193]++;
      this._timeout = setTimeout(handler, timeout);
    }
    _isWithActiveTrigger() {
      cov_kjx38yrlb().f[42]++;
      cov_kjx38yrlb().s[194]++;
      return Object.values(this._activeTrigger).includes(true);
    }
    _getConfig(config) {
      cov_kjx38yrlb().f[43]++;
      const dataAttributes = (cov_kjx38yrlb().s[195]++, Manipulator.getDataAttributes(this._element));
      cov_kjx38yrlb().s[196]++;
      for (const dataAttribute of Object.keys(dataAttributes)) {
        cov_kjx38yrlb().s[197]++;
        if (DISALLOWED_ATTRIBUTES.has(dataAttribute)) {
          cov_kjx38yrlb().b[48][0]++;
          cov_kjx38yrlb().s[198]++;
          delete dataAttributes[dataAttribute];
        } else {
          cov_kjx38yrlb().b[48][1]++;
        }
      }
      cov_kjx38yrlb().s[199]++;
      config = {
        ...dataAttributes,
        ...((cov_kjx38yrlb().b[50][0]++, typeof config === 'object') && (cov_kjx38yrlb().b[50][1]++, config) ? (cov_kjx38yrlb().b[49][0]++, config) : (cov_kjx38yrlb().b[49][1]++, {}))
      };
      cov_kjx38yrlb().s[200]++;
      config = this._mergeConfigObj(config);
      cov_kjx38yrlb().s[201]++;
      config = this._configAfterMerge(config);
      cov_kjx38yrlb().s[202]++;
      this._typeCheckConfig(config);
      cov_kjx38yrlb().s[203]++;
      return config;
    }
    _configAfterMerge(config) {
      cov_kjx38yrlb().f[44]++;
      cov_kjx38yrlb().s[204]++;
      config.container = config.container === false ? (cov_kjx38yrlb().b[51][0]++, document.body) : (cov_kjx38yrlb().b[51][1]++, getElement(config.container));
      cov_kjx38yrlb().s[205]++;
      if (typeof config.delay === 'number') {
        cov_kjx38yrlb().b[52][0]++;
        cov_kjx38yrlb().s[206]++;
        config.delay = {
          show: config.delay,
          hide: config.delay
        };
      } else {
        cov_kjx38yrlb().b[52][1]++;
      }
      cov_kjx38yrlb().s[207]++;
      if (typeof config.title === 'number') {
        cov_kjx38yrlb().b[53][0]++;
        cov_kjx38yrlb().s[208]++;
        config.title = config.title.toString();
      } else {
        cov_kjx38yrlb().b[53][1]++;
      }
      cov_kjx38yrlb().s[209]++;
      if (typeof config.content === 'number') {
        cov_kjx38yrlb().b[54][0]++;
        cov_kjx38yrlb().s[210]++;
        config.content = config.content.toString();
      } else {
        cov_kjx38yrlb().b[54][1]++;
      }
      cov_kjx38yrlb().s[211]++;
      return config;
    }
    _getDelegateConfig() {
      cov_kjx38yrlb().f[45]++;
      const config = (cov_kjx38yrlb().s[212]++, {});
      cov_kjx38yrlb().s[213]++;
      for (const [key, value] of Object.entries(this._config)) {
        cov_kjx38yrlb().s[214]++;
        if (this.constructor.Default[key] !== value) {
          cov_kjx38yrlb().b[55][0]++;
          cov_kjx38yrlb().s[215]++;
          config[key] = value;
        } else {
          cov_kjx38yrlb().b[55][1]++;
        }
      }
      cov_kjx38yrlb().s[216]++;
      config.selector = false;
      cov_kjx38yrlb().s[217]++;
      config.trigger = 'manual'; // In the future can be replaced with:
      // const keysWithDifferentValues = Object.entries(this._config).filter(entry => this.constructor.Default[entry[0]] !== this._config[entry[0]])
      // `Object.fromEntries(keysWithDifferentValues)`
      cov_kjx38yrlb().s[218]++;
      return config;
    }
    _disposePopper() {
      cov_kjx38yrlb().f[46]++;
      cov_kjx38yrlb().s[219]++;
      if (this._popper) {
        cov_kjx38yrlb().b[56][0]++;
        cov_kjx38yrlb().s[220]++;
        this._popper.destroy();
        cov_kjx38yrlb().s[221]++;
        this._popper = null;
      } else {
        cov_kjx38yrlb().b[56][1]++;
      }
      cov_kjx38yrlb().s[222]++;
      if (this.tip) {
        cov_kjx38yrlb().b[57][0]++;
        cov_kjx38yrlb().s[223]++;
        this.tip.remove();
        cov_kjx38yrlb().s[224]++;
        this.tip = null;
      } else {
        cov_kjx38yrlb().b[57][1]++;
      }
    } // Static
    static jQueryInterface(config) {
      cov_kjx38yrlb().f[47]++;
      cov_kjx38yrlb().s[225]++;
      return this.each(function () {
        cov_kjx38yrlb().f[48]++;
        const data = (cov_kjx38yrlb().s[226]++, Tooltip.getOrCreateInstance(this, config));
        cov_kjx38yrlb().s[227]++;
        if (typeof config !== 'string') {
          cov_kjx38yrlb().b[58][0]++;
          cov_kjx38yrlb().s[228]++;
          return;
        } else {
          cov_kjx38yrlb().b[58][1]++;
        }
        cov_kjx38yrlb().s[229]++;
        if (typeof data[config] === 'undefined') {
          cov_kjx38yrlb().b[59][0]++;
          cov_kjx38yrlb().s[230]++;
          throw new TypeError(`No method named "${config}"`);
        } else {
          cov_kjx38yrlb().b[59][1]++;
        }
        cov_kjx38yrlb().s[231]++;
        data[config]();
      });
    }
  } /**
    * jQuery
    */
  cov_kjx38yrlb().s[232]++;
  defineJQueryPlugin(Tooltip);

  function cov_kk9p9l09v() {
    var path = "/Users/lukaszholeczek/Projekty/CoreUI/mrholek/coreui-pro/js/src/popover.js";
    var hash = "640b9011573f5c8fec51e9ddfb039feec74c98e9";
    var global = new Function("return this")();
    var gcv = "__coverage__";
    var coverageData = {
      path: "/Users/lukaszholeczek/Projekty/CoreUI/mrholek/coreui-pro/js/src/popover.js",
      statementMap: {
        "0": {
          start: {
            line: 18,
            column: 13
          },
          end: {
            line: 18,
            column: 22
          }
        },
        "1": {
          start: {
            line: 20,
            column: 23
          },
          end: {
            line: 20,
            column: 40
          }
        },
        "2": {
          start: {
            line: 21,
            column: 25
          },
          end: {
            line: 21,
            column: 40
          }
        },
        "3": {
          start: {
            line: 23,
            column: 16
          },
          end: {
            line: 34,
            column: 1
          }
        },
        "4": {
          start: {
            line: 36,
            column: 20
          },
          end: {
            line: 39,
            column: 1
          }
        },
        "5": {
          start: {
            line: 48,
            column: 4
          },
          end: {
            line: 48,
            column: 18
          }
        },
        "6": {
          start: {
            line: 52,
            column: 4
          },
          end: {
            line: 52,
            column: 22
          }
        },
        "7": {
          start: {
            line: 56,
            column: 4
          },
          end: {
            line: 56,
            column: 15
          }
        },
        "8": {
          start: {
            line: 61,
            column: 4
          },
          end: {
            line: 61,
            column: 49
          }
        },
        "9": {
          start: {
            line: 66,
            column: 4
          },
          end: {
            line: 69,
            column: 5
          }
        },
        "10": {
          start: {
            line: 73,
            column: 4
          },
          end: {
            line: 73,
            column: 62
          }
        },
        "11": {
          start: {
            line: 78,
            column: 4
          },
          end: {
            line: 90,
            column: 6
          }
        },
        "12": {
          start: {
            line: 79,
            column: 19
          },
          end: {
            line: 79,
            column: 60
          }
        },
        "13": {
          start: {
            line: 81,
            column: 6
          },
          end: {
            line: 83,
            column: 7
          }
        },
        "14": {
          start: {
            line: 82,
            column: 8
          },
          end: {
            line: 82,
            column: 14
          }
        },
        "15": {
          start: {
            line: 85,
            column: 6
          },
          end: {
            line: 87,
            column: 7
          }
        },
        "16": {
          start: {
            line: 86,
            column: 8
          },
          end: {
            line: 86,
            column: 58
          }
        },
        "17": {
          start: {
            line: 89,
            column: 6
          },
          end: {
            line: 89,
            column: 20
          }
        },
        "18": {
          start: {
            line: 98,
            column: 0
          },
          end: {
            line: 98,
            column: 27
          }
        }
      },
      fnMap: {
        "0": {
          name: "(anonymous_0)",
          decl: {
            start: {
              line: 47,
              column: 2
            },
            end: {
              line: 47,
              column: 3
            }
          },
          loc: {
            start: {
              line: 47,
              column: 23
            },
            end: {
              line: 49,
              column: 3
            }
          },
          line: 47
        },
        "1": {
          name: "(anonymous_1)",
          decl: {
            start: {
              line: 51,
              column: 2
            },
            end: {
              line: 51,
              column: 3
            }
          },
          loc: {
            start: {
              line: 51,
              column: 27
            },
            end: {
              line: 53,
              column: 3
            }
          },
          line: 51
        },
        "2": {
          name: "(anonymous_2)",
          decl: {
            start: {
              line: 55,
              column: 2
            },
            end: {
              line: 55,
              column: 3
            }
          },
          loc: {
            start: {
              line: 55,
              column: 20
            },
            end: {
              line: 57,
              column: 3
            }
          },
          line: 55
        },
        "3": {
          name: "(anonymous_3)",
          decl: {
            start: {
              line: 60,
              column: 2
            },
            end: {
              line: 60,
              column: 3
            }
          },
          loc: {
            start: {
              line: 60,
              column: 19
            },
            end: {
              line: 62,
              column: 3
            }
          },
          line: 60
        },
        "4": {
          name: "(anonymous_4)",
          decl: {
            start: {
              line: 65,
              column: 2
            },
            end: {
              line: 65,
              column: 3
            }
          },
          loc: {
            start: {
              line: 65,
              column: 27
            },
            end: {
              line: 70,
              column: 3
            }
          },
          line: 65
        },
        "5": {
          name: "(anonymous_5)",
          decl: {
            start: {
              line: 72,
              column: 2
            },
            end: {
              line: 72,
              column: 3
            }
          },
          loc: {
            start: {
              line: 72,
              column: 16
            },
            end: {
              line: 74,
              column: 3
            }
          },
          line: 72
        },
        "6": {
          name: "(anonymous_6)",
          decl: {
            start: {
              line: 77,
              column: 2
            },
            end: {
              line: 77,
              column: 3
            }
          },
          loc: {
            start: {
              line: 77,
              column: 33
            },
            end: {
              line: 91,
              column: 3
            }
          },
          line: 77
        },
        "7": {
          name: "(anonymous_7)",
          decl: {
            start: {
              line: 78,
              column: 21
            },
            end: {
              line: 78,
              column: 22
            }
          },
          loc: {
            start: {
              line: 78,
              column: 33
            },
            end: {
              line: 90,
              column: 5
            }
          },
          line: 78
        }
      },
      branchMap: {
        "0": {
          loc: {
            start: {
              line: 61,
              column: 11
            },
            end: {
              line: 61,
              column: 49
            }
          },
          type: "binary-expr",
          locations: [{
            start: {
              line: 61,
              column: 11
            },
            end: {
              line: 61,
              column: 27
            }
          }, {
            start: {
              line: 61,
              column: 31
            },
            end: {
              line: 61,
              column: 49
            }
          }],
          line: 61
        },
        "1": {
          loc: {
            start: {
              line: 81,
              column: 6
            },
            end: {
              line: 83,
              column: 7
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 81,
              column: 6
            },
            end: {
              line: 83,
              column: 7
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 81
        },
        "2": {
          loc: {
            start: {
              line: 85,
              column: 6
            },
            end: {
              line: 87,
              column: 7
            }
          },
          type: "if",
          locations: [{
            start: {
              line: 85,
              column: 6
            },
            end: {
              line: 87,
              column: 7
            }
          }, {
            start: {
              line: undefined,
              column: undefined
            },
            end: {
              line: undefined,
              column: undefined
            }
          }],
          line: 85
        }
      },
      s: {
        "0": 0,
        "1": 0,
        "2": 0,
        "3": 0,
        "4": 0,
        "5": 0,
        "6": 0,
        "7": 0,
        "8": 0,
        "9": 0,
        "10": 0,
        "11": 0,
        "12": 0,
        "13": 0,
        "14": 0,
        "15": 0,
        "16": 0,
        "17": 0,
        "18": 0
      },
      f: {
        "0": 0,
        "1": 0,
        "2": 0,
        "3": 0,
        "4": 0,
        "5": 0,
        "6": 0,
        "7": 0
      },
      b: {
        "0": [0, 0],
        "1": [0, 0],
        "2": [0, 0]
      },
      inputSourceMap: {
        version: 3,
        sources: ["/Users/lukaszholeczek/Projekty/CoreUI/mrholek/coreui-pro/js/src/popover.js"],
        sourcesContent: ["/**\n * --------------------------------------------------------------------------\n * CoreUI popover.js\n * Licensed under MIT (https://github.com/coreui/coreui/blob/main/LICENSE)\n *\n * This component is a modified version of the Bootstrap's popover.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport Tooltip from './tooltip.js'\nimport { defineJQueryPlugin } from './util/index.js'\n\n/**\n * Constants\n */\n\nconst NAME = 'popover'\n\nconst SELECTOR_TITLE = '.popover-header'\nconst SELECTOR_CONTENT = '.popover-body'\n\nconst Default = {\n  ...Tooltip.Default,\n  content: '',\n  offset: [0, 8],\n  placement: 'right',\n  template: '<div class=\"popover\" role=\"tooltip\">' +\n    '<div class=\"popover-arrow\"></div>' +\n    '<h3 class=\"popover-header\"></h3>' +\n    '<div class=\"popover-body\"></div>' +\n    '</div>',\n  trigger: 'click'\n}\n\nconst DefaultType = {\n  ...Tooltip.DefaultType,\n  content: '(null|string|element|function)'\n}\n\n/**\n * Class definition\n */\n\nclass Popover extends Tooltip {\n  // Getters\n  static get Default() {\n    return Default\n  }\n\n  static get DefaultType() {\n    return DefaultType\n  }\n\n  static get NAME() {\n    return NAME\n  }\n\n  // Overrides\n  _isWithContent() {\n    return this._getTitle() || this._getContent()\n  }\n\n  // Private\n  _getContentForTemplate() {\n    return {\n      [SELECTOR_TITLE]: this._getTitle(),\n      [SELECTOR_CONTENT]: this._getContent()\n    }\n  }\n\n  _getContent() {\n    return this._resolvePossibleFunction(this._config.content)\n  }\n\n  // Static\n  static jQueryInterface(config) {\n    return this.each(function () {\n      const data = Popover.getOrCreateInstance(this, config)\n\n      if (typeof config !== 'string') {\n        return\n      }\n\n      if (typeof data[config] === 'undefined') {\n        throw new TypeError(`No method named \"${config}\"`)\n      }\n\n      data[config]()\n    })\n  }\n}\n\n/**\n * jQuery\n */\n\ndefineJQueryPlugin(Popover)\n\nexport default Popover\n"],
        names: [],
        mappings: "AAAA,CAAC,CAAC;AACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5E,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzE,CAAC;AACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAEnD,CAAC,CAAC;AACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC;;AAEF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAErB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;AAEvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB;;AAEA,CAAC,CAAC,CA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",
        file: undefined
      },
      _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
      hash: "640b9011573f5c8fec51e9ddfb039feec74c98e9"
    };
    var coverage = global[gcv] || (global[gcv] = {});
    if (!coverage[path] || coverage[path].hash !== hash) {
      coverage[path] = coverageData;
    }
    var actualCoverage = coverage[path];
    {
      // @ts-ignore
      cov_kk9p9l09v = function () {
        return actualCoverage;
      };
    }
    return actualCoverage;
  }
  cov_kk9p9l09v(); /**
                   * --------------------------------------------------------------------------
                   * CoreUI popover.js
                   * Licensed under MIT (https://github.com/coreui/coreui/blob/main/LICENSE)
                   *
                   * This component is a modified version of the Bootstrap's popover.js
                   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
                   * --------------------------------------------------------------------------
                   */
  const NAME = (cov_kk9p9l09v().s[0]++, 'popover');
  const SELECTOR_TITLE = (cov_kk9p9l09v().s[1]++, '.popover-header');
  const SELECTOR_CONTENT = (cov_kk9p9l09v().s[2]++, '.popover-body');
  const Default = (cov_kk9p9l09v().s[3]++, {
    ...Tooltip.Default,
    content: '',
    offset: [0, 8],
    placement: 'right',
    template: '<div class="popover" role="tooltip">' + '<div class="popover-arrow"></div>' + '<h3 class="popover-header"></h3>' + '<div class="popover-body"></div>' + '</div>',
    trigger: 'click'
  });
  const DefaultType = (cov_kk9p9l09v().s[4]++, {
    ...Tooltip.DefaultType,
    content: '(null|string|element|function)'
  }); /**
      * Class definition
      */
  class Popover extends Tooltip {
    // Getters
    static get Default() {
      cov_kk9p9l09v().f[0]++;
      cov_kk9p9l09v().s[5]++;
      return Default;
    }
    static get DefaultType() {
      cov_kk9p9l09v().f[1]++;
      cov_kk9p9l09v().s[6]++;
      return DefaultType;
    }
    static get NAME() {
      cov_kk9p9l09v().f[2]++;
      cov_kk9p9l09v().s[7]++;
      return NAME;
    } // Overrides
    _isWithContent() {
      cov_kk9p9l09v().f[3]++;
      cov_kk9p9l09v().s[8]++;
      return (cov_kk9p9l09v().b[0][0]++, this._getTitle()) || (cov_kk9p9l09v().b[0][1]++, this._getContent());
    } // Private
    _getContentForTemplate() {
      cov_kk9p9l09v().f[4]++;
      cov_kk9p9l09v().s[9]++;
      return {
        [SELECTOR_TITLE]: this._getTitle(),
        [SELECTOR_CONTENT]: this._getContent()
      };
    }
    _getContent() {
      cov_kk9p9l09v().f[5]++;
      cov_kk9p9l09v().s[10]++;
      return this._resolvePossibleFunction(this._config.content);
    } // Static
    static jQueryInterface(config) {
      cov_kk9p9l09v().f[6]++;
      cov_kk9p9l09v().s[11]++;
      return this.each(function () {
        cov_kk9p9l09v().f[7]++;
        const data = (cov_kk9p9l09v().s[12]++, Popover.getOrCreateInstance(this, config));
        cov_kk9p9l09v().s[13]++;
        if (typeof config !== 'string') {
          cov_kk9p9l09v().b[1][0]++;
          cov_kk9p9l09v().s[14]++;
          return;
        } else {
          cov_kk9p9l09v().b[1][1]++;
        }
        cov_kk9p9l09v().s[15]++;
        if (typeof data[config] === 'undefined') {
          cov_kk9p9l09v().b[2][0]++;
          cov_kk9p9l09v().s[16]++;
          throw new TypeError(`No method named "${config}"`);
        } else {
          cov_kk9p9l09v().b[2][1]++;
        }
        cov_kk9p9l09v().s[17]++;
        data[config]();
      });
    }
  } /**
    * jQuery
    */
  cov_kk9p9l09v().s[18]++;
  defineJQueryPlugin(Popover);

  const fixtureId = 'fixture';
  const getFixture = () => {
    let fixtureElement = document.getElementById(fixtureId);
    if (!fixtureElement) {
      fixtureElement = document.createElement('div');
      fixtureElement.setAttribute('id', fixtureId);
      fixtureElement.style.position = 'absolute';
      fixtureElement.style.top = '-10000px';
      fixtureElement.style.left = '-10000px';
      fixtureElement.style.width = '10000px';
      fixtureElement.style.height = '10000px';
      document.body.append(fixtureElement);
    }
    return fixtureElement;
  };
  const clearFixture = () => {
    const fixtureElement = getFixture();
    fixtureElement.innerHTML = '';
  };
  const jQueryMock = {
    elements: undefined,
    fn: {},
    each(fn) {
      for (const element of this.elements) {
        fn.call(element);
      }
    }
  };

  describe('Popover', () => {
    let fixtureEl;
    beforeAll(() => {
      fixtureEl = getFixture();
    });
    afterEach(() => {
      clearFixture();
      const popoverList = document.querySelectorAll('.popover');
      for (const popoverEl of popoverList) {
        popoverEl.remove();
      }
    });
    describe('VERSION', () => {
      it('should return plugin version', () => {
        expect(Popover.VERSION).toEqual(jasmine.any(String));
      });
    });
    describe('Default', () => {
      it('should return plugin default config', () => {
        expect(Popover.Default).toEqual(jasmine.any(Object));
      });
    });
    describe('NAME', () => {
      it('should return plugin name', () => {
        expect(Popover.NAME).toEqual(jasmine.any(String));
      });
    });
    describe('DATA_KEY', () => {
      it('should return plugin data key', () => {
        expect(Popover.DATA_KEY).toEqual('coreui.popover');
      });
    });
    describe('EVENT_KEY', () => {
      it('should return plugin event key', () => {
        expect(Popover.EVENT_KEY).toEqual('.coreui.popover');
      });
    });
    describe('DefaultType', () => {
      it('should return plugin default type', () => {
        expect(Popover.DefaultType).toEqual(jasmine.any(Object));
      });
    });
    describe('show', () => {
      it('should show a popover', () => {
        return new Promise(resolve => {
          fixtureEl.innerHTML = '<a href="#" title="Popover" data-coreui-content="https://twitter.com/getbootstrap">BS twitter</a>';
          const popoverEl = fixtureEl.querySelector('a');
          const popover = new Popover(popoverEl);
          popoverEl.addEventListener('shown.coreui.popover', () => {
            expect(document.querySelector('.popover')).not.toBeNull();
            resolve();
          });
          popover.show();
        });
      });
      it('should set title and content from functions', () => {
        return new Promise(resolve => {
          fixtureEl.innerHTML = '<a href="#">BS twitter</a>';
          const popoverEl = fixtureEl.querySelector('a');
          const popover = new Popover(popoverEl, {
            title: () => 'Bootstrap',
            content: () => 'loves writing tests （╯°□°）╯︵ ┻━┻'
          });
          popoverEl.addEventListener('shown.coreui.popover', () => {
            const popoverDisplayed = document.querySelector('.popover');
            expect(popoverDisplayed).not.toBeNull();
            expect(popoverDisplayed.querySelector('.popover-header').textContent).toEqual('Bootstrap');
            expect(popoverDisplayed.querySelector('.popover-body').textContent).toEqual('loves writing tests （╯°□°）╯︵ ┻━┻');
            resolve();
          });
          popover.show();
        });
      });
      it('should call content and title functions with trigger element', () => {
        return new Promise(resolve => {
          fixtureEl.innerHTML = '<a href="#" data-foo="bar">BS twitter</a>';
          const popoverEl = fixtureEl.querySelector('a');
          const popover = new Popover(popoverEl, {
            title(el) {
              return el.dataset.foo;
            },
            content(el) {
              return el.dataset.foo;
            }
          });
          popoverEl.addEventListener('shown.coreui.popover', () => {
            const popoverDisplayed = document.querySelector('.popover');
            expect(popoverDisplayed).not.toBeNull();
            expect(popoverDisplayed.querySelector('.popover-header').textContent).toEqual('bar');
            expect(popoverDisplayed.querySelector('.popover-body').textContent).toEqual('bar');
            resolve();
          });
          popover.show();
        });
      });
      it('should call content and title functions with correct this value', () => {
        return new Promise(resolve => {
          fixtureEl.innerHTML = '<a href="#" data-foo="bar">BS twitter</a>';
          const popoverEl = fixtureEl.querySelector('a');
          const popover = new Popover(popoverEl, {
            title() {
              return this.dataset.foo;
            },
            content() {
              return this.dataset.foo;
            }
          });
          popoverEl.addEventListener('shown.coreui.popover', () => {
            const popoverDisplayed = document.querySelector('.popover');
            expect(popoverDisplayed).not.toBeNull();
            expect(popoverDisplayed.querySelector('.popover-header').textContent).toEqual('bar');
            expect(popoverDisplayed.querySelector('.popover-body').textContent).toEqual('bar');
            resolve();
          });
          popover.show();
        });
      });
      it('should show a popover with just content without having header', () => {
        return new Promise(resolve => {
          fixtureEl.innerHTML = '<a href="#">Nice link</a>';
          const popoverEl = fixtureEl.querySelector('a');
          const popover = new Popover(popoverEl, {
            content: 'Some beautiful content :)'
          });
          popoverEl.addEventListener('shown.coreui.popover', () => {
            const popoverDisplayed = document.querySelector('.popover');
            expect(popoverDisplayed).not.toBeNull();
            expect(popoverDisplayed.querySelector('.popover-header')).toBeNull();
            expect(popoverDisplayed.querySelector('.popover-body').textContent).toEqual('Some beautiful content :)');
            resolve();
          });
          popover.show();
        });
      });
      it('should show a popover with just title without having body', () => {
        return new Promise(resolve => {
          fixtureEl.innerHTML = '<a href="#">Nice link</a>';
          const popoverEl = fixtureEl.querySelector('a');
          const popover = new Popover(popoverEl, {
            title: 'Title which does not require content'
          });
          popoverEl.addEventListener('shown.coreui.popover', () => {
            const popoverDisplayed = document.querySelector('.popover');
            expect(popoverDisplayed).not.toBeNull();
            expect(popoverDisplayed.querySelector('.popover-body')).toBeNull();
            expect(popoverDisplayed.querySelector('.popover-header').textContent).toEqual('Title which does not require content');
            resolve();
          });
          popover.show();
        });
      });
      it('should show a popover with just title without having body using data-attribute to get config', () => {
        return new Promise(resolve => {
          fixtureEl.innerHTML = '<a href="#" data-coreui-content="" title="Title which does not require content">Nice link</a>';
          const popoverEl = fixtureEl.querySelector('a');
          const popover = new Popover(popoverEl);
          popoverEl.addEventListener('shown.coreui.popover', () => {
            const popoverDisplayed = document.querySelector('.popover');
            expect(popoverDisplayed).not.toBeNull();
            expect(popoverDisplayed.querySelector('.popover-body')).toBeNull();
            expect(popoverDisplayed.querySelector('.popover-header').textContent).toEqual('Title which does not require content');
            resolve();
          });
          popover.show();
        });
      });
      it('should NOT show a popover without `title` and `content`', () => {
        fixtureEl.innerHTML = '<a href="#" data-coreui-content="" title="">Nice link</a>';
        const popoverEl = fixtureEl.querySelector('a');
        const popover = new Popover(popoverEl, {
          animation: false
        });
        const spy = spyOn(EventHandler, 'trigger').and.callThrough();
        popover.show();
        expect(spy).not.toHaveBeenCalledWith(popoverEl, Popover.eventName('show'));
        expect(document.querySelector('.popover')).toBeNull();
      });
      it('"setContent" should keep the initial template', () => {
        fixtureEl.innerHTML = '<a href="#" title="Popover" data-coreui-content="https://twitter.com/getbootstrap" data-coreui-custom-class="custom-class">BS twitter</a>';
        const popoverEl = fixtureEl.querySelector('a');
        const popover = new Popover(popoverEl);
        popover.setContent({
          '.tooltip-inner': 'foo'
        });
        const tip = popover._getTipElement();
        expect(tip).toHaveClass('popover');
        expect(tip).toHaveClass('bs-popover-auto');
        expect(tip.querySelector('.popover-arrow')).not.toBeNull();
        expect(tip.querySelector('.popover-header')).not.toBeNull();
        expect(tip.querySelector('.popover-body')).not.toBeNull();
      });
      it('should call setContent once', () => {
        return new Promise(resolve => {
          fixtureEl.innerHTML = '<a href="#">BS twitter</a>';
          const popoverEl = fixtureEl.querySelector('a');
          const popover = new Popover(popoverEl, {
            content: 'Popover content'
          });
          expect(popover._templateFactory).toBeNull();
          let spy = null;
          let times = 1;
          popoverEl.addEventListener('hidden.coreui.popover', () => {
            popover.show();
          });
          popoverEl.addEventListener('shown.coreui.popover', () => {
            spy = spy || spyOn(popover._templateFactory, 'constructor').and.callThrough();
            const popoverDisplayed = document.querySelector('.popover');
            expect(popoverDisplayed).not.toBeNull();
            expect(popoverDisplayed.querySelector('.popover-body').textContent).toEqual('Popover content');
            expect(spy).toHaveBeenCalledTimes(0);
            if (times > 1) {
              resolve();
            }
            times++;
            popover.hide();
          });
          popover.show();
        });
      });
      it('should show a popover with provided custom class', () => {
        return new Promise(resolve => {
          fixtureEl.innerHTML = '<a href="#" title="Popover" data-coreui-content="https://twitter.com/getbootstrap" data-coreui-custom-class="custom-class">BS twitter</a>';
          const popoverEl = fixtureEl.querySelector('a');
          const popover = new Popover(popoverEl);
          popoverEl.addEventListener('shown.coreui.popover', () => {
            const tip = document.querySelector('.popover');
            expect(tip).not.toBeNull();
            expect(tip).toHaveClass('custom-class');
            resolve();
          });
          popover.show();
        });
      });
    });
    describe('hide', () => {
      it('should hide a popover', () => {
        return new Promise(resolve => {
          fixtureEl.innerHTML = '<a href="#" title="Popover" data-coreui-content="https://twitter.com/getbootstrap">BS twitter</a>';
          const popoverEl = fixtureEl.querySelector('a');
          const popover = new Popover(popoverEl);
          popoverEl.addEventListener('shown.coreui.popover', () => {
            popover.hide();
          });
          popoverEl.addEventListener('hidden.coreui.popover', () => {
            expect(document.querySelector('.popover')).toBeNull();
            resolve();
          });
          popover.show();
        });
      });
    });
    describe('jQueryInterface', () => {
      it('should create a popover', () => {
        fixtureEl.innerHTML = '<a href="#" title="Popover" data-coreui-content="https://twitter.com/getbootstrap">BS twitter</a>';
        const popoverEl = fixtureEl.querySelector('a');
        jQueryMock.fn.popover = Popover.jQueryInterface;
        jQueryMock.elements = [popoverEl];
        jQueryMock.fn.popover.call(jQueryMock);
        expect(Popover.getInstance(popoverEl)).not.toBeNull();
      });
      it('should create a popover with a config object', () => {
        fixtureEl.innerHTML = '<a href="#" title="Popover">BS twitter</a>';
        const popoverEl = fixtureEl.querySelector('a');
        jQueryMock.fn.popover = Popover.jQueryInterface;
        jQueryMock.elements = [popoverEl];
        jQueryMock.fn.popover.call(jQueryMock, {
          content: 'Popover content'
        });
        expect(Popover.getInstance(popoverEl)).not.toBeNull();
      });
      it('should not re create a popover', () => {
        fixtureEl.innerHTML = '<a href="#" title="Popover" data-coreui-content="https://twitter.com/getbootstrap">BS twitter</a>';
        const popoverEl = fixtureEl.querySelector('a');
        const popover = new Popover(popoverEl);
        jQueryMock.fn.popover = Popover.jQueryInterface;
        jQueryMock.elements = [popoverEl];
        jQueryMock.fn.popover.call(jQueryMock);
        expect(Popover.getInstance(popoverEl)).toEqual(popover);
      });
      it('should throw error on undefined method', () => {
        fixtureEl.innerHTML = '<a href="#" title="Popover" data-coreui-content="https://twitter.com/getbootstrap">BS twitter</a>';
        const popoverEl = fixtureEl.querySelector('a');
        const action = 'undefinedMethod';
        jQueryMock.fn.popover = Popover.jQueryInterface;
        jQueryMock.elements = [popoverEl];
        expect(() => {
          jQueryMock.fn.popover.call(jQueryMock, action);
        }).toThrowError(TypeError, `No method named "${action}"`);
      });
      it('should should call show method', () => {
        fixtureEl.innerHTML = '<a href="#" title="Popover" data-coreui-content="https://twitter.com/getbootstrap">BS twitter</a>';
        const popoverEl = fixtureEl.querySelector('a');
        const popover = new Popover(popoverEl);
        jQueryMock.fn.popover = Popover.jQueryInterface;
        jQueryMock.elements = [popoverEl];
        const spy = spyOn(popover, 'show');
        jQueryMock.fn.popover.call(jQueryMock, 'show');
        expect(spy).toHaveBeenCalled();
      });
    });
    describe('getInstance', () => {
      it('should return popover instance', () => {
        fixtureEl.innerHTML = '<a href="#" title="Popover" data-coreui-content="https://twitter.com/getbootstrap">BS twitter</a>';
        const popoverEl = fixtureEl.querySelector('a');
        const popover = new Popover(popoverEl);
        expect(Popover.getInstance(popoverEl)).toEqual(popover);
        expect(Popover.getInstance(popoverEl)).toBeInstanceOf(Popover);
      });
      it('should return null when there is no popover instance', () => {
        fixtureEl.innerHTML = '<a href="#" title="Popover" data-coreui-content="https://twitter.com/getbootstrap">BS twitter</a>';
        const popoverEl = fixtureEl.querySelector('a');
        expect(Popover.getInstance(popoverEl)).toBeNull();
      });
    });
    describe('getOrCreateInstance', () => {
      it('should return popover instance', () => {
        fixtureEl.innerHTML = '<div></div>';
        const div = fixtureEl.querySelector('div');
        const popover = new Popover(div);
        expect(Popover.getOrCreateInstance(div)).toEqual(popover);
        expect(Popover.getInstance(div)).toEqual(Popover.getOrCreateInstance(div, {}));
        expect(Popover.getOrCreateInstance(div)).toBeInstanceOf(Popover);
      });
      it('should return new instance when there is no popover instance', () => {
        fixtureEl.innerHTML = '<div></div>';
        const div = fixtureEl.querySelector('div');
        expect(Popover.getInstance(div)).toBeNull();
        expect(Popover.getOrCreateInstance(div)).toBeInstanceOf(Popover);
      });
      it('should return new instance when there is no popover instance with given configuration', () => {
        fixtureEl.innerHTML = '<div></div>';
        const div = fixtureEl.querySelector('div');
        expect(Popover.getInstance(div)).toBeNull();
        const popover = Popover.getOrCreateInstance(div, {
          placement: 'top'
        });
        expect(popover).toBeInstanceOf(Popover);
        expect(popover._config.placement).toEqual('top');
      });
      it('should return the instance when exists without given configuration', () => {
        fixtureEl.innerHTML = '<div></div>';
        const div = fixtureEl.querySelector('div');
        const popover = new Popover(div, {
          placement: 'top'
        });
        expect(Popover.getInstance(div)).toEqual(popover);
        const popover2 = Popover.getOrCreateInstance(div, {
          placement: 'bottom'
        });
        expect(popover).toBeInstanceOf(Popover);
        expect(popover2).toEqual(popover);
        expect(popover2._config.placement).toEqual('top');
      });
    });
  });

})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
