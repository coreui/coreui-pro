{"version":3,"file":"otp-input.js","sources":["../src/otp-input.js"],"sourcesContent":["/**\n * --------------------------------------------------------------------------\n * CoreUI PRO password-input.js\n * License (https://coreui.io/pro/license/)\n * --------------------------------------------------------------------------\n */\n\nimport BaseComponent from './base-component.js'\nimport EventHandler from './dom/event-handler.js'\nimport SelectorEngine from './dom/selector-engine.js'\nimport { defineJQueryPlugin, getNextActiveElement, isRTL } from './util/index.js'\n\n/**\n * Constants\n */\n\nconst NAME = 'otp-input'\nconst DATA_KEY = 'coreui.otp-input'\nconst EVENT_KEY = `.${DATA_KEY}`\nconst DATA_API_KEY = '.data-api'\n\nconst ARROW_RIGHT_KEY = 'ArrowRight'\nconst ARROW_LEFT_KEY = 'ArrowLeft'\nconst BACKSPACE_KEY = 'Backspace'\n\nconst EVENT_CHANGE = `change${EVENT_KEY}`\nconst EVENT_COMPLETE = `complete${EVENT_KEY}`\nconst EVENT_FOCUS = `focus${EVENT_KEY}`\nconst EVENT_INPUT = `input`\nconst EVENT_KEYDOWN = `keydown${EVENT_KEY}`\nconst EVENT_PASTE = `paste`\nconst EVENT_LOAD_DATA_API = `load${EVENT_KEY}${DATA_API_KEY}`\n\nconst SELECTOR_FORM_OTP_CONTROL = '.form-otp-control'\nconst SELECTOR_DATA_TOGGLE = '[data-coreui-toggle=\"otp\"]'\n\nconst Default = {\n  ariaLabel: (index, total) => `Digit ${index + 1} of ${total}`,\n  autoSubmit: false,\n  disabled: false,\n  id: null,\n  linear: true,\n  masked: false,\n  name: null,\n  placeholder: null,\n  readonly: false,\n  required: false,\n  type: 'number',\n  value: null\n}\n\nconst DefaultType = {\n  ariaLabel: 'function',\n  autoSubmit: 'boolean',\n  disabled: 'boolean',\n  id: '(string|null)',\n  linear: 'boolean',\n  masked: 'boolean',\n  name: '(string|null)',\n  placeholder: '(number|string|null)',\n  readonly: 'boolean',\n  required: 'boolean',\n  type: 'string',\n  value: '(number|string|null)'\n}\n\n/**\n * Class definition\n */\n\nclass OTPInput extends BaseComponent {\n  constructor(element, config) {\n    super(element, config)\n\n    this._config = this._getConfig(config)\n    this._inputElement = null\n\n    this._createHiddenInput()\n    this._setRoleAttribute()\n    this._setInputsAttributes()\n    this._setInputsTabIndexes()\n    this._addEventListeners()\n  }\n\n  // Getters\n  static get Default() {\n    return Default\n  }\n\n  static get DefaultType() {\n    return DefaultType\n  }\n\n  static get NAME() {\n    return NAME\n  }\n\n  // Public\n  clear() {\n    const inputs = this._getInputs()\n    for (const input of inputs) {\n      input.value = ''\n    }\n\n    this._setHiddenInputValue(null)\n    this._setInputsTabIndexes()\n  }\n\n  reset() {\n    const inputs = this._getInputs()\n    for (const [index, input] of inputs.entries()) {\n      const valueString = String(this._config.value || '')\n\n      input.value = valueString && valueString[index] ? valueString[index] : ''\n    }\n\n    this._setHiddenInputValue(null)\n    this._setInputsTabIndexes()\n  }\n\n  update(config) {\n    if (typeof config !== 'object') {\n      return\n    }\n\n    this._config = { ...this._config, ...config }\n    this._typeCheckConfig(this._config)\n\n    this._setInputsAttributes()\n    this._setInputsTabIndexes()\n    this._inputElement.remove()\n    this._createHiddenInput()\n  }\n\n  // Private\n  _addEventListeners() {\n    EventHandler.on(this._element, EVENT_FOCUS, SELECTOR_FORM_OTP_CONTROL, event => {\n      const { target } = event\n\n      if (target.value) {\n        setTimeout(() => {\n          target.select()\n        }, 0)\n\n        return\n      }\n\n      if (this._config.linear) {\n        const inputs = this._getInputs()\n        const firstEmptyInput = inputs.find(input => !input.value)\n        if (firstEmptyInput && firstEmptyInput !== target) {\n          firstEmptyInput.focus()\n        }\n      }\n    })\n\n    EventHandler.on(this._element, EVENT_INPUT, SELECTOR_FORM_OTP_CONTROL, event => {\n      const { target } = event\n\n      if (target.value.length === 1 && !this._isValidInput(target.value)) {\n        target.value = ''\n        return\n      }\n\n      if (target.value.length === 1) {\n        const inputs = this._getInputs()\n\n        if (!inputs.length) {\n          return\n        }\n\n        const currentValue = inputs.map(input => input.value).join('')\n\n        this._setHiddenInputValue(currentValue)\n\n        const nextInput = getNextActiveElement(inputs, target, true)\n        if (nextInput) {\n          nextInput.focus()\n        }\n\n        this._setInputsTabIndexes()\n        this._checkAutoSubmit(inputs)\n      }\n    })\n\n    EventHandler.on(this._element, EVENT_KEYDOWN, SELECTOR_FORM_OTP_CONTROL, event => {\n      const { key, target } = event\n\n      if (key === BACKSPACE_KEY && target.value === '') {\n        const inputs = this._getInputs()\n\n        if (!inputs.length) {\n          return\n        }\n\n        getNextActiveElement(inputs, target, false).focus()\n\n        const currentValue = inputs.map(input => input.value).join('')\n\n        this._setHiddenInputValue(currentValue)\n        this._setInputsTabIndexes()\n        return\n      }\n\n      if (key === ARROW_RIGHT_KEY) {\n        if (this._config.linear && target.value === '') {\n          return\n        }\n\n        const inputs = this._getInputs()\n\n        if (!inputs.length) {\n          return\n        }\n\n        // In RTL mode, right arrow moves to previous input, in LTR mode it moves to next input\n        const shouldMoveNext = !isRTL()\n        getNextActiveElement(inputs, target, shouldMoveNext).focus()\n\n        return\n      }\n\n      if (key === ARROW_LEFT_KEY) {\n        const inputs = this._getInputs()\n\n        if (!inputs.length) {\n          return\n        }\n\n        // In RTL mode, left arrow moves to next input, in LTR mode it moves to previous input\n        const shouldMoveNext = isRTL()\n        getNextActiveElement(inputs, target, shouldMoveNext).focus()\n      }\n    })\n\n    EventHandler.on(this._element, EVENT_PASTE, SELECTOR_FORM_OTP_CONTROL, event => {\n      event.preventDefault()\n      const pastedData = event.clipboardData.getData('text')\n      const validChars = this._extractValidChars(pastedData)\n\n      if (!validChars) {\n        return\n      }\n\n      const inputs = this._getInputs()\n      const currentIndex = inputs.indexOf(event.target)\n\n      for (let i = 0; i < validChars.length && (currentIndex + i) < inputs.length; i++) {\n        inputs[currentIndex + i].value = validChars[i]\n      }\n\n      // Focus the next empty input or the last filled input\n      const nextEmptyIndex = currentIndex + validChars.length\n      if (nextEmptyIndex < inputs.length) {\n        inputs[nextEmptyIndex].focus()\n      } else {\n        inputs[inputs.length - 1].focus()\n      }\n\n      this._setHiddenInputValue(validChars)\n      this._setInputsTabIndexes()\n      this._checkAutoSubmit(inputs)\n    })\n  }\n\n  _checkAutoSubmit(inputs) {\n    if (!this._config.autoSubmit) {\n      return\n    }\n\n    // Check if all inputs are filled\n    const allFilled = inputs.every(input => input.value.length === 1)\n\n    if (allFilled) {\n      // Find the closest form element\n      const form = this._element.closest('form')\n      if (form && typeof form.requestSubmit === 'function') {\n        form.requestSubmit()\n      }\n    }\n  }\n\n  _getInputs() {\n    return SelectorEngine.find(SELECTOR_FORM_OTP_CONTROL, this._element)\n  }\n\n  _createHiddenInput() {\n    const hiddenInput = document.createElement('input')\n    hiddenInput.type = 'hidden'\n\n    if (this._config.disabled) {\n      hiddenInput.disabled = true\n    }\n\n    if (this._config.id) {\n      hiddenInput.id = this._config.id\n    }\n\n    if (this._config.name) {\n      hiddenInput.name = this._config.name\n    }\n\n    hiddenInput.value = this._config.value || ''\n\n    this._element.append(hiddenInput)\n    this._inputElement = hiddenInput\n  }\n\n  _extractValidChars(text) {\n    switch (this._config.type) {\n      case 'number': {\n        return text.replace(/\\D/g, '')\n      }\n\n      default: {\n        return text // Allow all characters for unknown types\n      }\n    }\n  }\n\n  _isValidInput(value) {\n    if (value.length !== 1) {\n      return false\n    }\n\n    switch (this._config.type) {\n      case 'number': {\n        return /^\\d$/.test(value)\n      }\n\n      default: {\n        return /^.$/s.test(value) // Allow any single character for unknown types\n      }\n    }\n  }\n\n  _setHiddenInputValue(value) {\n    if (this._inputElement) {\n      this._inputElement.value = value || ''\n    }\n\n    EventHandler.trigger(this._element, EVENT_CHANGE, { value })\n\n    if (value && value.length === this._getInputs().length) {\n      EventHandler.trigger(this._element, EVENT_COMPLETE, { value })\n    }\n  }\n\n  _setInputsAttributes() {\n    const inputs = SelectorEngine.find(SELECTOR_FORM_OTP_CONTROL, this._element)\n    for (const [index, input] of inputs.entries()) {\n      input.type = this._config.masked ? 'password' : 'text'\n\n      input.maxLength = 1\n      input.autocomplete = 'off'\n\n      if (this._config.placeholder !== null) {\n        const placeholder = String(this._config.placeholder)\n        input.placeholder = placeholder.length > 1 ? placeholder[index] || '' : placeholder\n      }\n\n      if (this._config.required !== null) {\n        input.setAttribute('required', true)\n      }\n\n      switch (this._config.type) {\n        case 'number': {\n          input.inputMode = 'numeric'\n          input.pattern = '[0-9]*'\n          break\n        }\n\n        default: {\n          input.inputMode = 'text'\n          input.pattern = '.*'\n        }\n      }\n\n      if (this._config.disabled) {\n        input.disabled = true\n      }\n\n      if (this._config.id) {\n        input.id = `${this._config.id}-${index}`\n      }\n\n      if (this._config.name) {\n        input.name = `${this._config.name}-${index}`\n      }\n\n      if (this._config.readonly) {\n        input.readOnly = true\n      }\n\n      const valueString = String(this._config.value || '')\n\n      if (valueString && valueString[index]) {\n        input.value = valueString[index]\n      }\n\n      if (typeof this._config.ariaLabel === 'function') {\n        const ariaLabel = this._config.ariaLabel(index, inputs.length)\n        input.setAttribute('aria-label', ariaLabel)\n      }\n    }\n  }\n\n  _setInputsTabIndexes() {\n    if (!this._config.linear) {\n      return\n    }\n\n    const inputs = this._getInputs()\n    let foundEmpty = false\n\n    for (const input of inputs) {\n      const hasValue = input.value !== ''\n\n      if (hasValue) {\n        input.removeAttribute('tabindex')\n      } else if (foundEmpty) {\n        input.tabIndex = -1\n      } else {\n        // First empty input - should be tabbable\n        input.removeAttribute('tabindex')\n        foundEmpty = true\n      }\n    }\n  }\n\n  _setRoleAttribute() {\n    this._element.setAttribute('role', 'group')\n  }\n\n  // Static\n  static otpInputInterface(element, config) {\n    const data = OTPInput.getOrCreateInstance(element, config)\n\n    if (typeof config === 'string') {\n      if (typeof data[config] === 'undefined') {\n        throw new TypeError(`No method named \"${config}\"`)\n      }\n\n      data[config]()\n    }\n  }\n\n  static jQueryInterface(config) {\n    return this.each(function () {\n      const data = OTPInput.getOrCreateInstance(this)\n\n      if (typeof config === 'string') {\n        if (typeof data[config] === 'undefined') {\n          throw new TypeError(`No method named \"${config}\"`)\n        }\n\n        data[config]()\n      }\n    })\n  }\n}\n\n/**\n * Data API implementation\n */\n\nEventHandler.on(window, EVENT_LOAD_DATA_API, () => {\n  for (const otp of SelectorEngine.find(SELECTOR_DATA_TOGGLE)) {\n    OTPInput.otpInputInterface(otp)\n  }\n})\n\n/**\n * jQuery\n */\n\ndefineJQueryPlugin(OTPInput)\n\nexport default OTPInput\n"],"names":["NAME","DATA_KEY","EVENT_KEY","DATA_API_KEY","ARROW_RIGHT_KEY","ARROW_LEFT_KEY","BACKSPACE_KEY","EVENT_CHANGE","EVENT_COMPLETE","EVENT_FOCUS","EVENT_INPUT","EVENT_KEYDOWN","EVENT_PASTE","EVENT_LOAD_DATA_API","SELECTOR_FORM_OTP_CONTROL","SELECTOR_DATA_TOGGLE","Default","ariaLabel","index","total","autoSubmit","disabled","id","linear","masked","name","placeholder","readonly","required","type","value","DefaultType","OTPInput","BaseComponent","constructor","element","config","_config","_getConfig","_inputElement","_createHiddenInput","_setRoleAttribute","_setInputsAttributes","_setInputsTabIndexes","_addEventListeners","clear","inputs","_getInputs","input","_setHiddenInputValue","reset","entries","valueString","String","update","_typeCheckConfig","remove","EventHandler","on","_element","event","target","setTimeout","select","firstEmptyInput","find","focus","length","_isValidInput","currentValue","map","join","nextInput","getNextActiveElement","_checkAutoSubmit","key","shouldMoveNext","isRTL","preventDefault","pastedData","clipboardData","getData","validChars","_extractValidChars","currentIndex","indexOf","i","nextEmptyIndex","allFilled","every","form","closest","requestSubmit","SelectorEngine","hiddenInput","document","createElement","append","text","replace","test","trigger","maxLength","autocomplete","setAttribute","inputMode","pattern","readOnly","foundEmpty","hasValue","removeAttribute","tabIndex","otpInputInterface","data","getOrCreateInstance","TypeError","jQueryInterface","each","window","otp","defineJQueryPlugin"],"mappings":"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"}