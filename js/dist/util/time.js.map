{"version":3,"file":"time.js","sources":["../../src/util/time.js"],"sourcesContent":["export const convert12hTo24h = (abbr, hour) => {\n  if (abbr === 'am' && hour === 12) {\n    return 0\n  }\n\n  if (abbr === 'am') {\n    return hour\n  }\n\n  if (abbr === 'pm' && hour === 12) {\n    return 12\n  }\n\n  return hour + 12\n}\n\nexport const convert24hTo12h = hour => hour % 12 || 12\nexport const convertTimeToDate = time => time ? (time instanceof Date ? new Date(time) : new Date(`1970-01-01 ${time}`)) : null\nexport const getAmPm = (date, locale) => {\n  if (date.toLocaleTimeString(locale).includes('AM')) {\n    return 'am'\n  }\n\n  if (date.toLocaleTimeString(locale).includes('PM')) {\n    return 'pm'\n  }\n\n  return date.getHours() >= 12 ? 'pm' : 'am'\n}\n\nexport const getListOfHours = locale => Array.from({ length: isAmPm(locale) ? 12 : 24 }, (_, i) => {\n  return {\n    value: isAmPm(locale) ? i + 1 : i,\n    label: (isAmPm(locale) ? i + 1 : i).toLocaleString(locale)\n  }\n})\n\nexport const getListOfMinutes = (locale, valueAsString = false) => Array.from({ length: 60 }, (_, i) => {\n  const d = new Date()\n  d.setMinutes(i)\n  return {\n    value: valueAsString ? i.toString() : i,\n    label: d\n          .toLocaleTimeString(locale, {\n            hour: '2-digit',\n            hour12: false,\n            minute: '2-digit',\n            second: '2-digit'\n          })\n          .split(':')[1]\n  }\n})\n\nexport const getListOfSeconds = (locale, valueAsString = false) => Array.from({ length: 60 }, (_, i) => {\n  const d = new Date()\n  d.setSeconds(i)\n  return {\n    value: valueAsString ? i.toString() : i,\n    label: d\n          .toLocaleTimeString(locale, {\n            hour: '2-digit',\n            hour12: false,\n            minute: '2-digit',\n            second: '2-digit'\n          })\n          .split(':')[2]\n  }\n})\n\nexport const getSelectedHour = (date, locale) => date ? (isAmPm(locale) ? convert24hTo12h(date.getHours()) : date.getHours()) : ''\n\nexport const getSelectedMinutes = date => (date ? date.getMinutes() : '')\n\nexport const getSelectedSeconds = date => (date ? date.getSeconds() : '')\n\nexport const isAmPm = locale => ['am', 'AM', 'pm', 'PM'].some(el => new Date().toLocaleString(locale).includes(el))\n\nexport const isValidTime = time => {\n  const d = new Date(`1970-01-01 ${time}`)\n  return d instanceof Date && d.getTime()\n}\n"],"names":["convert12hTo24h","abbr","hour","convert24hTo12h","convertTimeToDate","time","Date","getAmPm","date","locale","toLocaleTimeString","includes","getHours","getListOfHours","Array","from","length","isAmPm","_","i","value","label","toLocaleString","getListOfMinutes","valueAsString","d","setMinutes","toString","hour12","minute","second","split","getListOfSeconds","setSeconds","getSelectedHour","getSelectedMinutes","getMinutes","getSelectedSeconds","getSeconds","some","el","isValidTime","getTime"],"mappings":"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"}