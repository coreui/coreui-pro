{"version":3,"file":"calendar.js","sources":["../../src/util/calendar.js"],"sourcesContent":["/**\n * Converts an ISO week string to a Date object representing the Monday of that week.\n * @param isoWeek - The ISO week string (e.g., \"2023W05\" or \"2023w05\").\n * @returns The Date object for the Monday of the specified week, or null if invalid.\n */\nexport const convertIsoWeekToDate = isoWeek => {\n  const [year, week] = isoWeek.split(/[Ww]/)\n  const date = new Date(Number(year), 0, 4) // 4th Jan is always in week 1\n  date.setDate(\n    date.getDate() - (date.getDay() || 7) + 1 + ((Number(week) - 1) * 7)\n  )\n  return date\n}\n\n/**\n * Converts a date string or Date object to a Date object based on selection type.\n * @param date - The date to convert.\n * @param selectionType - The type of selection ('day', 'week', 'month', 'year').\n * @returns The corresponding Date object or null if invalid.\n */\nexport const convertToDateObject = (date, selectionType) => {\n  if (date === null) {\n    return null\n  }\n\n  if (date instanceof Date) {\n    return date\n  }\n\n  if (selectionType === 'week') {\n    return convertIsoWeekToDate(date)\n  }\n\n  if (selectionType === 'month' || selectionType === 'year') {\n    const _date = new Date(Date.parse(date))\n    const userTimezoneOffset = _date.getTimezoneOffset() * 60_000\n    return new Date(_date.getTime() + userTimezoneOffset)\n  }\n\n  return new Date(Date.parse(date))\n}\n\n/**\n * Creates groups from an array.\n * @param arr - The array to group.\n * @param numberOfGroups - Number of groups to create.\n * @returns An array of grouped arrays.\n */\nexport const createGroupsInArray = (arr, numberOfGroups) => {\n  const perGroup = Math.ceil(arr.length / numberOfGroups)\n  return Array.from({ length: numberOfGroups })\n    .fill('')\n    .map((_, i) => arr.slice(i * perGroup, (i + 1) * perGroup))\n}\n\n/**\n * Adjusts the calendar date based on order and view type.\n * @param calendarDate - The current calendar date.\n * @param order - The order to adjust by.\n * @param view - The current view type.\n * @returns The adjusted Date object.\n */\nexport const getCalendarDate = (calendarDate, order, view) => {\n  if (order !== 0 && view === 'days') {\n    return new Date(\n      calendarDate.getFullYear(),\n      calendarDate.getMonth() + order,\n      1\n    )\n  }\n\n  if (order !== 0 && view === 'months') {\n    return new Date(\n      calendarDate.getFullYear() + order,\n      calendarDate.getMonth(),\n      1\n    )\n  }\n\n  if (order !== 0 && view === 'years') {\n    return new Date(\n      calendarDate.getFullYear() + (12 * order),\n      calendarDate.getMonth(),\n      1\n    )\n  }\n\n  return calendarDate\n}\n\n/**\n * Formats a date based on the selection type.\n * @param date - The date to format.\n * @param selectionType - The type of selection ('day', 'week', 'month', 'year').\n * @returns A formatted date string or the original Date object.\n */\nexport const getDateBySelectionType = (date, selectionType) => {\n  if (date === null) {\n    return null\n  }\n\n  if (selectionType === 'week') {\n    const { year, weekNumber } = getISOWeekNumberAndYear(date)\n    return `${year}W${weekNumber.toString().padStart(2, '0')}`\n  }\n\n  if (selectionType === 'month') {\n    const monthNumber = `0${date.getMonth() + 1}`.slice(-2)\n    return `${date.getFullYear()}-${monthNumber}`\n  }\n\n  if (selectionType === 'year') {\n    return `${date.getFullYear()}`\n  }\n\n  return date\n}\n\n/**\n * Retrieves the first available date within a range that is not disabled.\n * @param startDate - Start date of the range.\n * @param endDate - End date of the range.\n * @param min - Minimum allowed date.\n * @param max - Maximum allowed date.\n * @param disabledDates - Criteria for disabled dates.\n * @returns The first available Date object or null if none found.\n */\nexport const getFirstAvailableDateInRange = (\n  startDate,\n  endDate,\n  min,\n  max,\n  disabledDates\n) => {\n  const _min = min ?\n    new Date(Math.max(startDate.getTime(), min.getTime())) :\n    startDate\n  const _max = max ?\n    new Date(Math.min(endDate.getTime(), max.getTime())) :\n    endDate\n\n  if (disabledDates === undefined) {\n    return _min\n  }\n\n  for (\n    const currentDate = new Date(_min);\n    // eslint-disable-next-line no-unmodified-loop-condition\n    currentDate <= _max;\n    currentDate.setDate(currentDate.getDate() + 1)\n  ) {\n    if (!isDateDisabled(currentDate, min, max, disabledDates)) {\n      return currentDate\n    }\n  }\n\n  return null\n}\n\n/**\n * Retrieves an array of month names based on locale and format.\n * @param locale - The locale string (e.g., 'en-US').\n * @param format - The format of the month names ('short' or 'long').\n * @returns An array of month names.\n */\nexport const getMonthsNames = (locale, format = 'short') => {\n  return Array.from({ length: 12 }, (_, i) => {\n    return new Date(2000, i, 1).toLocaleString(locale, { month: format })\n  })\n}\n\n/**\n * Retrieves an array of selectable dates from the given element.\n * @param element - The HTML element to search for selectable dates.\n * @param selector - The CSS selector used to identify selectable dates. Defaults to 'tr[tabindex=\"0\"], td[tabindex=\"0\"]'.\n * @returns An array of HTMLElements representing the selectable dates.\n */\nexport const getSelectableDates = (\n  element,\n  selector = 'tr[tabindex=\"0\"], td[tabindex=\"0\"]'\n) => {\n  return [...Element.prototype.querySelectorAll.call(element, selector)]\n}\n\n/**\n * Generates an array of years centered around a given year.\n * @param year - The central year.\n * @param range - The number of years before and after the central year.\n * @returns An array of years.\n */\nexport const getYears = (year, range = 6) => {\n  return Array.from({ length: range * 2 }, (_, i) => year - range + i)\n}\n\n/**\n * Retrieves leading days (from the previous month) for a calendar view.\n * @param year - The year.\n * @param month - The month (0-11).\n * @param firstDayOfWeek - The first day of the week (0-6, where 0 is Sunday).\n * @returns An array of leading day objects.\n */\nconst getLeadingDays = (year, month, firstDayOfWeek) => {\n  // 0: sunday\n  // 1: monday\n  const dates = []\n  const d = new Date(year, month)\n  const y = d.getFullYear()\n  const m = d.getMonth()\n  const firstWeekday = new Date(y, m, 1).getDay()\n  let leadingDays = 6 - (6 - firstWeekday) - firstDayOfWeek\n\n  if (firstDayOfWeek) {\n    leadingDays = leadingDays < 0 ? 7 + leadingDays : leadingDays\n  }\n\n  for (let i = leadingDays * -1; i < 0; i++) {\n    dates.push({\n      date: new Date(y, m, i + 1),\n      month: 'previous'\n    })\n  }\n\n  return dates\n}\n\n/**\n * Retrieves all days within a specific month.\n * @param year - The year.\n * @param month - The month (0-11).\n * @returns An array of day objects.\n */\nconst getMonthDays = (year, month) => {\n  const dates = []\n  const lastDay = new Date(year, month + 1, 0).getDate()\n  for (let i = 1; i <= lastDay; i++) {\n    dates.push({\n      date: new Date(year, month, i),\n      month: 'current'\n    })\n  }\n\n  return dates\n}\n\n/**\n * Retrieves trailing days (from the next month) for a calendar view.\n * @param year - The year.\n * @param month - The month (0-11).\n * @param leadingDays - Array of leading day objects.\n * @param monthDays - Array of current month day objects.\n * @returns An array of trailing day objects.\n */\nconst getTrailingDays = (year, month, leadingDays, monthDays) => {\n  const dates = []\n  const days = 42 - (leadingDays.length + monthDays.length)\n  for (let i = 1; i <= days; i++) {\n    dates.push({\n      date: new Date(year, month + 1, i),\n      month: 'next'\n    })\n  }\n\n  return dates\n}\n\n/**\n * Calculates the ISO 8601 week number and year for a given date.\n *\n * In the ISO 8601 standard:\n * - Weeks start on Monday.\n * - The first week of the year is the one that contains January 4th.\n * - The year of the week may differ from the calendar year (e.g., Dec 29, 2025 is in ISO year 2026).\n *\n * @param {Date} date - The date for which to calculate the ISO week number and year.\n * @returns {{ weekNumber: number, year: number }} An object containing:\n *   - `weekNumber`: the ISO week number (1â€“53),\n *   - `year`: the ISO year (may differ from the calendar year of the date).\n */\nexport const getISOWeekNumberAndYear = date => {\n  const tempDate = new Date(date)\n  tempDate.setHours(0, 0, 0, 0)\n\n  // Thursday in current week decides the year\n  tempDate.setDate(tempDate.getDate() + 3 - ((tempDate.getDay() + 6) % 7))\n\n  const week1 = new Date(tempDate.getFullYear(), 0, 4)\n\n  // Calculate full weeks to the date\n  const weekNumber = 1 + Math.round((tempDate.getTime() - week1.getTime()) / 86_400_000 / 7)\n\n  return { weekNumber, year: tempDate.getFullYear() }\n}\n\n/**\n * Retrieves detailed information about each week in a month for calendar rendering.\n * @param year - The year.\n * @param month - The month (0-11).\n * @param firstDayOfWeek - The first day of the week (0-6, where 0 is Sunday).\n * @returns An array of week objects containing week numbers and day details.\n */\nexport const getMonthDetails = (year, month, firstDayOfWeek) => {\n  const daysPrevMonth = getLeadingDays(year, month, firstDayOfWeek)\n  const daysThisMonth = getMonthDays(year, month)\n  const daysNextMonth = getTrailingDays(\n    year,\n    month,\n    daysPrevMonth,\n    daysThisMonth\n  )\n  const days = [...daysPrevMonth, ...daysThisMonth, ...daysNextMonth]\n  const weeks = []\n\n  for (const [index, day] of days.entries()) {\n    if (index % 7 === 0 || weeks.length === 0) {\n      weeks.push({\n        week: { number: 0, year: 0 },\n        days: []\n      })\n    }\n\n    if ((index + 1) % 7 === 0) {\n      const { weekNumber, year } = getISOWeekNumberAndYear(day.date)\n      weeks[weeks.length - 1].week = { number: weekNumber, year }\n    }\n\n    weeks[weeks.length - 1].days.push(day)\n  }\n\n  return weeks\n}\n\n/**\n * Checks if a date is disabled based on the 'date' period type.\n * @param date - The date to check.\n * @param min - Minimum allowed date.\n * @param max - Maximum allowed date.\n * @param disabledDates - Criteria for disabled dates.\n * @returns True if the date is disabled, false otherwise.\n */\nexport const isDateDisabled = (date, min, max, disabledDates) => {\n  if (min && date < min) {\n    return true\n  }\n\n  if (max && date > max) {\n    return true\n  }\n\n  if (disabledDates === undefined) {\n    return false\n  }\n\n  if (typeof disabledDates === 'function') {\n    return disabledDates(date)\n  }\n\n  if (disabledDates instanceof Date && isSameDateAs(date, disabledDates)) {\n    return true\n  }\n\n  if (Array.isArray(disabledDates) && disabledDates) {\n    for (const _date of disabledDates) {\n      if (typeof _date === 'function' && _date(date)) {\n        return true\n      }\n\n      if (Array.isArray(_date) && isDateInRange(date, _date[0], _date[1])) {\n        return true\n      }\n\n      if (_date instanceof Date && isSameDateAs(date, _date)) {\n        return true\n      }\n    }\n  }\n\n  return false\n}\n\n/**\n * Checks if a date is within a specified range.\n * @param date - The date to check.\n * @param start - Start date of the range.\n * @param end - End date of the range.\n * @returns True if the date is within the range, false otherwise.\n */\nexport const isDateInRange = (date, start, end) => {\n  const _date = removeTimeFromDate(date)\n  const _start = start ? removeTimeFromDate(start) : null\n  const _end = end ? removeTimeFromDate(end) : null\n\n  return Boolean(_start && _end && _start <= _date && _date <= _end)\n}\n\n/**\n * Checks if a date is selected based on start and end dates.\n * @param date - The date to check.\n * @param start - Start date.\n * @param end - End date.\n * @returns True if the date is selected, false otherwise.\n */\nexport const isDateSelected = (date, start, end) => {\n  if (start !== null && isSameDateAs(start, date)) {\n    return true\n  }\n\n  if (end !== null && isSameDateAs(end, date)) {\n    return true\n  }\n\n  return false\n}\n\n/**\n * Determines if any date within a range is disabled.\n * @param startDate - Start date of the range.\n * @param endDate - End date of the range.\n * @param disabledDates - Criteria for disabled dates.\n * @returns True if any date in the range is disabled, false otherwise.\n */\nexport const isDisableDateInRange = (startDate, endDate, disabledDates) => {\n  if (startDate && endDate) {\n    const date = new Date(startDate)\n    let disabled = false\n\n    // eslint-disable-next-line no-unmodified-loop-condition\n    while (date < endDate) {\n      date.setDate(date.getDate() + 1)\n      if (isDateDisabled(date, null, null, disabledDates)) {\n        disabled = true\n        break\n      }\n    }\n\n    return disabled\n  }\n\n  return false\n}\n\n/**\n * Checks if a month is disabled based on the 'month' period type.\n * @param date - The date representing the month to check.\n * @param min - Minimum allowed date.\n * @param max - Maximum allowed date.\n * @param disabledDates - Criteria for disabled dates.\n * @returns True if the month is disabled, false otherwise.\n */\nexport const isMonthDisabled = (date, min, max, disabledDates) => {\n  const current = (date.getFullYear() * 12) + date.getMonth()\n  const _min = min ? (min.getFullYear() * 12) + min.getMonth() : null\n  const _max = max ? (max.getFullYear() * 12) + max.getMonth() : null\n\n  if (_min && current < _min) {\n    return true\n  }\n\n  if (_max && current > _max) {\n    return true\n  }\n\n  if (disabledDates === undefined) {\n    return false\n  }\n\n  const start = min ? Math.max(date.getTime(), min.getTime()) : date\n  const end = max ?\n    Math.min(date.getTime(), max.getTime()) :\n    new Date(new Date().getFullYear(), 11, 31)\n\n  for (\n    const currentDate = new Date(start);\n    // eslint-disable-next-line no-unmodified-loop-condition\n    currentDate <= end;\n    currentDate.setDate(currentDate.getDate() + 1)\n  ) {\n    if (!isDateDisabled(currentDate, min, max, disabledDates)) {\n      return false\n    }\n  }\n\n  return false\n}\n\n/**\n * Checks if a month is selected based on start and end dates.\n * @param date - The date representing the month.\n * @param start - Start date.\n * @param end - End date.\n * @returns True if the month is selected, false otherwise.\n */\nexport const isMonthSelected = (date, start, end) => {\n  const year = date.getFullYear()\n  const month = date.getMonth()\n\n  if (\n    start !== null &&\n    year === start.getFullYear() &&\n    month === start.getMonth()\n  ) {\n    return true\n  }\n\n  if (end !== null && year === end.getFullYear() && month === end.getMonth()) {\n    return true\n  }\n\n  return false\n}\n\n/**\n * Checks if a month is within a specified range.\n * @param date - The date representing the month.\n * @param start - Start date.\n * @param end - End date.\n * @returns True if the month is within the range, false otherwise.\n */\nexport const isMonthInRange = (date, start, end) => {\n  const year = date.getFullYear()\n  const month = date.getMonth()\n  const _start = start ? (start.getFullYear() * 12) + start.getMonth() : null\n  const _end = end ? (end.getFullYear() * 12) + end.getMonth() : null\n  const _date = (year * 12) + month\n\n  return Boolean(_start && _end && _start <= _date && _date <= _end)\n}\n\n/**\n * Checks if two dates are the same calendar date.\n * @param date - First date.\n * @param date2 - Second date.\n * @returns True if both dates are the same, false otherwise.\n */\nexport const isSameDateAs = (date, date2) => {\n  if (date instanceof Date && date2 instanceof Date) {\n    return (\n      date.getDate() === date2.getDate() &&\n      date.getMonth() === date2.getMonth() &&\n      date.getFullYear() === date2.getFullYear()\n    )\n  }\n\n  if (date === null && date2 === null) {\n    return true\n  }\n\n  return false\n}\n\n/**\n * Checks if a date is today.\n * @param date - The date to check.\n * @returns True if the date is today, false otherwise.\n */\nexport const isToday = date => {\n  const today = new Date()\n  return isSameDateAs(date, today)\n}\n\n/**\n * Checks if a year is disabled based on the 'year' period type.\n * @param date - The date representing the year to check.\n * @param min - Minimum allowed date.\n * @param max - Maximum allowed date.\n * @param disabledDates - Criteria for disabled dates.\n * @returns True if the year is disabled, false otherwise.\n */\nexport const isYearDisabled = (date, min, max, disabledDates) => {\n  const year = date.getFullYear()\n  const minYear = min ? min.getFullYear() : null\n  const maxYear = max ? max.getFullYear() : null\n\n  if (minYear && year < minYear) {\n    return true\n  }\n\n  if (maxYear && year > maxYear) {\n    return true\n  }\n\n  if (disabledDates === undefined) {\n    return false\n  }\n\n  const start = min ? Math.max(date.getTime(), min.getTime()) : date\n  const end = max ?\n    Math.min(date.getTime(), max.getTime()) :\n    new Date(new Date().getFullYear(), 11, 31)\n\n  for (\n    const currentDate = new Date(start);\n    // eslint-disable-next-line no-unmodified-loop-condition\n    currentDate <= end;\n    currentDate.setDate(currentDate.getDate() + 1)\n  ) {\n    if (!isDateDisabled(currentDate, min, max, disabledDates)) {\n      return false\n    }\n  }\n\n  return false\n}\n\n/**\n * Checks if a year is selected based on start and end dates.\n * @param date - The date representing the year.\n * @param start - Start date.\n * @param end - End date.\n * @returns True if the year matches the start's or end's year, false otherwise.\n */\nexport const isYearSelected = (date, start, end) => {\n  const year = date.getFullYear()\n\n  if (start !== null && year === start.getFullYear()) {\n    return true\n  }\n\n  if (end !== null && year === end.getFullYear()) {\n    return true\n  }\n\n  return false\n}\n\n/**\n * Checks if a year is within a specified range.\n * @param date - The date representing the year.\n * @param start - Start date.\n * @param end - End date.\n * @returns True if the year's value lies between start's year and end's year, false otherwise.\n */\nexport const isYearInRange = (date, start, end) => {\n  const year = date.getFullYear()\n  const _start = start ? start.getFullYear() : null\n  const _end = end ? end.getFullYear() : null\n\n  return Boolean(_start && _end && _start <= year && year <= _end)\n}\n\n/**\n * Removes the time component from a Date object.\n * @param date - The original date.\n * @returns A new Date object with the time set to 00:00:00.\n */\nexport const removeTimeFromDate = date => {\n  const clearedDate = new Date(date)\n  clearedDate.setHours(0, 0, 0, 0)\n  return clearedDate\n}\n\n/**\n * Copies the time (hours, minutes, seconds, milliseconds) from one Date to another.\n *\n * @param {Date} target - The date whose time will be updated.\n * @param {Date} source - The date to copy the time from.\n * @returns {Date} A new Date instance with the date from `target` and time from `source`.\n */\nexport const setTimeFromDate = (target, source) => {\n  if (target === null) {\n    return null\n  }\n\n  if (!(source instanceof Date)) {\n    return target\n  }\n\n  const result = new Date(target) // create a copy to avoid mutation\n  result.setHours(\n    source.getHours(),\n    source.getMinutes(),\n    source.getSeconds(),\n    source.getMilliseconds()\n  )\n\n  return result\n}\n"],"names":["convertIsoWeekToDate","isoWeek","year","week","split","date","Date","Number","setDate","getDate","getDay","convertToDateObject","selectionType","_date","parse","userTimezoneOffset","getTimezoneOffset","getTime","createGroupsInArray","arr","numberOfGroups","perGroup","Math","ceil","length","Array","from","fill","map","_","i","slice","getCalendarDate","calendarDate","order","view","getFullYear","getMonth","getDateBySelectionType","weekNumber","getISOWeekNumberAndYear","toString","padStart","monthNumber","getFirstAvailableDateInRange","startDate","endDate","min","max","disabledDates","_min","_max","undefined","currentDate","isDateDisabled","getMonthsNames","locale","format","toLocaleString","month","getSelectableDates","element","selector","Element","prototype","querySelectorAll","call","getYears","range","getLeadingDays","firstDayOfWeek","dates","d","y","m","firstWeekday","leadingDays","push","getMonthDays","lastDay","getTrailingDays","monthDays","days","tempDate","setHours","week1","round","getMonthDetails","daysPrevMonth","daysThisMonth","daysNextMonth","weeks","index","day","entries","number","isSameDateAs","isArray","isDateInRange","start","end","removeTimeFromDate","_start","_end","Boolean","isDateSelected","isDisableDateInRange","disabled","isMonthDisabled","current","isMonthSelected","isMonthInRange","date2","isToday","today","isYearDisabled","minYear","maxYear","isYearSelected","isYearInRange","clearedDate","setTimeFromDate","target","source","result","getHours","getMinutes","getSeconds","getMilliseconds"],"mappings":"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"}