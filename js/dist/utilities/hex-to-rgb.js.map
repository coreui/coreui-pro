{"version":3,"sources":["../../src/utilities/hex-to-rgb.js"],"names":["hexToRgb","color","TypeError","hex","match","Error","r","g","b","length","parseInt","substring"],"mappings":"AAAA;;;;;;;AAOA;AACA,IAAMA,QAAQ,GAAG,SAAXA,QAAW,CAAAC,KAAK,EAAI;AACxB,MAAI,OAAOA,KAAP,KAAiB,WAArB,EAAkC;AAChC,UAAM,IAAIC,SAAJ,CAAc,0BAAd,CAAN;AACD;;AAED,MAAMC,GAAG,GAAGF,KAAK,CAACG,KAAN,CAAY,0BAAZ,CAAZ;;AAEA,MAAI,CAACD,GAAL,EAAU;AACR,UAAM,IAAIE,KAAJ,CAAaJ,KAAb,+BAAN;AACD;;AAED,MAAIK,CAAJ;AACA,MAAIC,CAAJ;AACA,MAAIC,CAAJ;;AAEA,MAAIP,KAAK,CAACQ,MAAN,KAAiB,CAArB,EAAwB;AACtBH,IAAAA,CAAC,GAAGI,QAAQ,CAACT,KAAK,CAACU,SAAN,CAAgB,CAAhB,EAAmB,CAAnB,CAAD,EAAwB,EAAxB,CAAZ;AACAJ,IAAAA,CAAC,GAAGG,QAAQ,CAACT,KAAK,CAACU,SAAN,CAAgB,CAAhB,EAAmB,CAAnB,CAAD,EAAwB,EAAxB,CAAZ;AACAH,IAAAA,CAAC,GAAGE,QAAQ,CAACT,KAAK,CAACU,SAAN,CAAgB,CAAhB,EAAmB,CAAnB,CAAD,EAAwB,EAAxB,CAAZ;AACD,GAJD,MAIO;AACLL,IAAAA,CAAC,GAAGI,QAAQ,CAACT,KAAK,CAACU,SAAN,CAAgB,CAAhB,EAAmB,CAAnB,CAAD,EAAwB,EAAxB,CAAZ;AACAJ,IAAAA,CAAC,GAAGG,QAAQ,CAACT,KAAK,CAACU,SAAN,CAAgB,CAAhB,EAAmB,CAAnB,CAAD,EAAwB,EAAxB,CAAZ;AACAH,IAAAA,CAAC,GAAGE,QAAQ,CAACT,KAAK,CAACU,SAAN,CAAgB,CAAhB,EAAmB,CAAnB,CAAD,EAAwB,EAAxB,CAAZ;AACD;;AAED,mBAAeL,CAAf,UAAqBC,CAArB,UAA2BC,CAA3B;AACD,CA1BD;;AA4BA,eAAeR,QAAf","sourcesContent":["/**\n * --------------------------------------------------------------------------\n * CoreUI Utilities (v3.0.0-alpha.12): hex-to-rgb.js\n * Licensed under MIT (https://coreui.io/license)\n * --------------------------------------------------------------------------\n */\n\n/* eslint-disable no-magic-numbers */\nconst hexToRgb = color => {\n  if (typeof color === 'undefined') {\n    throw new TypeError('Hex color is not defined')\n  }\n\n  const hex = color.match(/^#(?:[0-9a-f]{3}){1,2}$/i)\n\n  if (!hex) {\n    throw new Error(`${color} is not a valid hex color`)\n  }\n\n  let r\n  let g\n  let b\n\n  if (color.length === 7) {\n    r = parseInt(color.substring(1, 3), 16)\n    g = parseInt(color.substring(3, 5), 16)\n    b = parseInt(color.substring(5, 7), 16)\n  } else {\n    r = parseInt(color.substring(1, 2), 16)\n    g = parseInt(color.substring(2, 3), 16)\n    b = parseInt(color.substring(3, 5), 16)\n  }\n\n  return `rgba(${r}, ${g}, ${b})`\n}\n\nexport default hexToRgb\n"],"file":"hex-to-rgb.js"}