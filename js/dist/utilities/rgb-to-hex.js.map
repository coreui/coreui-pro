{"version":3,"sources":["../../src/utilities/rgb-to-hex.js"],"names":["rgbToHex","color","TypeError","rgb","match","Error","r","parseInt","toString","g","b","slice"],"mappings":"AAAA;;;;;;;AAOA;AACA,IAAMA,QAAQ,GAAG,SAAXA,QAAW,CAAAC,KAAK,EAAI;AACxB,MAAI,OAAOA,KAAP,KAAiB,WAArB,EAAkC;AAChC,UAAM,IAAIC,SAAJ,CAAc,0BAAd,CAAN;AACD;;AAED,MAAID,KAAK,KAAK,aAAd,EAA6B;AAC3B,WAAO,WAAP;AACD;;AAED,MAAME,GAAG,GAAGF,KAAK,CAACG,KAAN,CAAY,sEAAZ,CAAZ;;AAEA,MAAI,CAACD,GAAL,EAAU;AACR,UAAM,IAAIE,KAAJ,CAAaJ,KAAb,+BAAN;AACD;;AAED,MAAMK,CAAC,SAAOC,QAAQ,CAACJ,GAAG,CAAC,CAAD,CAAJ,EAAS,EAAT,CAAR,CAAqBK,QAArB,CAA8B,EAA9B,CAAd;AACA,MAAMC,CAAC,SAAOF,QAAQ,CAACJ,GAAG,CAAC,CAAD,CAAJ,EAAS,EAAT,CAAR,CAAqBK,QAArB,CAA8B,EAA9B,CAAd;AACA,MAAME,CAAC,SAAOH,QAAQ,CAACJ,GAAG,CAAC,CAAD,CAAJ,EAAS,EAAT,CAAR,CAAqBK,QAArB,CAA8B,EAA9B,CAAd;AAEA,eAAWF,CAAC,CAACK,KAAF,CAAQ,CAAC,CAAT,CAAX,GAAyBF,CAAC,CAACE,KAAF,CAAQ,CAAC,CAAT,CAAzB,GAAuCD,CAAC,CAACC,KAAF,CAAQ,CAAC,CAAT,CAAvC;AACD,CApBD;;AAsBA,eAAeX,QAAf","sourcesContent":["/**\n * --------------------------------------------------------------------------\n * CoreUI (v3.0.0-alpha.12): rgb-to-hex.js\n * Licensed under MIT (https://coreui.io/license)\n * --------------------------------------------------------------------------\n */\n\n/* eslint-disable no-magic-numbers */\nconst rgbToHex = color => {\n  if (typeof color === 'undefined') {\n    throw new TypeError('Hex color is not defined')\n  }\n\n  if (color === 'transparent') {\n    return '#00000000'\n  }\n\n  const rgb = color.match(/^rgba?[\\s+]?\\([\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?/i)\n\n  if (!rgb) {\n    throw new Error(`${color} is not a valid rgb color`)\n  }\n\n  const r = `0${parseInt(rgb[1], 10).toString(16)}`\n  const g = `0${parseInt(rgb[2], 10).toString(16)}`\n  const b = `0${parseInt(rgb[3], 10).toString(16)}`\n\n  return `#${r.slice(-2)}${g.slice(-2)}${b.slice(-2)}`\n}\n\nexport default rgbToHex\n"],"file":"rgb-to-hex.js"}