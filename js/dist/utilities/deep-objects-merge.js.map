{"version":3,"sources":["../../src/utilities/deep-objects-merge.js"],"names":["deepObjectsMerge","target","source","Object","keys","key","assign"],"mappings":"AAAA;;;;;;AAOA,IAAMA,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,MAAD,EAASC,MAAT,EAAoB;AAC3C;AACA,kCAAkBC,MAAM,CAACC,IAAP,CAAYF,MAAZ,CAAlB,kCAAuC;AAAlC,QAAMG,GAAG,mBAAT;;AACH,QAAIH,MAAM,CAACG,GAAD,CAAN,YAAuBF,MAA3B,EAAmC;AACjCA,MAAAA,MAAM,CAACG,MAAP,CAAcJ,MAAM,CAACG,GAAD,CAApB,EAA2BL,gBAAgB,CAACC,MAAM,CAACI,GAAD,CAAP,EAAcH,MAAM,CAACG,GAAD,CAApB,CAA3C;AACD;AACF,GAN0C,CAQ3C;;;AACAF,EAAAA,MAAM,CAACG,MAAP,CAAcL,MAAM,IAAI,EAAxB,EAA4BC,MAA5B;AACA,SAAOD,MAAP;AACD,CAXD;;AAaA,eAAeD,gBAAf","sourcesContent":["/**\n * --------------------------------------------------------------------------\n * CoreUI Utilities (v3.0.0-beta.0): deep-objects-merge.js\n * Licensed under MIT (https://coreui.io/license)\n * --------------------------------------------------------------------------\n */\n\nconst deepObjectsMerge = (target, source) => {\n  // Iterate through `source` properties and if an `Object` set property to merge of `target` and `source` properties\n  for (const key of Object.keys(source)) {\n    if (source[key] instanceof Object) {\n      Object.assign(source[key], deepObjectsMerge(target[key], source[key]))\n    }\n  }\n\n  // Join `target` and modified `source`\n  Object.assign(target || {}, source)\n  return target\n}\n\nexport default deepObjectsMerge\n"],"file":"deep-objects-merge.js"}