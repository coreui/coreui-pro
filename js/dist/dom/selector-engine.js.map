{"version":3,"sources":["../../src/dom/selector-engine.js"],"names":["find","findFn","findOne","matches","closest","makeArray","NODE_TEXT","SelectorEngine","element","selector","call","document","documentElement","children","filter","child","parents","ancestor","parentNode","nodeType","Node","ELEMENT_NODE","push","prev","siblings","previous","previousSibling"],"mappings":"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","sourcesContent":["/**\n * --------------------------------------------------------------------------\n * Bootstrap (v4.3.1): dom/selectorEngine.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport { find as findFn, findOne, matches, closest } from './polyfill'\nimport { makeArray } from '../util/index'\n\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst NODE_TEXT = 3\n\nconst SelectorEngine = {\n  matches(element, selector) {\n    return matches.call(element, selector)\n  },\n\n  find(selector, element = document.documentElement) {\n    if (typeof selector !== 'string') {\n      return null\n    }\n\n    return findFn.call(element, selector)\n  },\n\n  findOne(selector, element = document.documentElement) {\n    if (typeof selector !== 'string') {\n      return null\n    }\n\n    return findOne.call(element, selector)\n  },\n\n  children(element, selector) {\n    if (typeof selector !== 'string') {\n      return null\n    }\n\n    const children = makeArray(element.children)\n\n    return children.filter(child => this.matches(child, selector))\n  },\n\n  parents(element, selector) {\n    if (typeof selector !== 'string') {\n      return null\n    }\n\n    const parents = []\n    let ancestor = element.parentNode\n\n    while (ancestor && ancestor.nodeType === Node.ELEMENT_NODE && ancestor.nodeType !== NODE_TEXT) {\n      if (this.matches(ancestor, selector)) {\n        parents.push(ancestor)\n      }\n\n      ancestor = ancestor.parentNode\n    }\n\n    return parents\n  },\n\n  closest(element, selector) {\n    if (typeof selector !== 'string') {\n      return null\n    }\n\n    return closest.call(element, selector)\n  },\n\n  prev(element, selector) {\n    if (typeof selector !== 'string') {\n      return null\n    }\n\n    const siblings = []\n    let previous = element.previousSibling\n\n    while (previous && previous.nodeType === Node.ELEMENT_NODE && previous.nodeType !== NODE_TEXT) {\n      if (this.matches(previous, selector)) {\n        siblings.push(previous)\n      }\n\n      previous = previous.previousSibling\n    }\n\n    return siblings\n  }\n}\n\nexport default SelectorEngine\n"],"file":"selector-engine.js"}