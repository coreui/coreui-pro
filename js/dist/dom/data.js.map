{"version":3,"sources":["../../src/dom/data.js"],"names":["mapData","storeData","id","set","element","key","data","get","keyProperties","delete","Data","setData","instance","getData","removeData"],"mappings":"AAAA;;;;;;;AAOA;;;;;AAMA,IAAMA,OAAO,GAAI,YAAM;AACrB,MAAMC,SAAS,GAAG,EAAlB;AACA,MAAIC,EAAE,GAAG,CAAT;AACA,SAAO;AACLC,IAAAA,GADK,eACDC,OADC,EACQC,GADR,EACaC,IADb,EACmB;AACtB,UAAI,OAAOF,OAAO,CAACC,GAAf,KAAuB,WAA3B,EAAwC;AACtCD,QAAAA,OAAO,CAACC,GAAR,GAAc;AACZA,UAAAA,GAAG,EAAHA,GADY;AAEZH,UAAAA,EAAE,EAAFA;AAFY,SAAd;AAIAA,QAAAA,EAAE;AACH;;AAEDD,MAAAA,SAAS,CAACG,OAAO,CAACC,GAAR,CAAYH,EAAb,CAAT,GAA4BI,IAA5B;AACD,KAXI;AAYLC,IAAAA,GAZK,eAYDH,OAZC,EAYQC,GAZR,EAYa;AAChB,UAAI,CAACD,OAAD,IAAY,OAAOA,OAAO,CAACC,GAAf,KAAuB,WAAvC,EAAoD;AAClD,eAAO,IAAP;AACD;;AAED,UAAMG,aAAa,GAAGJ,OAAO,CAACC,GAA9B;;AACA,UAAIG,aAAa,CAACH,GAAd,KAAsBA,GAA1B,EAA+B;AAC7B,eAAOJ,SAAS,CAACO,aAAa,CAACN,EAAf,CAAhB;AACD;;AAED,aAAO,IAAP;AACD,KAvBI;AAwBLO,IAAAA,MAxBK,mBAwBEL,OAxBF,EAwBWC,GAxBX,EAwBgB;AACnB,UAAI,OAAOD,OAAO,CAACC,GAAf,KAAuB,WAA3B,EAAwC;AACtC;AACD;;AAED,UAAMG,aAAa,GAAGJ,OAAO,CAACC,GAA9B;;AACA,UAAIG,aAAa,CAACH,GAAd,KAAsBA,GAA1B,EAA+B;AAC7B,eAAOJ,SAAS,CAACO,aAAa,CAACN,EAAf,CAAhB;AACA,eAAOE,OAAO,CAACC,GAAf;AACD;AACF;AAlCI,GAAP;AAoCD,CAvCe,EAAhB;;AAyCA,IAAMK,IAAI,GAAG;AACXC,EAAAA,OADW,mBACHC,QADG,EACOP,GADP,EACYC,IADZ,EACkB;AAC3BN,IAAAA,OAAO,CAACG,GAAR,CAAYS,QAAZ,EAAsBP,GAAtB,EAA2BC,IAA3B;AACD,GAHU;AAIXO,EAAAA,OAJW,mBAIHD,QAJG,EAIOP,GAJP,EAIY;AACrB,WAAOL,OAAO,CAACO,GAAR,CAAYK,QAAZ,EAAsBP,GAAtB,CAAP;AACD,GANU;AAOXS,EAAAA,UAPW,sBAOAF,QAPA,EAOUP,GAPV,EAOe;AACxBL,IAAAA,OAAO,CAACS,MAAR,CAAeG,QAAf,EAAyBP,GAAzB;AACD;AATU,CAAb;AAYA,eAAeK,IAAf","sourcesContent":["/**\n * --------------------------------------------------------------------------\n * Bootstrap (v4.3.1): dom/data.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * --------------------------------------------------------------------------\n */\n\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst mapData = (() => {\n  const storeData = {}\n  let id = 1\n  return {\n    set(element, key, data) {\n      if (typeof element.key === 'undefined') {\n        element.key = {\n          key,\n          id\n        }\n        id++\n      }\n\n      storeData[element.key.id] = data\n    },\n    get(element, key) {\n      if (!element || typeof element.key === 'undefined') {\n        return null\n      }\n\n      const keyProperties = element.key\n      if (keyProperties.key === key) {\n        return storeData[keyProperties.id]\n      }\n\n      return null\n    },\n    delete(element, key) {\n      if (typeof element.key === 'undefined') {\n        return\n      }\n\n      const keyProperties = element.key\n      if (keyProperties.key === key) {\n        delete storeData[keyProperties.id]\n        delete element.key\n      }\n    }\n  }\n})()\n\nconst Data = {\n  setData(instance, key, data) {\n    mapData.set(instance, key, data)\n  },\n  getData(instance, key) {\n    return mapData.get(instance, key)\n  },\n  removeData(instance, key) {\n    mapData.delete(instance, key)\n  }\n}\n\nexport default Data\n"],"file":"data.js"}