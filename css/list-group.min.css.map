{"version":3,"sources":["../scss/themes/legacy/_root.scss","../scss/themes/dark/_root.scss","../scss/_list-group.scss","../scss/mixins/_border-radius.scss","../scss/variables/components/_shared.scss","../scss/variables/_colors.scss","../scss/themes/legacy/variables/_colors.scss","../scss/themes/dark/variables/_body.scss","../scss/mixins/_hover.scss","../scss/variables/components/_list-group.scss","../scss/themes/legacy/variables/components/_list-group.scss","../scss/themes/dark/variables/components/_list-group.scss","../scss/themes/dark/variables/_colors.scss","../scss/mixins/_breakpoints.scss","../scss/mixins/_list-group.scss","../scss/_functions.scss"],"names":[],"mappings":"AAAA,MAEI,uBAAuC,QAAvC,yBAAuC,QAAvC,uBAAuC,QAAvC,oBAAuC,KAAvC,uBAAuC,QAAvC,sBAAuC,QAAvC,qBAAuC,QAAvC,oBAAuC,QCF3C,MAEI,qBAAmC,QAAnC,uBAAmC,QAAnC,qBAAmC,QAAnC,kBAAmC,QAAnC,qBAAmC,QAAnC,oBAAmC,QAAnC,mBAAmC,QAAnC,kBAAmC,QCEvC,YACE,QAAS,KACT,eAAgB,OAShB,cAAe,ECGb,cCKgB,OFnBpB,gCAMI,aAAc,EANlB,sBASI,cAAe,EAYnB,wBACE,MAAO,KACP,WAAY,QAEV,MGfS,QHWb,wCAII,MIfY,QJWhB,sCAII,MKxBc,QCcf,8BADA,8BNgBC,QAAS,EACT,gBAAiB,KAEf,MGvBO,QHwBP,iBG9BO,QGWV,8CADA,8CNmBG,MIvBU,QJwBV,iBI9BU,QEWb,4CADA,4CNmBG,MKhCY,QLiCZ,iBGlCG,qBHqBc,+BAmBjB,MG5BO,QH6BP,iBGpCO,QHgBU,+CAmBjB,MI5BU,QJ6BV,iBIpCU,QJgBO,6CAmBjB,MKvCY,QLwCZ,iBG7BO,QHuCb,iBACE,SAAU,SACV,QAAS,MACT,QOrD2B,OACA,QPsD3B,OEnDc,IFmDmB,MAG/B,iBOrD8B,QPsD9B,aG3DK,kBHkDT,iCAQI,iBQ5DkC,QR6DlC,aI3DS,iBJkDb,+BAOI,MKzDc,QL0Dd,iBS3DkC,QT4DlC,aUnDa,QV0CD,6BC5BZ,uBDyC2B,QCxC3B,wBDwC2B,QAbf,4BCdZ,2BD+B8B,QC9B9B,0BD8B8B,QAjBlB,0BAAA,0BAsBZ,eAAgB,KAEd,MGlEO,QHmEP,iBOtE4B,QP6ClB,0CAAA,0CAwBV,MIlEU,QJmEV,iBQ7EgC,QRoDtB,wCAAA,wCAwBV,MK1EY,qBL2EZ,iBUnEW,kBV0CD,wBA+BZ,QAAS,EAEP,MGpFG,KHqFH,iBG1CU,QH2CV,aG3CU,QHQA,wCAiCV,MGpFG,KHqFH,iBItDW,QJuDX,aIvDW,QJoBD,sCAiCV,MGpFG,KHqFH,iBUzDW,QV0DX,aU1DW,QVuBjB,kCAwCI,iBAAkB,EAxCN,yCA2CV,WEzFU,KF0FV,iBE1FU,IFwGZ,uBACE,eAAgB,IAEA,oDC3ClB,0BClDgB,ODsChB,wBD0DuC,EAHrB,mDCvDlB,wBCtCgB,ODkDhB,0BDmDyC,EARvB,+CAYZ,WAAY,EAGV,yDACF,iBE3HM,IF4HN,kBAAmB,EAFD,gEAKhB,YE/HI,KFgIJ,kBEhII,ISgEY,yBXwCxB,0BACE,eAAgB,IAEA,uDC3ClB,0BClDgB,ODsChB,wBD0DuC,EAHrB,sDCvDlB,wBCtCgB,ODkDhB,0BDmDyC,EARvB,kDAYZ,WAAY,EAGV,4DACF,iBE3HM,IF4HN,kBAAmB,EAFD,mEAKhB,YE/HI,KFgIJ,kBEhII,KSgEY,yBXwCxB,0BACE,eAAgB,IAEA,uDC3ClB,0BClDgB,ODsChB,wBD0DuC,EAHrB,sDCvDlB,wBCtCgB,ODkDhB,0BDmDyC,EARvB,kDAYZ,WAAY,EAGV,4DACF,iBE3HM,IF4HN,kBAAmB,EAFD,mEAKhB,YE/HI,KFgIJ,kBEhII,KSgEY,yBXwCxB,0BACE,eAAgB,IAEA,uDC3ClB,0BClDgB,ODsChB,wBD0DuC,EAHrB,sDCvDlB,wBCtCgB,ODkDhB,0BDmDyC,EARvB,kDAYZ,WAAY,EAGV,4DACF,iBE3HM,IF4HN,kBAAmB,EAFD,mEAKhB,YE/HI,KFgIJ,kBEhII,KSgEa,0BXwCzB,0BACE,eAAgB,IAEA,uDC3ClB,0BClDgB,ODsChB,wBD0DuC,EAHrB,sDCvDlB,wBCtCgB,ODkDhB,0BDmDyC,EARvB,kDAYZ,WAAY,EAGV,4DACF,iBE3HM,IF4HN,kBAAmB,EAFD,mEAKhB,YE/HI,KFgIJ,kBEhII,KF8IhB,kBCrII,cDsIqB,EAErB,mCACA,aAAc,EAAE,EElJJ,IFiJI,8CAId,oBAAqB,EY3JzB,uCACE,MCyGM,QDxGN,iBCwGM,QP1FP,oEADA,oEMTK,MCoGE,QDnGF,iBAAkB,QAHE,qEAOpB,MTVC,KSWD,iBC8FE,QD7FF,aC6FE,QD1GR,yCACE,MCyGM,QDxGN,iBCwGM,QP1FP,sEADA,sEMTK,MCoGE,QDnGF,iBAAkB,QAHE,uEAOpB,MTVC,KSWD,iBC8FE,QD7FF,aC6FE,QD1GR,uCACE,MCyGM,QDxGN,iBCwGM,QP1FP,oEADA,oEMTK,MCoGE,QDnGF,iBAAkB,QAHE,qEAOpB,MTVC,KSWD,iBC8FE,QD7FF,aC6FE,QD1GR,oCACE,MCyGM,QDxGN,iBCwGM,QP1FP,iEADA,iEMTK,MCoGE,QDnGF,iBAAkB,QAHE,kEAOpB,MTVC,KSWD,iBC8FE,QD7FF,aC6FE,QD1GR,uCACE,MCyGM,QDxGN,iBCwGM,QP1FP,oEADA,oEMTK,MCoGE,QDnGF,iBAAkB,QAHE,qEAOpB,MTVC,KSWD,iBC8FE,QD7FF,aC6FE,QD1GR,sCACE,MCyGM,QDxGN,iBCwGM,QP1FP,mEADA,mEMTK,MCoGE,QDnGF,iBAAkB,QAHE,oEAOpB,MTVC,KSWD,iBC8FE,QD7FF,aC6FE,QD1GR,qCACE,MCyGM,QDxGN,iBCwGM,QP1FP,kEADA,kEMTK,MCoGE,QDnGF,iBAAkB,QAHE,mEAOpB,MTVC,KSWD,iBC8FE,QD7FF,aC6FE,QD1GR,oCACE,MCyGM,QDxGN,iBCwGM,QP1FP,iEADA,iEMTK,MCoGE,QDnGF,iBAAkB,QAHE,kEAOpB,MTVC,KSWD,iBC8FE,QD7FF,aC6FE,QD1GR,yCACE,MCyGM,QDxGN,iBCwGM,QP1FP,sEADA,sEMTK,MCoGE,QDnGF,iBAAkB,QAHE,uEAOpB,MTVC,KSWD,iBC8FE,QD7FF,aC6FE,QD1GR,2CACE,MCyGM,QDxGN,iBCwGM,QP1FP,wEADA,wEMTK,MCoGE,QDnGF,iBAAkB,QAHE,yEAOpB,MTVC,KSWD,iBC8FE,QD7FF,aC6FE,QD1GR,yCACE,MCyGM,QDxGN,iBCwGM,QP1FP,sEADA,sEMTK,MCoGE,QDnGF,iBAAkB,QAHE,uEAOpB,MTVC,KSWD,iBC8FE,QD7FF,aC6FE,QD1GR,sCACE,MCyGM,QDxGN,iBCwGM,QP1FP,mEADA,mEMTK,MCoGE,QDnGF,iBAAkB,QAHE,oEAOpB,MTVC,KSWD,iBC8FE,QD7FF,aC6FE,QD1GR,yCACE,MCyGM,QDxGN,iBCwGM,QP1FP,sEADA,sEMTK,MCoGE,QDnGF,iBAAkB,QAHE,uEAOpB,MTVC,KSWD,iBC8FE,QD7FF,aC6FE,QD1GR,wCACE,MCyGM,QDxGN,iBCwGM,QP1FP,qEADA,qEMTK,MCoGE,QDnGF,iBAAkB,QAHE,sEAOpB,MTVC,KSWD,iBC8FE,QD7FF,aC6FE,QD1GR,uCACE,MCyGM,QDxGN,iBCwGM,QP1FP,oEADA,oEMTK,MCoGE,QDnGF,iBAAkB,QAHE,qEAOpB,MTVC,KSWD,iBC8FE,QD7FF,aC6FE,QD1GR,sCACE,MCyGM,QDxGN,iBCwGM,QP1FP,mEADA,mEMTK,MCoGE,QDnGF,iBAAkB,QAHE,oEAOpB,MTVC,KSWD,iBC8FE,QD7FF,aC6FE,QD1GR,yBACE,MCyGM,QDxGN,iBCwGM,QP1FP,sDADA,sDMTK,MCoGE,QDnGF,iBAAkB,QAHE,uDAOpB,MTVC,KSWD,iBC8FE,QD7FF,aC6FE,QD1GR,2BACE,MCyGM,QDxGN,iBCwGM,QP1FP,wDADA,wDMTK,MCoGE,QDnGF,iBAAkB,QAHE,yDAOpB,MTVC,KSWD,iBC8FE,QD7FF,aC6FE,QD1GR,yBACE,MCyGM,QDxGN,iBCwGM,QP1FP,sDADA,sDMTK,MCoGE,QDnGF,iBAAkB,QAHE,uDAOpB,MTVC,KSWD,iBC8FE,QD7FF,aC6FE,QD1GR,sBACE,MCyGM,QDxGN,iBCwGM,QP1FP,mDADA,mDMTK,MCoGE,QDnGF,iBAAkB,QAHE,oDAOpB,MTVC,KSWD,iBC8FE,QD7FF,aC6FE,QD1GR,yBACE,MCyGM,QDxGN,iBCwGM,QP1FP,sDADA,sDMTK,MCoGE,QDnGF,iBAAkB,QAHE,uDAOpB,MTVC,KSWD,iBC8FE,QD7FF,aC6FE,QD1GR,wBACE,MCyGM,QDxGN,iBCwGM,QP1FP,qDADA,qDMTK,MCoGE,QDnGF,iBAAkB,QAHE,sDAOpB,MTVC,KSWD,iBC8FE,QD7FF,aC6FE,QD1GR,uBACE,MCyGM,QDxGN,iBCwGM,QP1FP,oDADA,oDMTK,MCoGE,QDnGF,iBAAkB,QAHE,qDAOpB,MTVC,KSWD,iBC8FE,QD7FF,aC6FE,QD1GR,sBACE,MCyGM,QDxGN,iBCwGM,QP1FP,mDADA,mDMTK,MCoGE,QDnGF,iBAAkB,QAHE,oDAOpB,MTVC,KSWD,iBC8FE,QD7FF,aC6FE,QbqER,oCACE,cAAe,IACf,WAAY,EACZ,aAAc,EACd,cAAe,ECpKf,cDqKuB,EALT,4DAQZ,SAAU,SADa,oEAIrB,SAAU,SACV,OAAQ,KACR,MAAO,IACP,OAAQ,IACR,QAAS,GASP,iBGrMD,kBHoLoB,wFAWnB,KAAM,GAXa,8EAcnB,MAAO,GAdY,oFAiBnB,iBIrMG,iBJoLgB,kFAiBnB,iBU7LO,QEUf,8CACE,YAAa,IAAI,MFQJ,QETf,gDACE,YAAa,IAAI,MFSJ,QEVf,8CACE,YAAa,IAAI,MFUJ,QEXf,2CACE,YAAa,IAAI,MFWJ,QEZf,8CACE,YAAa,IAAI,MFYJ,QEbf,6CACE,YAAa,IAAI,MFaJ,QEdf,4CACE,YAAa,IAAI,MFbJ,QEYf,2CACE,YAAa,IAAI,MFXJ,QEUf,gDACE,YAAa,IAAI,MRWJ,QQZf,kDACE,YAAa,IAAI,MRYJ,QQbf,gDACE,YAAa,IAAI,MRaJ,QQdf,6CACE,YAAa,IAAI,MRcJ,QQff,gDACE,YAAa,IAAI,MReJ,QQhBf,+CACE,YAAa,IAAI,MRgBJ,QQjBf,8CACE,YAAa,IAAI,MRiBJ,QQlBf,6CACE,YAAa,IAAI,MRkBJ,QQnBf,mDACE,YAAa,IAAI,MTuBL,QSxBd,qDACE,YAAa,IAAI,MT2CH,QS5ChB,mDACE,YAAa,IAAI,MTyDL,QS1Dd,gDACE,YAAa,IAAI,MToDR,KSrDX,mDACE,YAAa,IAAI,MT8DL,QS/Dd,kDACE,YAAa,IAAI,MT+CN,QShDb,iDACE,YAAa,IAAI,MThBR,QSeX,gDACE,YAAa,IAAI,MTTR","sourcesContent":[":root {\n  @each $color, $value in $theme-colors {\n    --#{$color}-legacy-theme: #{$value};\n  }\n}\n",":root {\n  @each $color, $value in $theme-colors__dt {\n    --#{$color}-dark-theme: #{$value};\n  }\n}\n","// Base class\n//\n// Easily usable on <ul>, <ol>, or <div>.\n\n.list-group {\n  display: flex;\n  flex-direction: column;\n\n  // No need to set list-style: none; since .list-group-item is block level\n  @include ltr {\n    padding-left: 0; // reset padding because ul and ol\n  }\n  @include rtl {\n    padding-right: 0; // reset padding because ul and ol\n  }\n  margin-bottom: 0;\n  @include border-radius($list-group-border-radius);\n}\n\n\n// Interactive list items\n//\n// Use anchor or button elements instead of `li`s or `div`s to create interactive\n// list items. Includes an extra `.active` modifier class for selected items.\n\n.list-group-item-action {\n  width: 100%; // For `<button>`s (anchors become 100% by default though)\n  text-align: inherit; // For `<button>`s (anchors inherit)\n  @include themes($list-group-theme-map, $create: parent) {\n    color: themes-get-value(\"list-group-action-color\");\n  }\n\n  // Hover state\n  @include hover-focus() {\n    z-index: 1; // Place hover/focus items above their siblings for proper border styling\n    text-decoration: none;\n    @include themes($list-group-theme-map, $create: parent) {\n      color: themes-get-value(\"list-group-action-hover-color\");\n      background-color: themes-get-value(\"list-group-hover-bg\");\n    }\n  }\n\n  &:active {\n    @include themes($list-group-theme-map, $create: parent) {\n      color: themes-get-value(\"list-group-action-active-color\");\n      background-color: themes-get-value(\"list-group-action-active-bg\");\n    }\n  }\n}\n\n\n// Individual list items\n//\n// Use on `li`s or `div`s within the `.list-group` parent.\n\n.list-group-item {\n  position: relative;\n  display: block;\n  padding: $list-group-item-padding-y $list-group-item-padding-x;\n  text-decoration: if($link-decoration == none, null, none);\n  border: $list-group-border-width solid;\n  @include themes($list-group-theme-map, $create: parent) {\n    color: themes-get-value(\"list-group-color\");\n    background-color: themes-get-value(\"list-group-bg\");\n    border-color: themes-get-value(\"list-group-border-color\");\n  }\n\n  &:first-child {\n    @include border-top-radius(inherit);\n  }\n\n  &:last-child {\n    @include border-bottom-radius(inherit);\n  }\n\n  &.disabled,\n  &:disabled {\n    pointer-events: none;\n    @include themes($list-group-theme-map, $create: parent) {\n      color: themes-get-value(\"list-group-disabled-color\");\n      background-color: themes-get-value(\"list-group-disabled-bg\");\n    }\n  }\n\n  // Include both here for `<a>`s and `<button>`s\n  &.active {\n    z-index: 2; // Place active items above their siblings for proper border styling\n    @include themes($list-group-theme-map, $create: parent) {\n      color: themes-get-value(\"list-group-active-color\");\n      background-color: themes-get-value(\"list-group-active-bg\");\n      border-color: themes-get-value(\"list-group-active-border-color\");\n    }\n  }\n\n  & + & {\n    border-top-width: 0;\n\n    &.active {\n      margin-top: -$list-group-border-width;\n      border-top-width: $list-group-border-width;\n    }\n  }\n}\n\n\n// Horizontal\n//\n// Change the layout of list group items from vertical (default) to horizontal.\n\n@each $breakpoint in map-keys($grid-breakpoints) {\n  @include media-breakpoint-up($breakpoint) {\n    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);\n\n    .list-group-horizontal#{$infix} {\n      flex-direction: row;\n\n      .list-group-item {\n        &:first-child {\n          @include border-bottom-left-radius($list-group-border-radius);\n          @include border-top-right-radius(0);\n        }\n\n        &:last-child {\n          @include border-top-right-radius($list-group-border-radius);\n          @include border-bottom-left-radius(0);\n        }\n\n        &.active {\n          margin-top: 0;\n        }\n\n        & + .list-group-item {\n          border-top-width: $list-group-border-width;\n          border-left-width: 0;\n\n          &.active {\n            margin-left: -$list-group-border-width;\n            border-left-width: $list-group-border-width;\n          }\n        }\n      }\n    }\n  }\n}\n\n\n// Flush list items\n//\n// Remove borders and border-radius to keep list group items edge-to-edge. Most\n// useful within other components (e.g., cards).\n\n.list-group-flush {\n  @include border-radius(0);\n\n  > .list-group-item {\n    border-width: 0 0 $list-group-border-width;\n\n    &:last-child {\n      border-bottom-width: 0;\n    }\n  }\n}\n\n\n// Contextual variants\n//\n// Add modifier classes to change text and background color on individual items.\n// Organizationally, this must come after the `:hover` states.\n\n@include theme-variant() {\n  @include list-group-item-variant($color,  theme-color-level($value, -9),  theme-color-level($value, 6));\n}\n\n// List items with accent\n//\n// Remove top, bottome and right borders and border-radius.\n\n.list-group-accent {\n  .list-group-item {\n    margin-bottom: 1px;\n    border-top: 0;\n    border-right: 0;\n    border-bottom: 0;\n    @include border-radius(0);\n\n    &.list-group-item-divider {\n      position: relative;\n\n      &::before {\n        position: absolute;\n        bottom: -1px;\n        width: 90%;\n        height: 1px;\n        content: \"\";\n\n        @include ltr {\n          left: 5%;\n        }\n        @include rtl {\n          right: 5%;\n        }\n        @include themes($list-group-theme-map) {\n          background-color: themes-get-value(\"list-group-border-color\");\n        }\n      }\n    }\n  }\n  // Contextual variants\n  //\n  // Add modifier classes to change border color on individual items.\n  @include theme-variant() {\n    @include list-group-item-accent-variant($color, $value);\n  }\n}\n","// stylelint-disable property-blacklist\n// Single side border-radius\n\n// Helper function to replace negative values with 0\n@function valid-radius($radius) {\n  $return: ();\n  @each $value in $radius {\n    @if type-of($value) == number {\n      $return: append($return, max($value, 0));\n    } @else {\n      $return: append($return, $value);\n    }\n  }\n  @return $return;\n}\n\n@mixin border-radius($radius: $border-radius, $fallback-border-radius: false) {\n  @if $enable-rounded {\n    border-radius: valid-radius($radius);\n  }\n  @else if $fallback-border-radius != false {\n    border-radius: $fallback-border-radius;\n  }\n}\n\n@mixin border-top-radius($radius) {\n  @if $enable-rounded {\n    border-top-left-radius: valid-radius($radius);\n    border-top-right-radius: valid-radius($radius);\n  }\n}\n\n@mixin border-right-radius($radius) {\n  @if $enable-rounded {\n    border-top-right-radius: valid-radius($radius);\n    border-bottom-right-radius: valid-radius($radius);\n  }\n}\n\n@mixin border-bottom-radius($radius) {\n  @if $enable-rounded {\n    border-bottom-right-radius: valid-radius($radius);\n    border-bottom-left-radius: valid-radius($radius);\n  }\n}\n\n@mixin border-left-radius($radius) {\n  @if $enable-rounded {\n    border-top-left-radius: valid-radius($radius);\n    border-bottom-left-radius: valid-radius($radius);\n  }\n}\n\n@mixin border-top-left-radius($radius) {\n  @if $enable-rounded {\n    border-top-left-radius: valid-radius($radius);\n  }\n}\n\n@mixin border-top-right-radius($radius) {\n  @if $enable-rounded {\n    border-top-right-radius: valid-radius($radius);\n  }\n}\n\n@mixin border-bottom-right-radius($radius) {\n  @if $enable-rounded {\n    border-bottom-right-radius: valid-radius($radius);\n  }\n}\n\n@mixin border-bottom-left-radius($radius) {\n  @if $enable-rounded {\n    border-bottom-left-radius: valid-radius($radius);\n  }\n}\n","\n\n// Components\n//\n// Define common padding and border radius sizes and more.\n\n$line-height-lg:  1.5 !default;\n$line-height-sm:  1.5 !default;\n\n$border-width:  1px !default;\n$border-color:  $gray-200 !default;\n\n$border-theme-map: () !default;\n// stylelint-disable-next-line scss/dollar-variable-default\n$border-theme-map: map-merge(\n  (\n    default: (\n      \"border-color\": $border-color\n    )\n  ),\n  $border-theme-map\n);\n\n$border-radius:     .25rem !default;\n$border-radius-lg:  .3rem !default;\n$border-radius-sm:  .2rem !default;\n\n$rounded-pill:  50rem !default;\n\n$box-shadow-sm:  0 .125rem .25rem rgba($black, .075) !default;\n$box-shadow:     0 .5rem 1rem rgba($black, .15) !default;\n$box-shadow-lg:  0 1rem 3rem rgba($black, .175) !default;\n\n$component-color:  $body-color !default;\n$component-bg:     $white !default;\n\n$component-active-color:  $white !default;\n$component-active-bg:     theme-color(\"primary\") !default;\n\n$caret-width:           .3em !default;\n$caret-vertical-align:  $caret-width * .85 !default;\n$caret-spacing:         $caret-width * .85 !default;\n\n$transition-base:      all .2s ease-in-out !default;\n$transition-fade:      opacity .15s linear !default;\n$transition-collapse:  height .35s ease !default;\n\n$embed-responsive-aspect-ratios: () !default;\n// stylelint-disable-next-line scss/dollar-variable-default\n$embed-responsive-aspect-ratios: join(\n  (\n    (21 9),\n    (16 9),\n    (4 3),\n    (1 1),\n  ),\n  $embed-responsive-aspect-ratios\n);\n","//\n// CoreUI default colors\n//\n\n$white:  #fff !default;\n$black:  #000015 !default;\n\n$gray-base:  #3c4b64 !default;\n$gray-100:   #ebedef !default;\n$gray-200:   #d8dbe0 !default;\n$gray-300:   #c4c9d0 !default;\n$gray-400:   #b1b7c1 !default;\n$gray-500:   #9da5b1 !default;\n$gray-600:   #8a93a2 !default;\n$gray-700:   #768192 !default;\n$gray-800:   #636f83 !default;\n$gray-900:   #4f5d73 !default;\n\n$grays: () !default;\n// stylelint-disable-next-line scss/dollar-variable-default\n$grays: map-merge(\n  (\n    \"100\":  $gray-100,\n    \"200\":  $gray-200,\n    \"300\":  $gray-300,\n    \"400\":  $gray-400,\n    \"500\":  $gray-500,\n    \"600\":  $gray-600,\n    \"700\":  $gray-700,\n    \"800\":  $gray-800,\n    \"900\":  $gray-900\n  ),\n  $grays\n);\n\n$primary-base:  #321fdb !default;\n$primary-100:   #eae9fb !default;\n$primary-200:   #d6d2fb !default;\n$primary-300:   #c1bcf4 !default;\n$primary-400:   #ada5f1 !default;\n$primary-500:   #988fed !default;\n$primary-600:   #8478ea !default;\n$primary-700:   #6f62e6 !default;\n$primary-800:   #5b4ce2 !default;\n$primary-900:   #4635df !default;\n\n$primary-dark:  #1f1498 !default;\n$primary:       #321fdb !default;\n$primary-50:    #988fed !default;\n$primary-25:    #ccc7f6 !default;\n\n\n$secondary-base:  #3c4b64 !default;\n\n$secondary-100:   #ebedef !default;\n$secondary-200:   #d8dbe0 !default;\n$secondary-300:   #c4c9d0 !default;\n$secondary-400:   #b1b7c1 !default;\n$secondary-500:   #9da5b1 !default;\n$secondary-600:   #8a93a2 !default;\n$secondary-700:   #768192 !default;\n$secondary-800:   #636f83 !default;\n$secondary-900:   #4f5d73 !default;\n\n$secondary-dark:  #212233 !default;\n$secondary:       #3c4b64 !default;\n$secondary-50:    #9da5b1 !default;\n$secondary-25:    #ced2d8 !default;\n\n\n$danger-dark:  #d93737 !default;\n$danger:       #e55353 !default;\n$danger-50:    #f2a9a9 !default;\n$danger-25:    #f9d4d4 !default;\n\n$info-dark:  #2982cc !default;\n$info:       #39f !default;\n$info-50:    #80c6ff !default;\n$info-25:    #c0e6ff !default;\n\n$success-dark:  #1b9e3e !default;\n$success:       #2eb85c !default;\n$success-50:    #96dbad !default;\n$success-25:    #cbedd6 !default;\n\n$warning-dark:  #f6960b !default;\n$warning:       #f9b115 !default;\n$warning-50:    #fcd88a !default;\n$warning-25:    #feecc5 !default;\n\n$light:  $gray-100 !default;\n$dark:   $gray-800 !default;\n\n$pink:  #e83e8c !default;\n\n$theme-colors: () !default;\n// stylelint-disable-next-line scss/dollar-variable-default\n$theme-colors: map-merge(\n  (\n    \"primary\":    $primary,\n    \"secondary\":  $secondary-25,\n    \"success\":    $success,\n    \"info\":       $info,\n    \"warning\":    $warning,\n    \"danger\":     $danger,\n    \"light\":      $light,\n    \"dark\":       $dark\n  ),\n  $theme-colors\n);\n\n// Set a specific jump point for requesting color jumps\n$theme-color-interval:  8% !default;\n\n// The yiq lightness value that determines when the lightness of color changes from \"dark\" to \"light\". Acceptable values are between 0 and 255.\n$yiq-contrasted-threshold:  150 !default;\n\n// Customize the light and dark text colors for use in our YIQ color contrast function.\n$yiq-text-dark:   $gray-900 !default;\n$yiq-text-light:  $white !default;\n\n$yiq-theme-map: () !default;\n// stylelint-disable-next-line scss/dollar-variable-default\n$yiq-theme-map: map-merge(\n  (\n    default: (\n      \"yiq-text-dark\":  $yiq-text-dark,\n      \"yiq-text-light\":  $yiq-text-light\n    )\n  ),\n  $yiq-theme-map\n);\n\n// TODO: Move to better place\n// Characters which are escaped by the escape-svg function\n$escaped-characters: (\n  (\"<\",\"%3c\"),\n  (\">\",\"%3e\"),\n  (\"#\",\"%23\"),\n  (\"(\",\"%28\"),\n  (\")\",\"%29\"),\n) !default;\n","//\n// CoreUI 3.x Color system\n//\n\n$white__lt:  #fff !default;\n$black__lt:  #000 !default;\n\n$gray-base__lt:  #181b1e !default;\n$gray-100__lt:  #f0f3f5 !default;\n$gray-200__lt:  #e4e7ea !default;\n$gray-300__lt:  #c8ced3 !default;\n$gray-400__lt:  #acb4bc !default;\n$gray-500__lt:  #8f9ba6 !default;\n$gray-600__lt:  #73818f !default;\n$gray-700__lt:  #5c6873 !default;\n$gray-800__lt:  #2f353a !default;\n$gray-900__lt:  #23282c !default;\n\n$grays__lt: () !default;\n// stylelint-disable-next-line scss/dollar-variable-default\n$grays__lt: map-merge(\n  (\n    \"100\":  $gray-100__lt,\n    \"200\":  $gray-200__lt,\n    \"300\":  $gray-300__lt,\n    \"400\":  $gray-400__lt,\n    \"500\":  $gray-500__lt,\n    \"600\":  $gray-600__lt,\n    \"700\":  $gray-700__lt,\n    \"800\":  $gray-800__lt,\n    \"900\":  $gray-900__lt\n  ),\n  $grays__lt\n);\n\n$primary__lt:    #20a8d8 !default;\n$secondary__lt:  #c8ced3 !default;\n$success__lt:    #4dbd74 !default;\n$info__lt:       #63c2de !default;\n$warning__lt:    #ffc107 !default;\n$danger__lt:     #f86c6b !default;\n$light__lt:      #f0f3f5 !default;\n$dark__lt:       #2f353a !default;\n\n$theme-colors__lt: () !default;\n// stylelint-disable-next-line scss/dollar-variable-default\n$theme-colors__lt: map-merge(\n  (\n    \"primary\":    $primary__lt,\n    \"secondary\":  $secondary__lt,\n    \"success\":    $success__lt,\n    \"info\":       $info__lt,\n    \"warning\":    $warning__lt,\n    \"danger\":     $danger__lt,\n    \"light\":      $light__lt,\n    \"dark\":       $dark__lt\n  ),\n  $theme-colors__lt\n);\n\n// Customize the light and dark text colors for use in our YIQ color contrast function.\n$yiq-text-dark__lt:   $gray-base__lt !default;\n$yiq-text-light__lt:  $white !default;\n\n// stylelint-disable-next-line scss/dollar-variable-default\n$yiq-theme-map: map-merge(\n  $yiq-theme-map,\n  (\n    legacy: (\n      \"yiq-text-dark\":  $yiq-text-dark__lt,\n      \"yiq-text-light\":  $yiq-text-light__lt\n    )\n  ),\n);\n","// Body\n//\n// Settings for the `<body>` element.\n\n$body-bg__dt:     $gray-base__dt !default;\n$body-color__dt:  #e1e1e1 !default;\n\n// stylelint-disable-next-line scss/dollar-variable-default\n$body-theme-map: map-merge(\n  $body-theme-map,\n  (\n    dark: (\n      \"body-bg\":     $body-bg__dt,\n      \"body-color\":  $body-color__dt\n    )\n  )\n);\n","// Hover mixin and `$enable-hover-media-query` are deprecated.\n//\n// Originally added during our alphas and maintained during betas, this mixin was\n// designed to prevent `:hover` stickiness on iOS-an issue where hover styles\n// would persist after initial touch.\n//\n// For backward compatibility, we've kept these mixins and updated them to\n// always return their regular pseudo-classes instead of a shimmed media query.\n//\n// Issue: https://github.com/twbs/bootstrap/issues/25195\n\n@mixin hover() {\n  @media (hover: hover), (-ms-high-contrast: none) {\n    &:hover { @content; }\n  }\n}\n\n@mixin hover-focus() {\n  &:hover,\n  &:focus {\n    @content;\n  }\n}\n\n@mixin plain-hover-focus() {\n  &,\n  &:hover,\n  &:focus {\n    @content;\n  }\n}\n\n@mixin hover-focus-active() {\n  &:hover,\n  &:focus,\n  &:active {\n    @content;\n  }\n}\n","// List group\n\n$list-group-border-width:   $border-width !default;\n$list-group-border-radius:  $border-radius !default;\n\n$list-group-item-padding-y:  .75rem !default;\n$list-group-item-padding-x:  1.25rem !default;\n\n// Default theme\n$list-group-color:                null !default;\n$list-group-bg:                   inherit !default;\n$list-group-border-color:         rgba($black, .125) !default;\n$list-group-hover-bg:             $gray-100 !default;\n$list-group-active-color:         $component-active-color !default;\n$list-group-active-bg:            $component-active-bg !default;\n$list-group-active-border-color:  $list-group-active-bg !default;\n$list-group-disabled-color:       $gray-600 !default;\n$list-group-disabled-bg:          $list-group-bg !default;\n$list-group-action-color:         $gray-700 !default;\n$list-group-action-hover-color:   $list-group-action-color !default;\n$list-group-action-active-color:  $body-color !default;\n$list-group-action-active-bg:     $gray-200 !default;\n\n$list-group-theme-map: () !default;\n// stylelint-disable-next-line scss/dollar-variable-default\n$list-group-theme-map: map-merge(\n  (\n    default: (\n      \"list-group-color\":                $list-group-color,\n      \"list-group-bg\":                   $list-group-bg,\n      \"list-group-border-color\":         $list-group-border-color,\n      \"list-group-hover-bg\":             $list-group-hover-bg,\n      \"list-group-active-color\":         $list-group-active-color,\n      \"list-group-active-bg\":            $list-group-active-bg,\n      \"list-group-active-border-color\":  $list-group-active-border-color,\n      \"list-group-disabled-color\":       $list-group-disabled-color,\n      \"list-group-disabled-bg\":          $list-group-disabled-bg,\n      \"list-group-action-color\":         $list-group-action-color,\n      \"list-group-action-hover-color\":   $list-group-action-hover-color,\n      \"list-group-action-active-color\":  $list-group-action-active-color,\n      \"list-group-action-active-bg\":     $list-group-action-active-bg,\n    )\n  ),\n  $list-group-theme-map\n);\n","// Legacy theme\n\n$list-group-color__lt:                null !default;\n$list-group-bg__lt:                   inherit !default;\n$list-group-border-color__lt:         rgba($black__lt, .125) !default;\n$list-group-hover-bg__lt:             $gray-100__lt !default;\n$list-group-active-color__lt:         $component-active-color__lt !default;\n$list-group-active-bg__lt:            $component-active-bg__lt !default;\n$list-group-active-border-color__lt:  $list-group-active-bg__lt !default;\n$list-group-disabled-color__lt:       $gray-600__lt !default;\n$list-group-disabled-bg__lt:          $list-group-bg__lt !default;\n$list-group-action-color__lt:         $gray-700__lt !default;\n$list-group-action-hover-color__lt:   $list-group-action-color__lt !default;\n$list-group-action-active-color__lt:  $body-color__lt !default;\n$list-group-action-active-bg__lt:     $gray-200__lt !default;\n\n$list-group-theme-map: () !default;\n// stylelint-disable-next-line scss/dollar-variable-default\n$list-group-theme-map: map-merge(\n  $list-group-theme-map,\n  (\n    legacy: (\n      \"list-group-color\":                $list-group-color__lt,\n      \"list-group-bg\":                   $list-group-bg__lt,\n      \"list-group-border-color\":         $list-group-border-color__lt,\n      \"list-group-hover-bg\":             $list-group-hover-bg__lt,\n      \"list-group-active-color\":         $list-group-active-color__lt,\n      \"list-group-active-bg\":            $list-group-active-bg__lt,\n      \"list-group-active-border-color\":  $list-group-active-border-color__lt,\n      \"list-group-disabled-color\":       $list-group-disabled-color__lt,\n      \"list-group-disabled-bg\":          $list-group-disabled-bg__lt,\n      \"list-group-action-color\":         $list-group-action-color__lt,\n      \"list-group-action-hover-color\":   $list-group-action-hover-color__lt,\n      \"list-group-action-active-color\":  $list-group-action-active-color__lt,\n      \"list-group-action-active-bg\":     $list-group-action-active-bg__lt,\n    )\n  )\n);\n","// List group\n\n// Dark theme\n$list-group-color__dt:                $body-color__dt !default;\n$list-group-bg__dt:                   inherit !default;\n$list-group-border-color__dt:         $border-color__dt !default;\n$list-group-hover-bg__dt:             rgba($white, .1) !default;\n$list-group-active-color__dt:         $component-active-color__dt !default;\n$list-group-active-bg__dt:            $component-active-bg__dt !default;\n$list-group-active-border-color__dt:  $list-group-active-bg__dt !default;\n$list-group-disabled-color__dt:       rgba($body-color__dt, .5) !default;\n$list-group-disabled-bg__dt:          rgba($border-color__dt, .8) !default;\n$list-group-action-color__dt:         $body-color__dt !default;\n$list-group-action-hover-color__dt:   $body-color__dt !default;\n$list-group-action-active-color__dt:  $body-color__dt !default;\n$list-group-action-active-bg__dt:     $gray-900 !default;\n\n// stylelint-disable-next-line scss/dollar-variable-default\n$list-group-theme-map: map-merge(\n  $list-group-theme-map,\n  (\n    dark: (\n      \"list-group-color\":                $list-group-color__dt,\n      \"list-group-bg\":                   $list-group-bg__dt,\n      \"list-group-border-color\":         $list-group-border-color__dt,\n      \"list-group-hover-bg\":             $list-group-hover-bg__dt,\n      \"list-group-active-color\":         $list-group-active-color__dt,\n      \"list-group-active-bg\":            $list-group-active-bg__dt,\n      \"list-group-active-border-color\":  $list-group-active-border-color__dt,\n      \"list-group-disabled-color\":       $list-group-disabled-color__dt,\n      \"list-group-disabled-bg\":          $list-group-disabled-bg__dt,\n      \"list-group-action-color\":         $list-group-action-color__dt,\n      \"list-group-action-hover-color\":   $list-group-action-hover-color__dt,\n      \"list-group-action-active-color\":  $list-group-action-active-color__dt,\n      \"list-group-action-active-bg\":     $list-group-action-active-bg__dt\n    )\n  )\n);\n","//\n// CoreUI 3.x Color system\n//\n\n$gray-base__dt:  desaturate(#08091a, 10%) !default;\n$gray-100__dt:   desaturate(#313243, 10%) !default;\n$gray-200__dt:   desaturate(#2e2f40, 10%) !default;\n$gray-300__dt:   desaturate(#2c2d3e, 10%) !default;\n$gray-400__dt:   desaturate(#272839, 10%) !default;\n$gray-500__dt:   desaturate(#242536, 10%) !default;\n$gray-600__dt:   desaturate(#1f2031, 10%) !default;\n$gray-700__dt:   desaturate(#1c1d2e, 10%) !default;\n$gray-800__dt:   desaturate(#1a1b2c, 10%) !default;\n$gray-900__dt:   desaturate(#151627, 10%) !default;\n\n$grays__dt: () !default;\n// stylelint-disable-next-line scss/dollar-variable-default\n$grays__dt: map-merge(\n  (\n    \"100\":  $gray-100__dt,\n    \"200\":  $gray-200__dt,\n    \"300\":  $gray-300__dt,\n    \"400\":  $gray-400__dt,\n    \"500\":  $gray-500__dt,\n    \"600\":  $gray-600__dt,\n    \"700\":  $gray-700__dt,\n    \"800\":  $gray-800__dt,\n    \"900\":  $gray-900__dt\n  ),\n  $grays__dt\n);\n\n$primary__dt:    desaturate($primary, 20%) !default;\n$secondary__dt:  desaturate($secondary, 20%) !default;\n$success__dt:    desaturate($success, 20%) !default;\n$info__dt:       desaturate($info, 20%) !default;\n$warning__dt:    desaturate($warning, 20%) !default;\n$danger__dt:     desaturate($danger, 20%) !default;\n$light__dt:      $gray-700__dt !default;\n$dark__dt:       $gray-900__dt !default;\n\n$theme-colors__dt: () !default;\n// stylelint-disable-next-line scss/dollar-variable-default\n$theme-colors__dt: map-merge(\n  (\n    \"primary\":    $primary__dt,\n    \"secondary\":  $secondary__dt,\n    \"success\":    $success__dt,\n    \"info\":       $info__dt,\n    \"warning\":    $warning__dt,\n    \"danger\":     $danger__dt,\n    \"light\":      $light__dt,\n    \"dark\":       $dark__dt\n  ),\n  $theme-colors__dt\n);\n\n// Customize the light and dark text colors for use in our YIQ color contrast function.\n$yiq-text-dark__dt:   $gray-base__dt !default;\n$yiq-text-light__dt:  $white !default;\n\n// stylelint-disable-next-line scss/dollar-variable-default\n$yiq-theme-map: map-merge(\n  $yiq-theme-map,\n  (\n    dark: (\n      \"yiq-text-dark\":  $yiq-text-dark__dt,\n      \"yiq-text-light\":  $yiq-text-light__dt\n    )\n  ),\n);\n","// Breakpoint viewport sizes and media queries.\n//\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\n//\n//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)\n//\n// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\n\n// Name of the next breakpoint, or null for the last breakpoint.\n//\n//    >> breakpoint-next(sm)\n//    md\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    md\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))\n//    md\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n  $n: index($breakpoint-names, $name);\n  @return if($n != null and $n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n// Name of the previous breakpoint, or null for the first breakpoint.\n//\n//    >> breakpoint-before(lg)\n//    md\n//    >> breakpoint-next(lg, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    md\n//    >> breakpoint-next(lg, $breakpoint-names: (xs sm md lg xl))\n//    md\n@function breakpoint-before($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n  $n: index($breakpoint-names, $name);\n  @return if($n != null and $n < length($breakpoint-names), nth($breakpoint-names, $n - 1), null);\n}\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    576px\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\n  $min: map-get($breakpoints, $name);\n  @return if($min != 0, $min, null);\n}\n\n// Maximum breakpoint width. Null for the largest (last) breakpoint.\n// The maximum value is calculated as the minimum of the next one less 0.02px\n// to work around the limitations of `min-` and `max-` prefixes and viewports with fractional widths.\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\n//\n//    >> breakpoint-max(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    767.98px\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\n  $next: breakpoint-next($name, $breakpoints);\n  @return if($next, breakpoint-min($next, $breakpoints) - .02, null);\n}\n\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.\n// Useful for making responsive utilities.\n//\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"\"  (Returns a blank string)\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"-sm\"\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\n  @return if(breakpoint-min($name, $breakpoints) == null, \"\", \"-#{$name}\");\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  @if $min {\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {\n  $max: breakpoint-max($name, $breakpoints);\n  @if $max {\n    @media (max-width: $max) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media that spans multiple breakpoint widths.\n// Makes the @content apply between the min and max breakpoints\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($lower, $breakpoints);\n  $max: breakpoint-max($upper, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($lower, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($upper, $breakpoints) {\n      @content;\n    }\n  }\n}\n\n// Media between the breakpoint's minimum and maximum widths.\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  $max: breakpoint-max($name, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($name, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($name, $breakpoints) {\n      @content;\n    }\n  }\n}\n","// List Groups\n\n@mixin list-group-item-variant($state, $background, $color) {\n  .list-group-item-#{$state} {\n    color: $color;\n    background-color: $background;\n\n    &.list-group-item-action {\n      @include hover-focus() {\n        color: $color;\n        background-color: darken($background, 5%);\n      }\n\n      &.active {\n        color: $white;\n        background-color: $color;\n        border-color: $color;\n      }\n    }\n  }\n}\n\n@mixin list-group-item-accent-variant($state, $color) {\n  .list-group-item-accent-#{$state} {\n    border-left: 4px solid $color;\n  }\n}\n","// Bootstrap functions\n//\n// Utility mixins and functions for evaluating source code across our variables, maps, and mixins.\n\n// Ascending\n// Used to evaluate Sass maps like our grid breakpoints.\n@mixin _assert-ascending($map, $map-name) {\n  $prev-key: null;\n  $prev-num: null;\n  @each $key, $num in $map {\n    @if $prev-num == null or unit($num) == \"%\" or unit($prev-num) == \"%\" {\n      // Do nothing\n    } @else if not comparable($prev-num, $num) {\n      @warn \"Potentially invalid value for #{$map-name}: This map must be in ascending order, but key '#{$key}' has value #{$num} whose unit makes it incomparable to #{$prev-num}, the value of the previous key '#{$prev-key}' !\";\n    } @else if $prev-num >= $num {\n      @warn \"Invalid value for #{$map-name}: This map must be in ascending order, but key '#{$key}' has value #{$num} which isn't greater than #{$prev-num}, the value of the previous key '#{$prev-key}' !\";\n    }\n    $prev-key: $key;\n    $prev-num: $num;\n  }\n}\n\n// Starts at zero\n// Used to ensure the min-width of the lowest breakpoint starts at 0.\n@mixin _assert-starts-at-zero($map, $map-name: \"$grid-breakpoints\") {\n  @if length($map) > 0 {\n    $values: map-values($map);\n    $first-value: nth($values, 1);\n    @if $first-value != 0 {\n      @warn \"First breakpoint in #{$map-name} must start at 0, but starts at #{$first-value}.\";\n    }\n  }\n}\n\n// Replace `$search` with `$replace` in `$string`\n// Used on our SVG icon backgrounds for custom forms.\n//\n// @author Hugo Giraudel\n// @param {String} $string - Initial string\n// @param {String} $search - Substring to replace\n// @param {String} $replace ('') - New value\n// @return {String} - Updated string\n@function str-replace($string, $search, $replace: \"\") {\n  $index: str-index($string, $search);\n\n  @if $index {\n    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);\n  }\n\n  @return $string;\n}\n\n// See https://codepen.io/kevinweber/pen/dXWoRw\n@function escape-svg($string) {\n  @if str-index($string, \"data:image/svg+xml\") {\n    @each $char, $encoded in $escaped-characters {\n      // Do not escape the url brackets\n      @if str-index($string, \"url(\") == 1 {\n        $string: url(\"#{str-replace(str-slice($string, 6, -3), $char, $encoded)}\");\n      } @else {\n        $string: str-replace($string, $char, $encoded);\n      }\n    }\n  }\n\n  @return $string;\n}\n\n// Color contrast\n@function color-yiq($color, $dark: $yiq-text-dark, $light: $yiq-text-light) {\n  $r: red($color);\n  $g: green($color);\n  $b: blue($color);\n\n  $yiq: (($r * 299) + ($g * 587) + ($b * 114)) / 1000;\n\n  @if ($yiq >= $yiq-contrasted-threshold) {\n    @return $dark;\n  } @else {\n    @return $light;\n  }\n}\n\n// Retrieve color Sass maps\n@function color($key: \"blue\") {\n  @return map-get($colors, $key);\n}\n\n@function theme-color($key: \"primary\") {\n  @return map-get($theme-colors, $key);\n}\n\n@function gray($key: \"100\") {\n  @return map-get($grays, $key);\n}\n\n// Request a theme color level\n// @function theme-color-level($color-name: \"primary\", $level: 0) {\n//   $color: theme-color($color-name);\n//   $color-base: if($level > 0, $black, $white);\n//   $level: abs($level);\n\n//   @return mix($color-base, $color, $level * $theme-color-interval);\n// }\n\n@function theme-color-level($color, $level: 0) {\n  $color-base: if($level > 0, $black, $white);\n  $level: abs($level);\n\n  @return mix($color-base, $color, $level * $theme-color-interval);\n}\n\n// Return valid calc\n@function add($value1, $value2, $return-calc: true) {\n  @if $value1 == null {\n    @return $value2;\n  }\n\n  @if $value2 == null {\n    @return $value1;\n  }\n\n  @if type-of($value1) == number and type-of($value2) == number and comparable($value1, $value2) {\n    @return $value1 + $value2;\n  }\n\n  @return if($return-calc == true, calc(#{$value1} + #{$value2}), $value1 + unquote(\" + \") + $value2);\n}\n\n@function subtract($value1, $value2, $return-calc: true) {\n  @if $value1 == null and $value2 == null {\n    @return null;\n  }\n\n  @if $value1 == null {\n    @return -$value2;\n  }\n\n  @if $value2 == null {\n    @return $value1;\n  }\n\n  @if type-of($value1) == number and type-of($value2) == number and comparable($value1, $value2) {\n    @return $value1 - $value2;\n  }\n\n  @return if($return-calc == true, calc(#{$value1} - #{$value2}), $value1 + unquote(\" - \") + $value2);\n}\n"]}