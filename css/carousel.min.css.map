{"version":3,"sources":["../scss/_carousel.scss","../scss/mixins/_clearfix.scss","../scss/mixins/_transition.scss","../scss/variables/components/_carousel.scss","../scss/variables/_colors.scss","../scss/mixins/_hover.scss","../scss/_functions.scss"],"names":[],"mappings":"AAaA,UACE,SAAU,SAGH,wBACP,aAAc,MAGhB,gBACE,SAAU,SACV,MAAO,KACP,SAAU,OCvBT,uBACC,QAAS,MACT,MAAO,KACP,QAAS,GDwBb,eACE,SAAU,SACV,QAAS,KACT,MAAO,KACP,MAAO,KACP,aAAc,MACd,oBAAqB,OE5BjB,WCkB+B,UADA,IACwC,YDbnC,uCFiB1C,eEhBM,WAAY,MF2BlB,oBACA,oBAFc,sBAGZ,QAAS,MAIJ,4BADoC,6CAEzC,UAAW,iBAIN,2BADqC,8CAE1C,UAAW,kBASX,8BACE,QAAS,EACT,oBAAqB,QACrB,UAAW,KAIM,sDACA,uDAFL,qCAGZ,QAAS,EACT,QAAS,EAGJ,0CACA,2CACL,QAAS,EACT,QAAS,EEtEP,WFuEkB,GGtDa,IHsDoB,QElEf,uCF8DjC,0CACA,2CE9DH,WAAY,MF2ElB,uBADA,uBAEE,SAAU,SACV,IAAK,EACL,OAAQ,EACR,QAAS,EAET,QAAS,KACT,YAAa,OACb,gBAAiB,OACjB,MG7FmC,IH8FnC,MI7FU,KJ8FV,WAAY,OACZ,QG/FmC,GDE/B,WCA+B,QAAQ,KAAK,KDKR,uCF4E1C,uBADA,uBE1EM,WAAY,MGKf,6BADA,6BACA,6BADA,6BLwFC,MIpGQ,KJqGR,gBAAiB,KACjB,QAAS,EACT,QGtGiC,GHyGrC,uBACE,KAAM,EAKR,uBACE,MAAO,EAQT,4BADA,4BAEE,QAAS,aACT,MG7GmC,KH8GnC,OG9GmC,KH+GnC,WAAY,UAAA,GAAA,CAAA,KAAA,KAEd,4BACE,iBMxFU,kLN0FZ,4BACE,iBM3FU,kLNoGZ,qBACE,SAAU,SACV,MAAO,EACP,OAAQ,EACR,KAAM,EACN,QAAS,GACT,QAAS,KACT,gBAAiB,OAUjB,aG9JmC,IH+JnC,YG/JmC,IHgKnC,WAAY,KAnBd,yCAUI,aAAc,EAVlB,+BAaI,cAAe,EAQjB,wBACE,WAAY,YACZ,KAAM,EAAA,EAAA,KACN,MGhKiC,KHiKjC,OGhKiC,IHiKjC,aG/JiC,IHgKjC,YGhKiC,IHiKjC,YAAa,OACb,OAAQ,QACR,iBI1KQ,KJ2KR,gBAAiB,YAEjB,WGvKiC,KHuKe,MAAM,YACtD,cGxKiC,KHwKkB,MAAM,YACzD,QAAS,GE7KP,WCO+B,QAAQ,IAAI,KDFP,uCF0JxC,wBEzJI,WAAY,MF2KhB,6BACE,QAAS,EASb,kBACE,SAAU,SACV,MAAO,IACP,OAAQ,KACR,KAAM,IACN,QAAS,GACT,YAAa,KACb,eAAgB,KAChB,MIrMU,KJsMV,WAAY","sourcesContent":["// Notes on the classes:\n//\n// 1. .#{$bs-prefix}carousel.#{$bs-prefix}pointer-event should ideally be pan-y (to allow for users to scroll vertically)\n//    even when their scroll action started on a carousel, but for compatibility (with Firefox)\n//    we're preventing all actions instead\n// 2. The .#{$bs-prefix}carousel-item-left and .#{$bs-prefix}carousel-item-right is used to indicate where\n//    the active slide is heading.\n// 3. .#{$bs-prefix}active.#{$bs-prefix}carousel-item is the current slide.\n// 4. .#{$bs-prefix}active.#{$bs-prefix}carousel-item-left and .#{$bs-prefix}active.#{$bs-prefix}carousel-item-right is the current\n//    slide in its in-transition state. Only one of these occurs at a time.\n// 5. .#{$bs-prefix}carousel-item-next.#{$bs-prefix}carousel-item-left and .#{$bs-prefix}carousel-item-prev.#{$bs-prefix}carousel-item-right\n//    is the upcoming slide in transition.\n\n.#{$bs-prefix}carousel {\n  position: relative;\n}\n\n.#{$bs-prefix}carousel.#{$bs-prefix}pointer-event {\n  touch-action: pan-y;\n}\n\n.#{$bs-prefix}carousel-inner {\n  position: relative;\n  width: 100%;\n  overflow: hidden;\n  @include clearfix();\n}\n\n.#{$bs-prefix}carousel-item {\n  position: relative;\n  display: none;\n  float: left;\n  width: 100%;\n  margin-right: -100%;\n  backface-visibility: hidden;\n  @include transition($carousel-transition);\n}\n\n.#{$bs-prefix}carousel-item.#{$bs-prefix}active,\n.#{$bs-prefix}carousel-item-next,\n.#{$bs-prefix}carousel-item-prev {\n  display: block;\n}\n\n.#{$bs-prefix}carousel-item-next:not(.#{$bs-prefix}carousel-item-left),\n.#{$bs-prefix}active.#{$bs-prefix}carousel-item-right {\n  transform: translateX(100%);\n}\n\n.#{$bs-prefix}carousel-item-prev:not(.#{$bs-prefix}carousel-item-right),\n.#{$bs-prefix}active.#{$bs-prefix}carousel-item-left {\n  transform: translateX(-100%);\n}\n\n\n//\n// Alternate transitions\n//\n\n.#{$bs-prefix}carousel-fade {\n  .#{$bs-prefix}carousel-item {\n    opacity: 0;\n    transition-property: opacity;\n    transform: none;\n  }\n\n  .#{$bs-prefix}carousel-item.#{$bs-prefix}active,\n  .#{$bs-prefix}carousel-item-next.#{$bs-prefix}carousel-item-left,\n  .#{$bs-prefix}carousel-item-prev.#{$bs-prefix}carousel-item-right {\n    z-index: 1;\n    opacity: 1;\n  }\n\n  .#{$bs-prefix}active.#{$bs-prefix}carousel-item-left,\n  .#{$bs-prefix}active.#{$bs-prefix}carousel-item-right {\n    z-index: 0;\n    opacity: 0;\n    @include transition(0s $carousel-transition-duration opacity);\n  }\n}\n\n\n//\n// Left/right controls for nav\n//\n\n.#{$bs-prefix}carousel-control-prev,\n.#{$bs-prefix}carousel-control-next {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  z-index: 1;\n  // Use flex for alignment (1-3)\n  display: flex; // 1. allow flex styles\n  align-items: center; // 2. vertically center contents\n  justify-content: center; // 3. horizontally center contents\n  width: $carousel-control-width;\n  color: $carousel-control-color;\n  text-align: center;\n  opacity: $carousel-control-opacity;\n  @include transition($carousel-control-transition);\n\n  // Hover/focus state\n  @include hover-focus {\n    color: $carousel-control-color;\n    text-decoration: none;\n    outline: 0;\n    opacity: $carousel-control-hover-opacity;\n  }\n}\n.#{$bs-prefix}carousel-control-prev {\n  left: 0;\n  @if $enable-gradients {\n    background: linear-gradient(90deg, rgba($black, .25), rgba($black, .001));\n  }\n}\n.#{$bs-prefix}carousel-control-next {\n  right: 0;\n  @if $enable-gradients {\n    background: linear-gradient(270deg, rgba($black, .25), rgba($black, .001));\n  }\n}\n\n// Icons for within\n.#{$bs-prefix}carousel-control-prev-icon,\n.#{$bs-prefix}carousel-control-next-icon {\n  display: inline-block;\n  width: $carousel-control-icon-width;\n  height: $carousel-control-icon-width;\n  background: no-repeat 50% / 100% 100%;\n}\n.#{$bs-prefix}carousel-control-prev-icon {\n  background-image: $carousel-control-prev-icon-bg;\n}\n.#{$bs-prefix}carousel-control-next-icon {\n  background-image: $carousel-control-next-icon-bg;\n}\n\n\n// Optional indicator pips\n//\n// Add an ordered list with the following class and add a list item for each\n// slide your carousel holds.\n\n.#{$bs-prefix}carousel-indicators {\n  position: absolute;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  z-index: 15;\n  display: flex;\n  justify-content: center;\n\n  @include ltr {\n    padding-left: 0; // override <ol> default\n  }\n  @include rtl {\n    padding-right: 0; // override <ol> default\n  }\n\n  // Use the .#{$bs-prefix}carousel-control's width as margin so we don't overlay those\n  margin-right: $carousel-control-width;\n  margin-left: $carousel-control-width;\n  list-style: none;\n\n  li {\n    box-sizing: content-box;\n    flex: 0 1 auto;\n    width: $carousel-indicator-width;\n    height: $carousel-indicator-height;\n    margin-right: $carousel-indicator-spacer;\n    margin-left: $carousel-indicator-spacer;\n    text-indent: -999px;\n    cursor: pointer;\n    background-color: $carousel-indicator-active-bg;\n    background-clip: padding-box;\n    // Use transparent borders to increase the hit area by 10px on top and bottom.\n    border-top: $carousel-indicator-hit-area-height solid transparent;\n    border-bottom: $carousel-indicator-hit-area-height solid transparent;\n    opacity: .5;\n    @include transition($carousel-indicator-transition);\n  }\n\n  .#{$bs-prefix}active {\n    opacity: 1;\n  }\n}\n\n\n// Optional captions\n//\n//\n\n.#{$bs-prefix}carousel-caption {\n  position: absolute;\n  right: (100% - $carousel-caption-width) / 2;\n  bottom: 20px;\n  left: (100% - $carousel-caption-width) / 2;\n  z-index: 10;\n  padding-top: 20px;\n  padding-bottom: 20px;\n  color: $carousel-caption-color;\n  text-align: center;\n}\n","@mixin clearfix() {\n  &::after {\n    display: block;\n    clear: both;\n    content: \"\";\n  }\n}\n","// stylelint-disable property-blacklist\n@mixin transition($transition...) {\n  @if $enable-transitions {\n    @if length($transition) == 0 {\n      transition: $transition-base;\n    } @else {\n      transition: $transition;\n    }\n  }\n\n  @if $enable-prefers-reduced-motion-media-query {\n    @media (prefers-reduced-motion: reduce) {\n      transition: none;\n    }\n  }\n}\n","// Carousel\n\n$carousel-control-color:             $white !default;\n$carousel-control-width:             15% !default;\n$carousel-control-opacity:           .5 !default;\n$carousel-control-hover-opacity:     .9 !default;\n$carousel-control-transition:        opacity .15s ease !default;\n\n$carousel-indicator-width:           30px !default;\n$carousel-indicator-height:          3px !default;\n$carousel-indicator-hit-area-height: 10px !default;\n$carousel-indicator-spacer:          3px !default;\n$carousel-indicator-active-bg:       $white !default;\n$carousel-indicator-transition:      opacity .6s ease !default;\n\n$carousel-caption-width:             70% !default;\n$carousel-caption-color:             $white !default;\n\n$carousel-control-icon-width:        20px !default;\n\n$carousel-control-prev-icon-bg:      str-replace(url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='#{$carousel-control-color}' viewBox='0 0 8 8'%3e%3cpath d='M5.25 0l-4 4 4 4 1.5-1.5-2.5-2.5 2.5-2.5-1.5-1.5z'/%3e%3c/svg%3e\"), \"#\", \"%23\") !default;\n$carousel-control-next-icon-bg:      str-replace(url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='#{$carousel-control-color}' viewBox='0 0 8 8'%3e%3cpath d='M2.75 0l-1.5 1.5 2.5 2.5-2.5 2.5 1.5 1.5 4-4-4-4z'/%3e%3c/svg%3e\"), \"#\", \"%23\") !default;\n\n$carousel-transition-duration:       .6s !default;\n$carousel-transition:                transform $carousel-transition-duration ease-in-out !default; // Define transform transition first if using multiple transitions (e.g., `transform 2s ease, opacity .5s ease-out`)\n","//\n// CoreUI default colors\n//\n\n$white:     #fff !default;\n$black:     #000015 !default;\n\n// $black:     #000 !default;\n// $black:     #000b24 !default;\n\n// $gray-base: #212233 !default;\n\n// $gray-100:  #e9e9eb !default;\n// $gray-200:  #d3d3d6 !default;\n// $gray-300:  #bcbdc2 !default;\n// $gray-400:  #a6a7ad !default;\n// $gray-500:  #909099 !default;\n// $gray-600:  #7a7a85 !default;\n// $gray-700:  #646470 !default;\n// $gray-800:  #4d4e5c !default;\n// $gray-900:  #373847 !default;\n\n$gray-base: #3c4b64 !default;\n\n$gray-100:  #ebedef !default;\n$gray-200:  #d8dbe0 !default;\n$gray-300:  #c4c9d0 !default;\n$gray-400:  #b1b7c1 !default;\n$gray-500:  #9da5b1 !default;\n$gray-600:  #8a93a2 !default;\n$gray-700:  #768192 !default;\n$gray-800:  #636f83 !default;\n$gray-900:  #4f5d73 !default;\n\n$grays: () !default;\n// stylelint-disable-next-line scss/dollar-variable-default\n$grays: map-merge(\n  (\n    \"100\": $gray-100,\n    \"200\": $gray-200,\n    \"300\": $gray-300,\n    \"400\": $gray-400,\n    \"500\": $gray-500,\n    \"600\": $gray-600,\n    \"700\": $gray-700,\n    \"800\": $gray-800,\n    \"900\": $gray-900\n  ),\n  $grays\n);\n\n$primary-base:   #321fdb !default;\n\n$primary-100:    #eae9fb !default;\n$primary-200:    #d6d2fb !default;\n$primary-300:    #c1bcf4 !default;\n$primary-400:    #ada5f1 !default;\n$primary-500:    #988fed !default;\n$primary-600:    #8478ea !default;\n$primary-700:    #6f62e6 !default;\n$primary-800:    #5b4ce2 !default;\n$primary-900:    #4635df !default;\n\n$primary-dark:   #1f1498 !default;\n$primary:        #321fdb !default;\n$primary-50:     #988fed !default;\n$primary-25:     #ccc7f6 !default;\n\n\n$secondary-base: #3c4b64 !default;\n\n$secondary-100:  #ebedef !default;\n$secondary-200:  #d8dbe0 !default;\n$secondary-300:  #c4c9d0 !default;\n$secondary-400:  #b1b7c1 !default;\n$secondary-500:  #9da5b1 !default;\n$secondary-600:  #8a93a2 !default;\n$secondary-700:  #768192 !default;\n$secondary-800:  #636f83 !default;\n$secondary-900:  #4f5d73 !default;\n\n$secondary-dark: #212233 !default;\n$secondary:      #3c4b64 !default;\n$secondary-50:   #9da5b1 !default;\n$secondary-25:   #ced2d8 !default;\n\n\n$danger-dark:    #d93737 !default;\n$danger:         #e55353 !default;\n$danger-50:      #f2a9a9 !default;\n$danger-25:      #f9d4d4 !default;\n\n$info-dark:      #2982cc !default;\n$info:           #39f !default;\n$info-50:        #80c6ff !default;\n$info-25:        #c0e6ff !default;\n\n$success-dark:   #1b9e3e !default;\n$success:        #2eb85c !default;\n$success-50:     #96dbad !default;\n$success-25:     #cbedd6 !default;\n\n$warning-dark:   #f6960b !default;\n$warning:        #f9b115 !default;\n$warning-50:     #fcd88a !default;\n$warning-25:     #feecc5 !default;\n\n$light:           $gray-100 !default;\n$dark:            $gray-800 !default;\n\n$pink:           #e83e8c !default;\n\n$theme-colors: () !default;\n// stylelint-disable-next-line scss/dollar-variable-default\n$theme-colors: map-merge(\n  (\n    \"primary\":    $primary,\n    \"secondary\":  $secondary-25,\n    \"success\":    $success,\n    \"info\":       $info,\n    \"warning\":    $warning,\n    \"danger\":     $danger,\n    \"light\":      $light,\n    \"dark\":       $dark\n  ),\n  $theme-colors\n);\n\n// Set a specific jump point for requesting color jumps\n$theme-color-interval:      8% !default;\n\n// The yiq lightness value that determines when the lightness of color changes from \"dark\" to \"light\". Acceptable values are between 0 and 255.\n$yiq-contrasted-threshold:  150 !default;\n\n// Customize the light and dark text colors for use in our YIQ color contrast function.\n$yiq-text-dark:             $gray-900 !default;\n$yiq-text-light:            $white !default;\n","// Hover mixin and `$enable-hover-media-query` are deprecated.\n//\n// Originally added during our alphas and maintained during betas, this mixin was\n// designed to prevent `:hover` stickiness on iOS-an issue where hover styles\n// would persist after initial touch.\n//\n// For backward compatibility, we've kept these mixins and updated them to\n// always return their regular pseudo-classes instead of a shimmed media query.\n//\n// Issue: https://github.com/twbs/bootstrap/issues/25195\n\n@mixin hover {\n  &:hover { @content; }\n}\n\n@mixin hover-focus {\n  &:hover,\n  &:focus {\n    @content;\n  }\n}\n\n@mixin plain-hover-focus {\n  &,\n  &:hover,\n  &:focus {\n    @content;\n  }\n}\n\n@mixin hover-focus-active {\n  &:hover,\n  &:focus,\n  &:active {\n    @content;\n  }\n}\n","// Bootstrap functions\n//\n// Utility mixins and functions for evaluating source code across our variables, maps, and mixins.\n\n// Ascending\n// Used to evaluate Sass maps like our grid breakpoints.\n@mixin _assert-ascending($map, $map-name) {\n  $prev-key: null;\n  $prev-num: null;\n  @each $key, $num in $map {\n    @if $prev-num == null or unit($num) == \"%\" {\n      // Do nothing\n    } @else if not comparable($prev-num, $num) {\n      @warn \"Potentially invalid value for #{$map-name}: This map must be in ascending order, but key '#{$key}' has value #{$num} whose unit makes it incomparable to #{$prev-num}, the value of the previous key '#{$prev-key}' !\";\n    } @else if $prev-num >= $num {\n      @warn \"Invalid value for #{$map-name}: This map must be in ascending order, but key '#{$key}' has value #{$num} which isn't greater than #{$prev-num}, the value of the previous key '#{$prev-key}' !\";\n    }\n    $prev-key: $key;\n    $prev-num: $num;\n  }\n}\n\n// Starts at zero\n// Used to ensure the min-width of the lowest breakpoint starts at 0.\n@mixin _assert-starts-at-zero($map, $map-name: \"$grid-breakpoints\") {\n  $values: map-values($map);\n  $first-value: nth($values, 1);\n  @if $first-value != 0 {\n    @warn \"First breakpoint in #{$map-name} must start at 0, but starts at #{$first-value}.\";\n  }\n}\n\n// Replace `$search` with `$replace` in `$string`\n// Used on our SVG icon backgrounds for custom forms.\n//\n// @author Hugo Giraudel\n// @param {String} $string - Initial string\n// @param {String} $search - Substring to replace\n// @param {String} $replace ('') - New value\n// @return {String} - Updated string\n@function str-replace($string, $search, $replace: \"\") {\n  $index: str-index($string, $search);\n\n  @if $index {\n    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);\n  }\n\n  @return $string;\n}\n\n// Color contrast\n@function color-yiq($color, $dark: $yiq-text-dark, $light: $yiq-text-light) {\n  $r: red($color);\n  $g: green($color);\n  $b: blue($color);\n\n  $yiq: (($r * 299) + ($g * 587) + ($b * 114)) / 1000;\n\n  @if ($yiq >= $yiq-contrasted-threshold) {\n    @return $dark;\n  } @else {\n    @return $light;\n  }\n}\n\n// Retrieve color Sass maps\n@function color($key: \"blue\") {\n  @return map-get($colors, $key);\n}\n\n@function theme-color($key: \"primary\") {\n  @return map-get($theme-colors, $key);\n}\n\n@function gray($key: \"100\") {\n  @return map-get($grays, $key);\n}\n\n// Request a theme color level\n@function theme-color-level($color-name: \"primary\", $level: 0) {\n  $color: theme-color($color-name);\n  $color-base: if($level > 0, $black, $white);\n  $level: abs($level);\n\n  @return mix($color-base, $color, $level * $theme-color-interval);\n}\n"]}