{"version":3,"sources":["../scss/_popover.scss","../scss/variables/_z-index.scss","../scss/variables/components/_popovers.scss","../scss/mixins/_reset-text.scss","../scss/variables/_typography.scss","../scss/vendors/_rfs.scss","../scss/variables/components/_shared.scss","../scss/mixins/_border-radius.scss","../scss/variables/_colors.scss"],"names":[],"mappings":"AAAA,SACE,SAAU,SACV,IAAK,EACL,KAAM,EACN,QCMsB,KDLtB,QAAS,MACT,UEH0B,MCF1B,YCI4B,aAAa,CAAE,kBAAkB,CAAE,UAAU,CAAE,MAAM,CAAE,gBAAgB,CAAE,KAAK,CAAE,WAAW,CAAE,UAAU,CAAE,mBAAmB,CAAE,gBAAgB,CAAE,iBAAiB,CAAE,mBDF/L,WAAY,OACZ,YCY4B,IDX5B,YCgB4B,IDf5B,WAAY,KACZ,WAAY,MACZ,gBAAiB,KACjB,YAAa,KACb,eAAgB,KAChB,eAAgB,OAChB,WAAY,OACZ,aAAc,OACd,YAAa,OACb,WAAY,KEgHR,UAtCW,WL7Ef,UAAW,WACX,gBAAiB,YACjB,OML4B,INKE,MOT5B,cDmB0B,MNN1B,iBQdQ,KReR,aQdQ,gBRiBV,gBACE,SAAU,SACV,QAAS,MACT,MEVwB,KFWxB,OEVwB,MFWxB,OAAQ,EMHkB,MNFtB,uBAAA,wBASF,SAAU,SACV,QAAS,MACT,QAAS,GACT,aAAc,YACd,aAAc,MA2HhB,mCAtHJ,gBACE,cEzB0B,MF2BxB,0CAAA,uBACA,OAAQ,yBADF,kDAAA,+BAIJ,OAAQ,EACR,aEhCsB,MFgCc,MAA2B,EAE7D,iBExBoB,iBFiBlB,iDAAA,8BAYJ,OM9CwB,IN+CxB,aExCsB,MFwCc,MAA2B,EAE7D,iBQtDI,KR6JR,qCAjGJ,kBACE,YEjD0B,MFmDxB,4CAAA,yBACA,KAAM,yBACN,MErDwB,MFsDxB,OEvDwB,KFwDxB,OM/C0B,MN+CA,EAJpB,oDAAA,iCAOJ,KAAM,EACN,aAAc,ME3DQ,MF2DyC,MAA2B,EAExF,mBEnDoB,iBFyClB,mDAAA,gCAeJ,KMzEwB,IN0ExB,aAAc,MEnEQ,MFmEyC,MAA2B,EAExF,mBQjFI,KRgKR,sCAzEJ,mBACE,WE5E0B,MF8ExB,6CAAA,0BACA,IAAK,yBADC,qDAAA,kCAIJ,IAAK,EACL,aAAc,EAAE,MEnFM,MFmF2C,MAE/D,oBE3EoB,iBFoElB,oDAAA,iCAYJ,IMjGwB,INkGxB,aAAc,EAAE,ME3FM,MF2F2C,MAE/D,oBQzGI,KR+GK,8DAAA,2CACb,SAAU,SACV,IAAK,EACL,KAAM,IACN,QAAS,MACT,MEzGwB,KF0GxB,YAAa,OACb,QAAS,GACT,cMlH0B,INkHW,MAEnC,oBEvGsB,QFiJxB,oCArCJ,iBACE,aEnH0B,MFqHxB,2CAAA,wBACA,MAAO,yBACP,MEvHwB,MFwHxB,OEzHwB,KF0HxB,OMjH0B,MNiHA,EAJpB,mDAAA,gCAOJ,MAAO,EACP,aAAc,MAA2B,EAAE,ME7HrB,MF+HpB,kBErHoB,iBF2GlB,kDAAA,+BAeJ,MM3IwB,IN4IxB,aAAc,MAA2B,EAAE,MErIrB,MFuIpB,kBQnJI,KR0KZ,gBACE,QEtK0B,MACA,OFsK1B,cAAe,EKjDX,UAtCW,QLyFf,cMzK4B,INyKS,MAAM,QOpKzC,uBPqKoB,kBOpKpB,wBPoKoB,kBAIpB,iBEjKwB,QFkKxB,oBAAqB,QAVV,sBAcX,QAAS,KAIb,cACE,QExL0B,MACA,OFyLxB,MQnKQ","sourcesContent":[".#{$bs-prefix}popover {\n  position: absolute;\n  top: 0;\n  left: 0;\n  z-index: $zindex-popover;\n  display: block;\n  max-width: $popover-max-width;\n  // Our parent element can be arbitrary since tooltips are by default inserted as a sibling of their target element.\n  // So reset our font and text properties to avoid inheriting weird values.\n  @include reset-text();\n  @include font-size($popover-font-size);\n  // Allow breaking very long words so they don't overflow the popover's bounds\n  word-wrap: break-word;\n  background-clip: padding-box;\n  border: $popover-border-width solid;\n  @include border-radius($popover-border-radius);\n  @include box-shadow($popover-box-shadow);\n  @include themes($popover-theme-map) {\n    background-color: themes-get-value(\"popover-bg\");\n    border-color: themes-get-value(\"popover-border-color\");\n  }\n\n  .#{$bs-prefix}arrow {\n    position: absolute;\n    display: block;\n    width: $popover-arrow-width;\n    height: $popover-arrow-height;\n    margin: 0 $border-radius-lg;\n\n    &::before,\n    &::after {\n      position: absolute;\n      display: block;\n      content: \"\";\n      border-color: transparent;\n      border-style: solid;\n    }\n  }\n}\n\n.#{$bs-prefix}bs-popover-top {\n  margin-bottom: $popover-arrow-height;\n\n  > .#{$bs-prefix}arrow {\n    bottom: calc((#{$popover-arrow-height} + #{$popover-border-width}) * -1);\n\n    &::before {\n      bottom: 0;\n      border-width: $popover-arrow-height ($popover-arrow-width / 2) 0;\n      @include themes($popover-theme-map) {\n        border-top-color: themes-get-value(\"popover-arrow-outer-color\");\n      }\n    }\n\n    &::after {\n      bottom: $popover-border-width;\n      border-width: $popover-arrow-height ($popover-arrow-width / 2) 0;\n      @include themes($popover-theme-map) {\n        border-top-color: themes-get-value(\"popover-arrow-color\");\n      }\n    }\n  }\n}\n\n.#{$bs-prefix}bs-popover-right {\n  margin-left: $popover-arrow-height;\n\n  > .#{$bs-prefix}arrow {\n    left: calc((#{$popover-arrow-height} + #{$popover-border-width}) * -1);\n    width: $popover-arrow-height;\n    height: $popover-arrow-width;\n    margin: $border-radius-lg 0; // make sure the arrow does not touch the popover's rounded corners\n\n    &::before {\n      left: 0;\n      border-width: ($popover-arrow-width / 2) $popover-arrow-height ($popover-arrow-width / 2) 0;\n      @include themes($popover-theme-map) {\n        border-right-color: themes-get-value(\"popover-arrow-outer-color\");\n      }\n    }\n\n    &::after {\n      left: $popover-border-width;\n      border-width: ($popover-arrow-width / 2) $popover-arrow-height ($popover-arrow-width / 2) 0;\n      @include themes($popover-theme-map) {\n        border-right-color: themes-get-value(\"popover-arrow-color\");\n      }\n    }\n  }\n}\n\n.#{$bs-prefix}bs-popover-bottom {\n  margin-top: $popover-arrow-height;\n\n  > .#{$bs-prefix}arrow {\n    top: calc((#{$popover-arrow-height} + #{$popover-border-width}) * -1);\n\n    &::before {\n      top: 0;\n      border-width: 0 ($popover-arrow-width / 2) $popover-arrow-height ($popover-arrow-width / 2);\n      @include themes($popover-theme-map) {\n        border-bottom-color: themes-get-value(\"popover-arrow-outer-color\");\n      }\n    }\n\n    &::after {\n      top: $popover-border-width;\n      border-width: 0 ($popover-arrow-width / 2) $popover-arrow-height ($popover-arrow-width / 2);\n      @include themes($popover-theme-map) {\n        border-bottom-color: themes-get-value(\"popover-arrow-color\");\n      }\n    }\n  }\n\n  // This will remove the popover-header's border just below the arrow\n  .#{$bs-prefix}popover-header::before {\n    position: absolute;\n    top: 0;\n    left: 50%;\n    display: block;\n    width: $popover-arrow-width;\n    margin-left: -$popover-arrow-width / 2;\n    content: \"\";\n    border-bottom: $popover-border-width solid;\n    @include themes($popover-theme-map) {\n      border-bottom-color: themes-get-value(\"popover-header-bg\");\n    }\n  }\n}\n\n.#{$bs-prefix}bs-popover-left {\n  margin-right: $popover-arrow-height;\n\n  > .#{$bs-prefix}arrow {\n    right: calc((#{$popover-arrow-height} + #{$popover-border-width}) * -1);\n    width: $popover-arrow-height;\n    height: $popover-arrow-width;\n    margin: $border-radius-lg 0; // make sure the arrow does not touch the popover's rounded corners\n\n    &::before {\n      right: 0;\n      border-width: ($popover-arrow-width / 2) 0 ($popover-arrow-width / 2) $popover-arrow-height;\n      @include themes($popover-theme-map) {\n        border-left-color: themes-get-value(\"popover-arrow-outer-color\");\n      }\n    }\n\n    &::after {\n      right: $popover-border-width;\n      border-width: ($popover-arrow-width / 2) 0 ($popover-arrow-width / 2) $popover-arrow-height;\n      @include themes($popover-theme-map) {\n        border-left-color: themes-get-value(\"popover-arrow-color\");\n      }\n    }\n  }\n}\n\n.#{$bs-prefix}bs-popover-auto {\n  &[x-placement^=\"top\"] {\n    @extend .#{$bs-prefix}bs-popover-top;\n  }\n  &[x-placement^=\"right\"] {\n    @extend .#{$bs-prefix}bs-popover-right;\n  }\n  &[x-placement^=\"bottom\"] {\n    @extend .#{$bs-prefix}bs-popover-bottom;\n  }\n  &[x-placement^=\"left\"] {\n    @extend .#{$bs-prefix}bs-popover-left;\n  }\n}\n\n\n// Offset the popover to account for the popover arrow\n.#{$bs-prefix}popover-header {\n  padding: $popover-header-padding-y $popover-header-padding-x;\n  margin-bottom: 0; // Reset the default from Reboot\n  @include font-size($font-size-base);\n  border-bottom: $popover-border-width solid darken($popover-header-bg, 5%);\n  $offset-border-width: calc(#{$border-radius-lg} - #{$popover-border-width});\n  @include border-top-radius($offset-border-width);\n  @include themes($popover-theme-map) {\n    color: themes-get-value(\"popover-header-color\");\n    background-color: themes-get-value(\"popover-header-bg\");\n    border-bottom-color: darken(themes-get-value(\"popover-header-bg\"), 5%);\n  }\n\n  &:empty {\n    display: none;\n  }\n}\n\n.#{$bs-prefix}popover-body {\n  padding: $popover-body-padding-y $popover-body-padding-x;\n  @include themes($popover-theme-map) {\n    color: themes-get-value(\"popover-body-color\");\n  }\n}\n","// Z-index master list\n//\n// Warning: Avoid customizing these values. They're used for a bird's eye view\n// of components dependent on the z-axis and are designed to all work together.\n\n$zindex-dropdown:       1000 !default;\n$zindex-sticky:         1020 !default;\n$zindex-fixed:          1030 !default;\n$zindex-modal-backdrop: 1040 !default;\n$zindex-modal:          1050 !default;\n$zindex-popover:        1060 !default;\n$zindex-tooltip:        1070 !default;\n","// Popovers\n\n$popover-font-size:         $font-size-sm !default;\n$popover-max-width:         276px !default;\n$popover-border-width:      $border-width !default;\n\n$popover-border-radius:     $border-radius-lg !default;\n$popover-box-shadow:        0 .25rem .5rem rgba($black, .2) !default;\n\n$popover-header-padding-y:  .5rem !default;\n$popover-header-padding-x:  .75rem !default;\n\n$popover-body-padding-y:    $popover-header-padding-y !default;\n$popover-body-padding-x:    $popover-header-padding-x !default;\n\n$popover-arrow-width:       1rem !default;\n$popover-arrow-height:      .5rem !default;\n\n\n// Light Theme\n$popover-bg:                $white !default;\n$popover-border-color:      rgba($black, .2) !default;\n$popover-header-bg:         darken($popover-bg, 3%) !default;\n$popover-header-color:      $headings-color !default;\n$popover-body-color:        $body-color !default;\n$popover-arrow-color:       $popover-bg !default;\n$popover-arrow-outer-color: fade-in($popover-border-color, .05) !default;\n\n$popover-theme-map: () !default;\n// stylelint-disable-next-line scss/dollar-variable-default\n$popover-theme-map: map-merge(\n  (\n    light: (\n      \"popover-bg\":                $popover-bg,\n      \"popover-border-color\":      $popover-border-color,\n      \"popover-header-bg\":         $popover-header-bg,\n      \"popover-header-color\":      $popover-header-color,\n      \"popover-body-color\":        $popover-body-color,\n      \"popover-arrow-color\":       $popover-arrow-color,\n      \"popover-arrow-outer-color\": $popover-arrow-outer-color\n    )\n  ),\n  $popover-theme-map\n);\n","@mixin reset-text {\n  font-family: $font-family-base;\n  // We deliberately do NOT reset font-size or word-wrap.\n  font-style: normal;\n  font-weight: $font-weight-normal;\n  line-height: $line-height-base;\n  text-align: left; // Fallback for where `start` is not supported\n  text-align: start;\n  text-decoration: none;\n  text-shadow: none;\n  text-transform: none;\n  letter-spacing: normal;\n  word-break: normal;\n  word-spacing: normal;\n  white-space: normal;\n  line-break: auto;\n}\n","// Typography\n//\n// Font, line-height, and color for body text, headings, and more.\n\n// stylelint-disable value-keyword-case\n$font-family-sans-serif:      -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\" !default;\n$font-family-monospace:       SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace !default;\n$font-family-base:            $font-family-sans-serif !default;\n// stylelint-enable value-keyword-case\n\n$font-size-base:              .875rem !default; // was: 1rem\n$font-size-lg:                $font-size-base * 1.25 !default;\n$font-size-sm:                $font-size-base * .875 !default;\n\n$font-weight-lighter:         lighter !default;\n$font-weight-light:           300 !default;\n$font-weight-normal:          400 !default;\n$font-weight-bold:            700 !default;\n$font-weight-bolder:          bolder !default;\n\n$font-weight-base:            $font-weight-normal !default;\n$line-height-base:            1.5 !default;\n\n$h1-font-size:                $font-size-base * 2.5 !default;\n$h2-font-size:                $font-size-base * 2 !default;\n$h3-font-size:                $font-size-base * 1.75 !default;\n$h4-font-size:                $font-size-base * 1.5 !default;\n$h5-font-size:                $font-size-base * 1.25 !default;\n$h6-font-size:                $font-size-base !default;\n\n$headings-margin-bottom:      $spacer / 2 !default;\n$headings-font-family:        null !default;\n$headings-font-weight:        500 !default;\n$headings-line-height:        1.2 !default;\n$headings-color:              null !default;\n\n$display1-size:               6rem !default;\n$display2-size:               5.5rem !default;\n$display3-size:               4.5rem !default;\n$display4-size:               3.5rem !default;\n\n$display1-weight:             300 !default;\n$display2-weight:             300 !default;\n$display3-weight:             300 !default;\n$display4-weight:             300 !default;\n$display-line-height:         $headings-line-height !default;\n\n$lead-font-size:              $font-size-base * 1.25 !default;\n$lead-font-weight:            300 !default;\n\n$small-font-size:             80% !default;\n\n$text-muted:                  $gray-700 !default;\n\n$blockquote-small-color:      $gray-600 !default;\n$blockquote-small-font-size:  $small-font-size !default;\n$blockquote-font-size:        $font-size-base * 1.25 !default;\n\n$hr-border-color:             rgba($black, .2) !default;\n$hr-border-width:             $border-width !default;\n\n$vr-color-bg:                 rgba($black, .2) !default;\n$vr-width:                    $border-width !default;\n\n$mark-padding:                .2em !default;\n\n$dt-font-weight:              $font-weight-bold !default;\n\n$kbd-box-shadow:              inset 0 -.1rem 0 rgba($black, .25) !default;\n$nested-kbd-font-weight:      $font-weight-bold !default;\n\n$list-inline-padding:         .5rem !default;\n\n$mark-bg:                     #fcf8e3 !default;\n\n$hr-margin-y:                 $spacer !default;\n\n// Paragraphs\n//\n// Style p element.\n\n$paragraph-margin-bottom:     1rem !default;\n\n// Icons\n//\n// Style .c-icon element.\n\n$icon-size-base:              1rem !default; // was: 1rem\n$icon-size-sm:                $icon-size-base * .875 !default;\n$icon-size-lg:                $icon-size-base * 1.25 !default;\n$icon-size-xl:                $icon-size-base * 1.5 !default;\n","// stylelint-disable property-blacklist, scss/dollar-variable-default\n\n// SCSS RFS mixin\n//\n// Automated font-resizing\n//\n// See https://github.com/twbs/rfs\n\n// Configuration\n\n// Base font size\n$rfs-base-font-size: 1.25rem !default;\n$rfs-font-size-unit: rem !default;\n\n// Breakpoint at where font-size starts decreasing if screen width is smaller\n$rfs-breakpoint: 1200px !default;\n$rfs-breakpoint-unit: px !default;\n\n// Resize font-size based on screen height and width\n$rfs-two-dimensional: false !default;\n\n// Factor of decrease\n$rfs-factor: 10 !default;\n\n@if type-of($rfs-factor) != \"number\" or $rfs-factor <= 1 {\n  @error \"`#{$rfs-factor}` is not a valid  $rfs-factor, it must be greater than 1.\";\n}\n\n// Generate enable or disable classes. Possibilities: false, \"enable\" or \"disable\"\n$rfs-class: false !default;\n\n// 1 rem = $rfs-rem-value px\n$rfs-rem-value: 16 !default;\n\n// Safari iframe resize bug: https://github.com/twbs/rfs/issues/14\n$rfs-safari-iframe-resize-bug-fix: false !default;\n\n// Disable RFS by setting $enable-responsive-font-sizes to false\n$enable-responsive-font-sizes: true !default;\n\n// Cache $rfs-base-font-size unit\n$rfs-base-font-size-unit: unit($rfs-base-font-size);\n\n// Remove px-unit from $rfs-base-font-size for calculations\n@if $rfs-base-font-size-unit == \"px\" {\n  $rfs-base-font-size: $rfs-base-font-size / ($rfs-base-font-size * 0 + 1);\n}\n@else if $rfs-base-font-size-unit == \"rem\" {\n  $rfs-base-font-size: $rfs-base-font-size / ($rfs-base-font-size * 0 + 1 / $rfs-rem-value);\n}\n\n// Cache $rfs-breakpoint unit to prevent multiple calls\n$rfs-breakpoint-unit-cache: unit($rfs-breakpoint);\n\n// Remove unit from $rfs-breakpoint for calculations\n@if $rfs-breakpoint-unit-cache == \"px\" {\n  $rfs-breakpoint: $rfs-breakpoint / ($rfs-breakpoint * 0 + 1);\n}\n@else if $rfs-breakpoint-unit-cache == \"rem\" or $rfs-breakpoint-unit-cache == \"em\" {\n  $rfs-breakpoint: $rfs-breakpoint / ($rfs-breakpoint * 0 + 1 / $rfs-rem-value);\n}\n\n// Responsive font-size mixin\n@mixin rfs($fs, $important: false) {\n  // Cache $fs unit\n  $fs-unit: if(type-of($fs) == \"number\", unit($fs), false);\n\n  // Add !important suffix if needed\n  $rfs-suffix: if($important, \" !important\", \"\");\n\n  // If $fs isn't a number (like inherit) or $fs has a unit (not px or rem, like 1.5em) or $ is 0, just print the value\n  @if not $fs-unit or $fs-unit != \"\" and $fs-unit != \"px\" and $fs-unit != \"rem\" or $fs == 0 {\n    font-size: #{$fs}#{$rfs-suffix};\n  }\n  @else {\n    // Variables for storing static and fluid rescaling\n    $rfs-static: null;\n    $rfs-fluid: null;\n\n    // Remove px-unit from $fs for calculations\n    @if $fs-unit == \"px\" {\n      $fs: $fs / ($fs * 0 + 1);\n    }\n    @else if $fs-unit == \"rem\" {\n      $fs: $fs / ($fs * 0 + 1 / $rfs-rem-value);\n    }\n\n    // Set default font-size\n    @if $rfs-font-size-unit == rem {\n      $rfs-static: #{$fs / $rfs-rem-value}rem#{$rfs-suffix};\n    }\n    @else if $rfs-font-size-unit == px {\n      $rfs-static: #{$fs}px#{$rfs-suffix};\n    }\n    @else {\n      @error \"`#{$rfs-font-size-unit}` is not a valid unit for $rfs-font-size-unit. Use `px` or `rem`.\";\n    }\n\n    // Only add media query if font-size is bigger as the minimum font-size\n    // If $rfs-factor == 1, no rescaling will take place\n    @if $fs > $rfs-base-font-size and $enable-responsive-font-sizes {\n      $min-width: null;\n      $variable-unit: null;\n\n      // Calculate minimum font-size for given font-size\n      $fs-min: $rfs-base-font-size + ($fs - $rfs-base-font-size) / $rfs-factor;\n\n      // Calculate difference between given font-size and minimum font-size for given font-size\n      $fs-diff: $fs - $fs-min;\n\n      // Base font-size formatting\n      // No need to check if the unit is valid, because we did that before\n      $min-width: if($rfs-font-size-unit == rem, #{$fs-min / $rfs-rem-value}rem, #{$fs-min}px);\n\n      // If two-dimensional, use smallest of screen width and height\n      $variable-unit: if($rfs-two-dimensional, vmin, vw);\n\n      // Calculate the variable width between 0 and $rfs-breakpoint\n      $variable-width: #{$fs-diff * 100 / $rfs-breakpoint}#{$variable-unit};\n\n      // Set the calculated font-size.\n      $rfs-fluid: calc(#{$min-width} + #{$variable-width}) #{$rfs-suffix};\n    }\n\n    // Rendering\n    @if $rfs-fluid == null {\n      // Only render static font-size if no fluid font-size is available\n      font-size: $rfs-static;\n    }\n    @else {\n      $mq-value: null;\n\n      // RFS breakpoint formatting\n      @if $rfs-breakpoint-unit == em or $rfs-breakpoint-unit == rem {\n        $mq-value: #{$rfs-breakpoint / $rfs-rem-value}#{$rfs-breakpoint-unit};\n      }\n      @else if $rfs-breakpoint-unit == px {\n        $mq-value: #{$rfs-breakpoint}px;\n      }\n      @else {\n        @error \"`#{$rfs-breakpoint-unit}` is not a valid unit for $rfs-breakpoint-unit. Use `px`, `em` or `rem`.\";\n      }\n\n      @if $rfs-class == \"disable\" {\n        // Adding an extra class increases specificity,\n        // which prevents the media query to override the font size\n        &,\n        .disable-responsive-font-size &,\n        &.disable-responsive-font-size {\n          font-size: $rfs-static;\n        }\n      }\n      @else {\n        font-size: $rfs-static;\n      }\n\n      @if $rfs-two-dimensional {\n        @media (max-width: #{$mq-value}), (max-height: #{$mq-value}) {\n          @if $rfs-class == \"enable\" {\n            .enable-responsive-font-size &,\n            &.enable-responsive-font-size {\n              font-size: $rfs-fluid;\n            }\n          }\n          @else {\n            font-size: $rfs-fluid;\n          }\n\n          @if $rfs-safari-iframe-resize-bug-fix {\n            // stylelint-disable-next-line length-zero-no-unit\n            min-width: 0vw;\n          }\n        }\n      }\n      @else {\n        @media (max-width: #{$mq-value}) {\n          @if $rfs-class == \"enable\" {\n            .enable-responsive-font-size &,\n            &.enable-responsive-font-size {\n              font-size: $rfs-fluid;\n            }\n          }\n          @else {\n            font-size: $rfs-fluid;\n          }\n\n          @if $rfs-safari-iframe-resize-bug-fix {\n            // stylelint-disable-next-line length-zero-no-unit\n            min-width: 0vw;\n          }\n        }\n      }\n    }\n  }\n}\n\n// The font-size & responsive-font-size mixin uses RFS to rescale font sizes\n@mixin font-size($fs, $important: false) {\n  @include rfs($fs, $important);\n}\n\n@mixin responsive-font-size($fs, $important: false) {\n  @include rfs($fs, $important);\n}\n","\n\n// Components\n//\n// Define common padding and border radius sizes and more.\n\n$line-height-lg:              1.5 !default;\n$line-height-sm:              1.5 !default;\n\n$border-width:                1px !default;\n$border-color:                $gray-200 !default;\n\n$border-theme-map: () !default;\n// stylelint-disable-next-line scss/dollar-variable-default\n$border-theme-map: map-merge(\n  (\n    light: (\n      \"border-color\": $border-color\n    )\n  ),\n  $border-theme-map\n);\n\n$border-radius:               .25rem !default;\n$border-radius-lg:            .3rem !default;\n$border-radius-sm:            .2rem !default;\n\n$rounded-pill:                50rem !default;\n\n$box-shadow-sm:               0 .125rem .25rem rgba($black, .075) !default;\n$box-shadow:                  0 .5rem 1rem rgba($black, .15) !default;\n$box-shadow-lg:               0 1rem 3rem rgba($black, .175) !default;\n\n$component-color:             $body-color !default;\n$component-bg:                $white !default;\n\n$component-active-color:      $white !default;\n$component-active-bg:         theme-color(\"primary\") !default;\n\n$caret-width:                 .3em !default;\n$caret-vertical-align:        $caret-width * .85 !default;\n$caret-spacing:               $caret-width * .85 !default;\n\n$transition-base:             all .2s ease-in-out !default;\n$transition-fade:             opacity .15s linear !default;\n$transition-collapse:         height .35s ease !default;\n\n$embed-responsive-aspect-ratios: () !default;\n// stylelint-disable-next-line scss/dollar-variable-default\n$embed-responsive-aspect-ratios: join(\n  (\n    (21 9),\n    (16 9),\n    (4 3),\n    (1 1),\n  ),\n  $embed-responsive-aspect-ratios\n);\n","// stylelint-disable property-blacklist\n// Single side border-radius\n\n@mixin border-radius($radius: $border-radius, $fallback-border-radius: false) {\n  @if $enable-rounded {\n    border-radius: $radius;\n  }\n  @else if $fallback-border-radius != false {\n    border-radius: $fallback-border-radius;\n  }\n}\n\n@mixin border-top-radius($radius) {\n  @if $enable-rounded {\n    border-top-left-radius: $radius;\n    border-top-right-radius: $radius;\n  }\n}\n\n@mixin border-right-radius($radius) {\n  @if $enable-rounded {\n    border-top-right-radius: $radius;\n    border-bottom-right-radius: $radius;\n  }\n}\n\n@mixin border-bottom-radius($radius) {\n  @if $enable-rounded {\n    border-bottom-right-radius: $radius;\n    border-bottom-left-radius: $radius;\n  }\n}\n\n@mixin border-left-radius($radius) {\n  @if $enable-rounded {\n    border-top-left-radius: $radius;\n    border-bottom-left-radius: $radius;\n  }\n}\n\n@mixin border-top-left-radius($radius) {\n  @if $enable-rounded {\n    border-top-left-radius: $radius;\n  }\n}\n\n@mixin border-top-right-radius($radius) {\n  @if $enable-rounded {\n    border-top-right-radius: $radius;\n  }\n}\n\n@mixin border-bottom-right-radius($radius) {\n  @if $enable-rounded {\n    border-bottom-right-radius: $radius;\n  }\n}\n\n@mixin border-bottom-left-radius($radius) {\n  @if $enable-rounded {\n    border-bottom-left-radius: $radius;\n  }\n}\n","//\n// CoreUI default colors\n//\n\n$white:     #fff !default;\n$black:     #000015 !default;\n\n// $black:     #000 !default;\n// $black:     #000b24 !default;\n\n// $gray-base: #212233 !default;\n\n// $gray-100:  #e9e9eb !default;\n// $gray-200:  #d3d3d6 !default;\n// $gray-300:  #bcbdc2 !default;\n// $gray-400:  #a6a7ad !default;\n// $gray-500:  #909099 !default;\n// $gray-600:  #7a7a85 !default;\n// $gray-700:  #646470 !default;\n// $gray-800:  #4d4e5c !default;\n// $gray-900:  #373847 !default;\n\n$gray-base: #3c4b64 !default;\n\n$gray-100:  #ebedef !default;\n$gray-200:  #d8dbe0 !default;\n$gray-300:  #c4c9d0 !default;\n$gray-400:  #b1b7c1 !default;\n$gray-500:  #9da5b1 !default;\n$gray-600:  #8a93a2 !default;\n$gray-700:  #768192 !default;\n$gray-800:  #636f83 !default;\n$gray-900:  #4f5d73 !default;\n\n$grays: () !default;\n// stylelint-disable-next-line scss/dollar-variable-default\n$grays: map-merge(\n  (\n    \"100\": $gray-100,\n    \"200\": $gray-200,\n    \"300\": $gray-300,\n    \"400\": $gray-400,\n    \"500\": $gray-500,\n    \"600\": $gray-600,\n    \"700\": $gray-700,\n    \"800\": $gray-800,\n    \"900\": $gray-900\n  ),\n  $grays\n);\n\n$primary-base:   #321fdb !default;\n\n$primary-100:    #eae9fb !default;\n$primary-200:    #d6d2fb !default;\n$primary-300:    #c1bcf4 !default;\n$primary-400:    #ada5f1 !default;\n$primary-500:    #988fed !default;\n$primary-600:    #8478ea !default;\n$primary-700:    #6f62e6 !default;\n$primary-800:    #5b4ce2 !default;\n$primary-900:    #4635df !default;\n\n$primary-dark:   #1f1498 !default;\n$primary:        #321fdb !default;\n$primary-50:     #988fed !default;\n$primary-25:     #ccc7f6 !default;\n\n\n$secondary-base: #3c4b64 !default;\n\n$secondary-100:  #ebedef !default;\n$secondary-200:  #d8dbe0 !default;\n$secondary-300:  #c4c9d0 !default;\n$secondary-400:  #b1b7c1 !default;\n$secondary-500:  #9da5b1 !default;\n$secondary-600:  #8a93a2 !default;\n$secondary-700:  #768192 !default;\n$secondary-800:  #636f83 !default;\n$secondary-900:  #4f5d73 !default;\n\n$secondary-dark: #212233 !default;\n$secondary:      #3c4b64 !default;\n$secondary-50:   #9da5b1 !default;\n$secondary-25:   #ced2d8 !default;\n\n\n$danger-dark:    #d93737 !default;\n$danger:         #e55353 !default;\n$danger-50:      #f2a9a9 !default;\n$danger-25:      #f9d4d4 !default;\n\n$info-dark:      #2982cc !default;\n$info:           #39f !default;\n$info-50:        #80c6ff !default;\n$info-25:        #c0e6ff !default;\n\n$success-dark:   #1b9e3e !default;\n$success:        #2eb85c !default;\n$success-50:     #96dbad !default;\n$success-25:     #cbedd6 !default;\n\n$warning-dark:   #f6960b !default;\n$warning:        #f9b115 !default;\n$warning-50:     #fcd88a !default;\n$warning-25:     #feecc5 !default;\n\n$light:           $gray-100 !default;\n$dark:            $gray-800 !default;\n\n$pink:           #e83e8c !default;\n\n$theme-colors: () !default;\n// stylelint-disable-next-line scss/dollar-variable-default\n$theme-colors: map-merge(\n  (\n    \"primary\":    $primary,\n    \"secondary\":  $secondary-25,\n    \"success\":    $success,\n    \"info\":       $info,\n    \"warning\":    $warning,\n    \"danger\":     $danger,\n    \"light\":      $light,\n    \"dark\":       $dark\n  ),\n  $theme-colors\n);\n\n// Set a specific jump point for requesting color jumps\n$theme-color-interval:      8% !default;\n\n// The yiq lightness value that determines when the lightness of color changes from \"dark\" to \"light\". Acceptable values are between 0 and 255.\n$yiq-contrasted-threshold:  150 !default;\n\n// Customize the light and dark text colors for use in our YIQ color contrast function.\n$yiq-text-dark:             $gray-900 !default;\n$yiq-text-light:            $white !default;\n"]}